{"version":3,"sources":["lib/graphql/mutations/Login/index.ts","lib/graphql/mutations/LogOut/index.ts","lib/graphql/mutations/CreateAccount/index.ts","lib/graphql/mutations/SaveUserAnswer/index.ts","lib/graphql/mutations/SavePartialAnswer/index.ts","lib/graphql/mutations/DoctorLogOut/index.ts","lib/graphql/mutations/DoctorLogIn/index.ts","lib/graphql/mutations/AddDiagnosis/index.ts","lib/graphql/mutations/AddDoctor/index.ts","lib/graphql/mutations/AddDoctorConfig/index.ts","lib/graphql/mutations/SelectConfig/index.ts","reportWebVitals.ts","lib/components/PrivateRoute/index.tsx","lib/components/LoadingIndicator/index.tsx","lib/components/ErrorIndicator/index.tsx","lib/components/ReportPdf/index.tsx","lib/components/ReturnToHomeHeader/index.tsx","lib/components/LineChart/index.tsx","lib/utils/constants.ts","lib/components/LineChartPopOver/index.tsx","sections/AppHeader/assets/logo.png","sections/Login/index.tsx","sections/Home/assets/cardIcon.png","lib/graphql/queries/QuestionnaireList/index.ts","lib/graphql/queries/QuestionnaireContent/index.ts","lib/graphql/queries/Report/index.ts","lib/graphql/queries/ReportForAdmin/index.ts","lib/graphql/queries/DoctorList/index.ts","lib/graphql/queries/CheckIfDoctorConfigNameUnique/index.ts","lib/graphql/queries/CheckIfDoctorNameUnique/index.ts","lib/graphql/queries/UserAnswer/index.ts","lib/graphql/queries/QueryUser/index.ts","lib/graphql/queries/DoctorConfigList/index.ts","sections/Home/components/EnterGenderAndAgeDialog/index.tsx","sections/Home/components/ChildrenEnterGenderAndAgeDialog/index.tsx","sections/Home/components/PhcssGenderAndAgeDialog/index.tsx","sections/Home/components/PsssGenderDialog/index.tsx","lib/components/SuccessIndicator/index.tsx","sections/Home/index.tsx","lib/graphql/mutations/PatientLogOut/index.ts","sections/Report/components/withReportPdfData/index.tsx","lib/graphql/globalTypes.ts","sections/AppHeader/index.tsx","sections/Sider/components/PersonalInfomation/index.tsx","sections/Sider/index.tsx","sections/Form/Components/ProgressBar/index.tsx","sections/Form/Components/Timer/index.tsx","sections/Form/Components/QuestionIndexText/index.tsx","sections/Form/Customization/yaleBrown/index.ts","sections/Form/Customization/embu/index.ts","sections/Form/Customization/psqi/index.tsx","sections/Form/index.tsx","sections/CreateAccount/index.tsx","sections/Report/index.tsx","sections/PatientInformation/components/AdditionalFieldsModal/index.tsx","sections/PatientInformation/components/SearchPatientForm/index.tsx","sections/PatientInformation/components/Header/index.tsx","sections/PatientInformation/components/LineChartsButton/index.tsx","sections/PatientInformation/components/AddDiagnosisModal/index.tsx","sections/PatientInformation/components/PatientTable/index.tsx","sections/PatientInformation/components/ChooseFormModal/index.tsx","sections/PatientInformation/components/HelpPopover/index.tsx","sections/PatientInformation/index.tsx","sections/PatientInformation/components/withReportPdfDataForAdmin/index.tsx","sections/Welcome/components/Header/index.tsx","sections/Welcome/components/DoctorLogInDialog/index.tsx","sections/Welcome/index.tsx","sections/PromptMessage/index.tsx","lib/graphql/mutations/PatientLogIn/index.ts","sections/PatientLogin/index.tsx","sections/CreateDoctor/components/AddDoctorDialog/index.tsx","sections/CreateDoctor/index.tsx","sections/DoctorConfig/components/AddConfigurationDialog/index.tsx","lib/utils/index.ts","sections/DoctorConfig/components/ConfigrationDetailDialog/index.tsx","lib/graphql/mutations/DeleteConfig/index.ts","sections/DoctorConfig/index.tsx","index.tsx"],"names":["gql","SAVE_USER_ANSWER","SAVE_PARTIAL_ANSWER","DOCTOR_LOG_OUT","DOCTOR_LOG_IN","ADD_DIAGNOSIS","ADD_DOCTOR","ADD_DOCTOR_CONFIG","SELECT_CONFIG","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","PrivateRoute","props","isAuthorized","children","rest","render","location","to","pathname","state","from","useStyles","makeStyles","theme","root","display","width","height","justifyContent","alignItems","LoadingIndicator","styles","className","CircularProgress","ErrorIndicator","showError","setShowError","errorMessage","Snackbar","open","onClose","elevation","variant","severity","pdfjs","GlobalWorkerOptions","workerSrc","createStyles","marginTop","paper","marginBottom","pdfViewer","topbar","returnButton","marginLeft","downloadButton","marginRight","printIcon","page","padding","ReportPdf","pdfData","closeReport","patientName","classes","React","useState","window","innerWidth","setWidth","updateWidth","useEffect","addEventListener","removeEventListener","numPages","setNumPages","IconButton","onClick","printJS","printable","type","base64","out","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","length","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","push","blob","Blob","b64toBlob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","remove","Divider","file","loading","onLoadSuccess","nextNumPages","el","index","Paper","pageNumber","renderMode","getElementById","offsetWidth","header","overflow","actionContainer","float","paddingRight","paddingTop","fontSize","ReturnToHomeHeader","Button","color","startIcon","canvasContainer","LineChart","labelList","dataList","multipleDataList","showLabel","chartRef","useRef","initRef","current","lineChart","getContext","Chart","data","labels","datasets","label","borderColor","backgroundColor","fill","lineTension","options","tooltips","mode","intersect","hover","maintainAspectRatio","responsive","scales","yAxes","ticks","beginAtZero","plugins","datalabels","anchor","align","formatter","Math","round","id","ref","EYSCENCK_FORM_NAME","EYSCENCK_CHILDREN_FORM_NAME","YAML_BROWN_FORM_KEY","PSSS_FORM_KEY","PSQI_FORM_KEY","PHCSS_FORM_KEY","EMBU_FORM_KEY","HIDE_LABEL_FORMS","HIDE_LABEL_KEYS","LineChartPopOver","formResultList","formName","formKey","fillInDateList","useMemo","map","formResult","fillInDate","resultList","Number","JSON","parse","result","total","resultObject","eTScore","pTScore","nTScore","lTScore","yaleBrownMind","yaleBrownBehavior","yaleBrownTotal","psssP","psssS","psssTotal","mdqTotal","psqiTotal","phcssTotal","listToReturn","fatherLabels","fatherColors","fatherFactorsData","embuIsFatherAnswerCompleted","embuFatherComponents","motherLabel","motherColors","motherFactorsData","embuIsMotherAnswerCompleted","embuMotherComponents","includes","isDialogOpen","setIsDialogOpen","size","disabled","Dialog","DialogTitle","DialogContent","logInCard","borderRadius","margin","logInText","textAlign","promptText","input","inputContainer","userNameInput","passwordInput","buttonContainer","logo","logoContainer","pageContainer","topPadding","initialAccountInfo","userName","password","Login","setDoctor","setViewer","doctor","useMutation","onCompleted","doctorLogIn","name","didRequest","setIsRedo","onError","error","setIsLogInErrorShown","doctorLoginRef","accountInfo","setAccountInfo","isNameAndPasswordValidated","setIsNameAndPasswordValidated","isLogInErrorShown","handleKeyPress","event","key","logInButtonOnClick","isRedo","detectRedoRef","history","variables","useHistory","isDoctor","Card","CardContent","src","alt","TextField","autoFocus","value","onChange","e","target","helperText","undefined","inputProps","QUESTIONNAIRE_LIST","QUESTIONNAIRE_CONTENT","REPORT","REPORT_FOR_ADMIN","DOCTOR_LIST","CHECK_IF_DOCTOR_CONFIG_USER_NAME_UNIQUE","CHECK_IF_DOCTOR_USER_NAME_UNIQUE","QUERY_USER","DOCTOR_CONFIG_LIST","EnterGenderAndAgeDialog","isOpen","handleClose","goToLogInPage","age","gender","DialogContentText","DialogActions","ChildrenEnterGenderAndAgeDialog","PhcssGenderAndAgeDialog","PsssGenderDialog","SuccessIndicator","showSuccess","setShowSuccess","successMessage","anchorOrigin","vertical","horizontal","content","listName","gridTemplateColumns","rowGap","columnGap","card","cardActionArea","cursor","indigo","cardIcon","unfinishedText","finishedText","questionnaireName","lineHeight","cardActionContainer","paddingLeft","noOverflow","textOverflow","whiteSpace","pageHeader","refreshButtonContainer","cardContent","Home","patient","isSmallScreen","useMediaQuery","useQuery","fetchPolicy","isReport","refetch","listData","uniqueFormList","formList","formSet","Set","questionnaireList","forEach","questionnaire","has","displayedFillInDate","add","isGenderAndAgeDialogOpen","setIsGenderAndAgeDialogOpen","isChildrenGenderAndAgeDialogOpen","setIsChildrenGenderAndAgeDialogOpen","isPhcssDialogOpen","setIsPhcssDialogOpen","isPsssDialogOpen","setIsPsssDialogOpen","closeGenderAndAgeDialog","closeChildrenGenderAndAgeDialog","closePhcssDialog","isSuccessShown","setIsSuccessShown","setSuccessMessage","reloadButtonOnClick","defaultReturn","test","nameMatchFormResult","match","abbreviationMatchFormResult","substring","abbreviation","replace","goToFormPage","formId","finishStatus","done","List","subheader","ListSubheader","ListItem","button","ListItemAvatar","CardIcon","ListItemText","primary","secondary","CardActionArea","CardActions","WrappedComponent","UsersFilter","PATIENT_LOG_OUT","flexGrow","zIndex","drawer","spacing","maxWidth","maxHeight","title","timerHeader","AppHeader","viewer","doctorLogOut","sessionStorage","removeItem","console","log","logOut","patientLogOut","handleLogout","isSiderPermanent","path","exact","AppBar","position","Toolbar","edge","aria-label","setIsSiderOpen","propertyName","propertyDivider","fields","displayNames","PersonalInformation","field","validIndexes","validIndex","flexShrink","patientDrawer","personalInfoCard","personalInfoCardContent","paddingBottom","personalInfoText","fontWeight","drawerPaper","idChip","adminMenu","adminMenuHeader","link","Sider","useLocation","isPermanent","Drawer","ListItemIcon","Chip","icon","PROGRESS_BAR_WIDTH","finished","leftCircle","circle","circlewrapper","rightCircle","rightCircleWrapper","ProgressBar","totalNumber","currentIndex","widthOfFinishedPart","style","timeNumber","userSelect","WebkitUserSelect","WebkitTouchCallout","KhtmlUserSelect","MozUserSelect","msUserSelect","Timer","seconds","setSeconds","interval","setTimeout","clearTimeout","hour","floor","minute","second","CHINESE_INDEXES","QuestionIndexText","text","totalSize","String","yaleBrownCustomization","setAnswers","setChoiceDisabled","choiceDisabled","newAnswers","currentQuestionIndex","autoChooseChoices","newChoiceDisabled","choices","autoChooseChoiceIndex","yaleBrownSkipQuestions","currentQuestionnIndex","setCurrentQuestionIndex","choice","setIsAllowedToSubmit","embuRadioButtonOnClick","selectChoiceLockRef","answers","setIsNextButtonDisabled","timeoutRef","needAddOne","questions","timeout","embuValidationAll","questionNumber","setIsErrorDialogShown","setErrorDialogMessage","setErrorDialogQuestionIndex","isAllEvenQuestionAnswered","isAllOddQuestionAnswered","isAllEvenQuestionNotAnswered","isAllOddQuestionNotAnswered","firstUndefinedIndex","psqiValidation","setErrorMessage","formContainer","form","titleCard","titleCardColor","borderTopLeftRadius","borderTopRightRadius","PRIMARY_COLOR","titleCardContent","titleCardMainText","questionCard","questionText","questionOptionText","buttonWithRightMargin","homeLink","exitButton","right","bottom","timerContaner","left","footer","progressWrapper","progressWrapperForSmallScreen","questionParent","answerInput","embuRadioContainer","Form","URLSearchParams","search","get","partialAnswer","initChoiceDisabled","question","_choice","yaleBrownInitialLoad","localPartialAnswer","localStorage","getItem","answerObject","Date","date","time","answerArray","unfinishedQuestionIndex","answer","min","embuLoadPartialAnswers","saveUserAnswer","setIsDone","savePartialAnswer","saveUserAnswerRef","savePartialAnswerRef","autoSaveTimeoutRef","isDone","isAllowedToSubmit","isNextButtonDisabled","confirmed","setConfirmed","isErrorShown","setIsErrorShown","isErrorDialogShown","errorDialogMessage","errorDialogQuestionIndex","getAnswerArray","useCallback","numberOfQuestions","savePartialAnswerToBackend","questionnaireId","Promise","resolve","savePartialAnswerToLocalStorage","setItem","stringify","closeConfirmDialog","validation","all","onNextButtonClick","onSubmit","onBackButtonClick","goToHome","handleExitButtonClick","checkNextButtonShouldDisable","embuShouldDisableNextButton","currentQuestion","Link","preventDefault","parent","split","RadioGroup","selectedChoice","indexOf","FormControl","component","FormControlLabel","control","Radio","questionIndex","radioButtonOnClick","FormLabel","checked","Fab","instruction","createAccountCard","createAccountText","formClassifyText","PdfViewer","userAnswerIds","pageSize","report","pdf","questionnaireTable","doneIcon","pageSizeSelect","minWidth","Report","count","setNumberOfFinishedQuestionnaires","newselectedUserAnswers","userAnswerId","setSelectedUserAnswers","selectedUserAnswers","setPageSize","numberOfFinishedQuestionnaires","isReportVisible","setIsReportVisible","selectedQuestionnaireArray","TableContainer","Table","aira-label","TableHead","TableRow","TableCell","Checkbox","TableBody","delete","selectQuestionnaire","CheckCircleOutline","InputLabel","Select","labelId","MenuItem","fieldsContainer","ADDITIONAL_FIELD_KEYS","ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES","removeElementFromArray","array","element","newArray","currentElement","AdditionalFieldsModal","handleDialogClose","additionalFields","setAdditionalFields","handleAdditionalFieldsSearch","selectedFields","setSelectedFields","aria-labelledby","fullWidth","displayName","fieldKey","AGE_NEGATIVE_ERROR_MESSAGE","rangeWrapper","ageRangeInput","dateRangeWrapper","ageRangeWrapper","dateRangeInput","ageInputIconWrapper","buttonWrapper","extraFieldsWrapper","searchButton","whiteButton","rangeFormWrapper","ageInputIcon","chip","additionalFieldButton","datePickerProps","format","okLabel","cancelLabel","invalidLabel","maxDateMessage","minDateMessage","invalidDateMessage","SearchPatientForm","forwardRef","searchPatients","limit","setCurrentPageIndex","currentPageIndex","filter","searchMyPatients","setUserName","setName","setGender","max","ageRange","setAgeRange","dateRange","setDateRange","onlyMyPatient","setOnlyMyPatient","errorField","setErrorField","isAdditionalFieldsModalOpen","setIsAdditionalFieldsModalOpen","handleSearchButtonClick","minSignUpDate","year","getFullYear","month","getMonth","day","getDate","maxSignUpDate","useImperativeHandle","noValidate","autoComplete","newMinAge","newMaxAge","utils","DateFnsUtils","locale","cnLocale","DatePicker","_value","onDelete","INITAL_ONLY_MY_PATIENT","Header","LineChartsButton","finishedForms","isButtonDisabled","newResultList","reverse","setIsOpen","closeModal","diagnosisText","AddDiagnosisModal","patientId","addDiagnosis","setDiagnosis","diagnosis","handleComfirm","shrink","option","loadingIndicatorWrapper","reportButton","lineChartsButtonContainer","tableCell","iconMargin","tableColumnTexts","tableColumns","tableMinWidth","tableMaxWidth","PatientTable","patientList","selectedUserAnswerIds","setSelectedUserId","setSelectedUserAnswerIds","setIsReportShown","handleLimitChange","handleCurrentPageIndexChange","handleSortChange","setPrintPageSize","setPrintPatientName","isChooseFormModalShown","setIsChooseFormModalShown","finishedFormList","setFinishedFormList","isAddDiagnosisModalShown","setIsAddDiagnosisModalShown","addDiagnosisPatientId","setAddDiagnosisPatientId","addDiagnosisPatientName","setAddDiagnosisPatientName","handleEditDiagnosisButtonClick","queryUser","users","TablePagination","rowsPerPage","rowsPerPageOptions","onChangePage","_event","onChangeRowsPerPage","labelDisplayedRows","ceil","TableSortLabel","active","direction","DATE_LATEST","patientInformation","isReportButtonDisabled","column","userId","finishedForm","handleReportButtonClick","onOkButtonClick","popover","pointerEvents","ChooseFormModal","aria-describedby","currentUserAnswerId","doctorName","hiddenContent","reportForAdmin","withReportPdfDataForAdmin","PatientInformation","useLazyQuery","getQueryResult","userListData","searchFormRef","setLimit","setFilter","selectedUserId","isReportShown","getQueryResultRef","searchParams","setSearchParams","isPdfViewerShown","Boolean","printPageSize","printPatientName","params","newFilter","DATE_OLDEST","welcomeMessage","DoctorLogInDialog","handleClickLogIn","handleDoctorLogIn","hideErrorIndicator","setPassword","hideError","handleClickCancel","Grid","container","item","background","minHeight","flexDirection","enterSystemButtonContainer","extendedIcon","seuText","Welcome","logIn","doctorLogInDialogRef","logInResult","titleWrapper","promptTextContainer","titleContainer","PromptMessage","endIcon","PATIENT_LOG_IN","personalInformationContainer","actionsWrapper","actionsContainer","PatientLogin","setPatient","queryParams","handleNextButtonClick","isBasicInformationShown","handleLogInButtonClick","patientLogIn","isUserNameValidated","setIsUserNameValidated","isNameValidated","setIsNameValidated","userInfo","setAge","education","setEducation","jobStatus","setJobStatus","marriageStatus","setMarriageStatus","setShowLoadSuccess","setIsBasicInformationShown","showLoadSuccess","handleCloseLoadSuccess","showNameErrorMessage","setShowNameErrorMessage","handleCloseNameErrorMessage","userNameFromQueryParams","required","InputProps","startAdornment","InputAdornment","autoHideDuration","Alert","AddDoctorDialog","closeDialog","checkDoctorUserName","checkResult","addDoctor","refetchListData","setUserNameInput","nameInput","setNameInput","setPasswordInput","secondPasswordInput","setSecondPasswordInput","userNameDuplicate","setUserNameDubplicate","debouncedCheckDoctorUserName","debounce","checkIfDoctorUserNameUnique","handleAddButtonClick","list","paginationContainer","totalNumberText","avatar","blue","CreateDoctor","checkDoctorName","checkNameData","isAddDoctorDialogOpen","setIsAddDoctorDialogOpen","doctorList","Pagination","pageIndex","admins","admin","Fragment","Avatar","AddConfigurationDialog","checkConfigName","checkConfigNameResult","addDoctorConfig","debouncedCheckConfigName","func","waitTime","args","later","checkedFormIds","setCheckedFormIds","checkIfDoctorConfigNameUnique","doctorConfigName","ListItemSecondaryAction","Switch","currentId","configName","selected","formIds","addResult","ConfirationDetailDialog","config","DELETE_CONFIG","configCard","configNameContainer","settingIcon","configPromptMessage","inUseText","resetButton","cardDescription","deleteButton","DoctorConfig","isAddConfigDialogOpen","setIsAddConfigDialogOpen","selectedConfig","setSelectedConfig","isConfigrationDetailDialogOpen","setIsConfigrationDetailDialogOpen","configList","configListLoading","showAll","formListData","selectConfig","deleteConfig","currentlyUsedConfig","configInUseList","doctorConfigList","configs","configId","disableRipple","httpLink","HttpLink","uri","logoutLink","errorHandler","graphQLErrors","message","reload","client","ApolloClient","cache","InMemoryCache","concat","headers","initialViewer","token","catelogy","initialDoctor","contentContainer","App","isSiderOpen","doctorLogInLoading","doctorLogInRef","patientLogInLoading","patientLogInRef","createMuiTheme","palette","light","main","dark","contrastText","zhCN","ReactDOM","ThemeProvider"],"mappings":"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","file":"static/js/main.0a511b08.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const LOG_IN = gql`\n  mutation LogIn($input: LogInInput) {\n    logIn(input: $input) {\n      ... on UserViewer {\n        token\n        name\n        userName\n        gender\n        education\n        jobStatus\n        age\n        marriageStatus\n        didRequest\n        catelogy\n      }\n      ... on AdminViewer {\n        name\n        userName\n        didRequest\n        token\n        catelogy\n      }\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const LOG_OUT = gql`\n  mutation Logout {\n    logOut {\n      ... on UserViewer {\n        id\n        token\n        didRequest\n        catelogy\n      }\n      ... on AdminViewer {\n        id\n        token\n        didRequest\n        catelogy\n      }\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const CREATE_ACCOUNT = gql`\n  mutation CreateAccount($input: CreateAccountInput) {\n    createAccount(input: $input) {\n      token\n      name\n      userName\n      gender\n      education\n      jobStatus\n      marriageStatus\n      didRequest\n      age\n      catelogy\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const SAVE_USER_ANSWER = gql`\n  mutation SaveUserAnswer($input: UserAnswerInput) {\n    saveUserAnswer(input: $input) {\n      didRequest\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const SAVE_PARTIAL_ANSWER = gql`\n  mutation SavePartialAnswer($input: UserAnswerInput) {\n    savePartialAnswer(input: $input) {\n      didRequest\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const DOCTOR_LOG_OUT = gql`\n  mutation DoctorLogOut {\n    doctorLogOut {\n      didRequest\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const DOCTOR_LOG_IN = gql`\n  mutation DoctorLogIn($input: DoctorLoginInput) {\n    doctorLogIn(input: $input) {\n      name\n      userName\n      didRequest\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const ADD_DIAGNOSIS = gql`\n  mutation AddDiagnosis($input: AddDiagnosisInput) {\n    addDiagnosis(input: $input) {\n      result\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const ADD_DOCTOR = gql`\n  mutation AddDoctor($input: AddDoctorInput) {\n    addDoctor(input: $input) {\n      result\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const ADD_DOCTOR_CONFIG = gql`\n  mutation AddDoctorConfig($input: DoctorConfigInput) {\n    addDoctorConfig(input: $input) {\n      result\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const SELECT_CONFIG = gql`\n  mutation SelectConfig($input: SelectConfigInput) {\n    selectConfig(input: $input) {\n      result\n    }\n  }\n`;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { ReactNode } from \"react\";\nimport { Redirect, Route, RouteProps } from \"react-router-dom\";\n\ninterface Props extends RouteProps {\n  isAuthorized: boolean;\n  children: ReactNode;\n}\n\nexport const PrivateRoute = (props: Props) => {\n  const { isAuthorized, children, ...rest } = props;\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuthorized ? (\n          children\n        ) : (\n          <Redirect to={{ pathname: \"/login\", state: { from: location } }} />\n        )\n      }\n    />\n  );\n};\n","import { CircularProgress, makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}));\nexport const LoadingIndicator = () => {\n  const styles = useStyles();\n  return (\n    <div className={styles.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n","import { Snackbar } from \"@material-ui/core\";\nimport React from \"react\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\ninterface Props {\n  showError: boolean;\n  setShowError: (showError: boolean) => void;\n  errorMessage: string;\n}\n\nexport const ErrorIndicator = (props: Props) => {\n  const { showError, setShowError, errorMessage } = props;\n  return (\n    <Snackbar open={showError} onClose={() => setShowError(false)}>\n      <MuiAlert\n        elevation={6}\n        variant=\"filled\"\n        severity=\"error\"\n        onClose={() => setShowError(false)}\n      >\n        {errorMessage}\n      </MuiAlert>\n    </Snackbar>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Document, Page } from \"react-pdf\";\nimport { pdfjs } from \"react-pdf\";\nimport {\n  createStyles,\n  Divider,\n  IconButton,\n  makeStyles,\n  Paper,\n  Theme,\n} from \"@material-ui/core\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport printJS from \"print-js\";\nimport PrintIcon from \"@material-ui/icons/Print\";\n\npdfjs.GlobalWorkerOptions.workerSrc = \"/pdf.worker.js\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      marginTop: 10,\n    },\n    paper: {\n      marginBottom: 10,\n    },\n    pdfViewer: {},\n    topbar: {\n      height: 48,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n    },\n    returnButton: {\n      marginLeft: 5,\n    },\n    downloadButton: {\n      marginRight: 5,\n    },\n    printIcon: {},\n    page: {\n      padding: 3,\n    },\n  })\n);\n\ninterface Props {\n  pdfData: string;\n  closeReport: () => void;\n  patientName?: string;\n}\n\nexport const ReportPdf = ({ pdfData, closeReport, patientName }: Props) => {\n  const classes = useStyles();\n\n  const [width, setWidth] = React.useState(window.innerWidth);\n\n  const updateWidth = () => {\n    if (window.innerWidth !== width) setWidth(window.innerWidth);\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateWidth);\n    return () => window.removeEventListener(\"resize\", updateWidth);\n  });\n  const printReport = () => {\n    printJS({\n      printable: `${pdfData}`,\n      type: \"pdf\",\n      base64: true,\n    });\n  };\n  const [numPages, setNumPages] = useState<number>(0);\n  const onDocumentLoadSuccess = ({\n    numPages: nextNumPages,\n  }: {\n    numPages: number;\n  }) => {\n    setNumPages(nextNumPages);\n  };\n\n  return (\n    <>\n      <div>\n        <div className={classes.topbar}>\n          <IconButton onClick={closeReport} className={classes.returnButton}>\n            <ArrowBackIcon />\n          </IconButton>\n          <div>\n            <IconButton className={classes.printIcon} onClick={printReport}>\n              <PrintIcon />\n            </IconButton>\n            <IconButton\n              className={classes.downloadButton}\n              onClick={() => {\n                const b64toBlob = (\n                  b64Data: string,\n                  contentType = \"\",\n                  sliceSize = 512\n                ) => {\n                  const byteCharacters = atob(b64Data);\n                  const byteArrays = [];\n\n                  for (\n                    let offset = 0;\n                    offset < byteCharacters.length;\n                    offset += sliceSize\n                  ) {\n                    const slice = byteCharacters.slice(\n                      offset,\n                      offset + sliceSize\n                    );\n\n                    const byteNumbers = new Array(slice.length);\n                    for (let i = 0; i < slice.length; i++) {\n                      byteNumbers[i] = slice.charCodeAt(i);\n                    }\n\n                    const byteArray = new Uint8Array(byteNumbers);\n                    byteArrays.push(byteArray);\n                  }\n\n                  const blob = new Blob(byteArrays, { type: contentType });\n                  return blob;\n                };\n                const out = b64toBlob(pdfData, \"application/pdf\");\n                const a = document.createElement(\"a\");\n                const url = window.URL.createObjectURL(out);\n                a.href = url;\n                a.download = patientName\n                  ? `${patientName}-心理评估报告单.pdf`\n                  : \"心理评估报告单.pdf\";\n                document.body.appendChild(a);\n                a.click();\n                a.remove();\n              }}\n            >\n              <CloudDownloadIcon />\n            </IconButton>\n          </div>\n        </div>\n        <Divider />\n      </div>\n      <div className={classes.root}>\n        <Document\n          file={`data:application/pdf;base64,${pdfData}`}\n          loading={<div></div>}\n          className={classes.pdfViewer}\n          onLoadSuccess={onDocumentLoadSuccess}\n        >\n          {Array.from(new Array(numPages), (el, index) => (\n            <Paper elevation={3} className={classes.paper} key={index}>\n              <Page\n                pageNumber={index + 1}\n                loading={<></>}\n                renderMode=\"svg\"\n                width={\n                  document.getElementById(\"root\")\n                    ? (document.getElementById(\"root\")!.offsetWidth > 750\n                        ? document.getElementById(\"root\")!.offsetWidth - 240\n                        : document.getElementById(\"root\")!.offsetWidth) * 0.8\n                    : 1000\n                }\n              />\n            </Paper>\n          ))}\n        </Document>\n      </div>\n    </>\n  );\n};\n","import { makeStyles, Theme, createStyles, Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport HomeIcon from \"@material-ui/icons/Home\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    header: {\n      overflow: \"hidden\",\n    },\n    actionContainer: {\n      float: \"right\",\n      paddingRight: 10,\n      paddingTop: 10,\n      fontSize: \"0.875rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n  })\n);\nexport const ReturnToHomeHeader = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.header}>\n      <span className={classes.actionContainer}>\n        <Link to=\"/\">\n          <Button color=\"secondary\" startIcon={<HomeIcon />}>\n            返回主页\n          </Button>\n        </Link>\n      </span>\n    </div>\n  );\n};\n","import React, { useEffect, useRef } from \"react\";\nimport Chart, { ChartDataSets } from \"chart.js\";\nimport \"chartjs-plugin-datalabels\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core\";\n\ninterface Props {\n  labelList: string[];\n  dataList?: number[];\n  multipleDataList?: ChartDataSets[];\n  showLabel: boolean;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    canvasContainer: {\n      width: 550,\n      height: 400,\n    },\n  })\n);\n\nexport const LineChart = ({\n  labelList,\n  dataList,\n  multipleDataList,\n  showLabel,\n}: Props) => {\n  const classes = useStyles();\n  const chartRef = useRef<HTMLCanvasElement>(null);\n  const init = () => {\n    if (chartRef.current) {\n      const lineChart = chartRef.current.getContext(\"2d\");\n      if (lineChart)\n        new Chart(lineChart, {\n          type: \"line\",\n          data: {\n            //Bring in data\n            labels: labelList,\n            datasets: multipleDataList\n              ? multipleDataList\n              : [\n                  {\n                    label: \"得分\",\n                    data: dataList,\n                    borderColor: \"#0d47a1\",\n                    backgroundColor: \"#bbdefb\",\n                    fill: false,\n                    lineTension: 0,\n                  },\n                ],\n          },\n          options: {\n            tooltips: {\n              mode: \"index\",\n              intersect: false,\n            },\n            hover: {\n              mode: \"nearest\",\n              intersect: true,\n            },\n            maintainAspectRatio: false,\n            responsive: true,\n            scales: {\n              yAxes: [\n                {\n                  ticks: {\n                    beginAtZero: true,\n                  },\n                },\n              ],\n            },\n            plugins: {\n              datalabels: {\n                anchor: \"start\",\n                align: \"top\",\n                formatter: Math.round,\n                display: showLabel ? true : false,\n              },\n            },\n          },\n        });\n    }\n  };\n  const initRef = useRef(init);\n  useEffect(() => {\n    initRef.current();\n  }, []);\n  return (\n    <div className={classes.canvasContainer}>\n      <canvas id=\"line-chart\" ref={chartRef} />\n    </div>\n  );\n};\n","export const EYSCENCK_FORM_NAME = \"艾森克个性测试（EPQ）\";\nexport const EYSCENCK_CHILDREN_FORM_NAME = \"艾森克个性测试儿童版（EPQ）\";\nexport const SCL_90_NAME = \"90项症状清单（SCL-90）\";\nexport const YAML_BROWN_FORM_KEY = \"yale-brown\";\nexport const PSSS_FORM_KEY = \"psss\";\nexport const MDQ_FORM_KEY = \"mdq\";\nexport const PSQI_FORM_KEY = \"psqi\";\nexport const PHCSS_FORM_KEY = \"phcss\";\nexport const EMBU_FORM_KEY = \"embu\";\nexport const NO_DOCTOR_LOGIN_ERROR_MESSAGE = \"No doctor login!\";\nexport const NO_PATIENT_LOGIN_ERROR_MESSAGE = \"No patient login!\";\n","import {\n  Button,\n  // createStyles,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  // makeStyles,\n  // Theme,\n} from \"@material-ui/core\";\nimport React, { useMemo, useState } from \"react\";\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport {\n  EysenckFormResult,\n  MdqResult,\n  PsqiResult,\n  PsssResult,\n  YamlBrownResult,\n  PhcssResult,\n  EmbuResult,\n} from \"./type\";\nimport { ChartDataSets } from \"chart.js\";\nimport {\n  EMBU_FORM_KEY,\n  EYSCENCK_CHILDREN_FORM_NAME,\n  EYSCENCK_FORM_NAME,\n  MDQ_FORM_KEY,\n  PHCSS_FORM_KEY,\n  PSQI_FORM_KEY,\n  PSSS_FORM_KEY,\n  SCL_90_NAME,\n  YAML_BROWN_FORM_KEY,\n} from \"../../utils/constants\";\nimport { FormResult } from \"../../../sections\";\nimport { LineChart } from \"..\";\n\n// const useStyles = makeStyles((theme: Theme) => createStyles({}));\n\ninterface Props {\n  formResultList: FormResult[];\n  formName: string;\n  formKey: string;\n}\n\nconst HIDE_LABEL_FORMS = [EYSCENCK_FORM_NAME, EYSCENCK_CHILDREN_FORM_NAME];\nconst HIDE_LABEL_KEYS: string[] = [EMBU_FORM_KEY];\n\nexport const LineChartPopOver = (props: Props) => {\n  const { formResultList, formName, formKey } = props;\n  const fillInDateList = useMemo(\n    () => formResultList.map((formResult) => formResult.fillInDate),\n    [formResultList]\n  );\n  const resultList = useMemo(() => {\n    if (formName === SCL_90_NAME) {\n      return formResultList.map((formResult) =>\n        Number(JSON.parse(formResult.result).total)\n      );\n    }\n    return formResultList.map((formResult) => Number(formResult.result));\n  }, [formResultList, formName]);\n  const multipleDataList: undefined | ChartDataSets[] = useMemo(() => {\n    if (\n      formName === EYSCENCK_FORM_NAME ||\n      formName === EYSCENCK_CHILDREN_FORM_NAME\n    ) {\n      const eArray = formResultList.map((formResult) => {\n        const resultObject: EysenckFormResult = JSON.parse(formResult.result);\n        return Number(resultObject.eTScore);\n      });\n      const pArray = formResultList.map((formResult) => {\n        const resultObject: EysenckFormResult = JSON.parse(formResult.result);\n        return Number(resultObject.pTScore);\n      });\n      const nArray = formResultList.map((formResult) => {\n        const resultObject: EysenckFormResult = JSON.parse(formResult.result);\n        return Number(resultObject.nTScore);\n      });\n      const lArray = formResultList.map((formResult) => {\n        const resultObject: EysenckFormResult = JSON.parse(formResult.result);\n        return Number(resultObject.lTScore);\n      });\n      return [\n        {\n          label: \"E量表得分\",\n          data: eArray,\n          borderColor: \"#0d47a1\",\n          backgroundColor: \"#0d47a1\",\n          lineTension: 0,\n          fill: false,\n        },\n        {\n          label: \"P量表得分\",\n          data: pArray,\n          borderColor: \"#4caf50\",\n          backgroundColor: \"#4caf50\",\n          fill: false,\n          lineTension: 0,\n        },\n        {\n          label: \"N量表得分\",\n          data: nArray,\n          borderColor: \"#ffeb3b\",\n          backgroundColor: \"#ffeb3b\",\n          fill: false,\n          lineTension: 0,\n        },\n        {\n          label: \"L量表得分\",\n          data: lArray,\n          borderColor: \"#d32f2f\",\n          backgroundColor: \"#d32f2f\",\n          fill: false,\n          lineTension: 0,\n        },\n      ];\n    } else if (formKey === YAML_BROWN_FORM_KEY) {\n      const mindArray = formResultList.map((formResult) => {\n        const resultObject: YamlBrownResult = JSON.parse(formResult.result);\n        return resultObject.yaleBrownMind;\n      });\n      const behaviorArray = formResultList.map((formResult) => {\n        const resultObject: YamlBrownResult = JSON.parse(formResult.result);\n        return resultObject.yaleBrownBehavior;\n      });\n      const totalArray = formResultList.map((formResult) => {\n        const resultObject: YamlBrownResult = JSON.parse(formResult.result);\n        return resultObject.yaleBrownTotal;\n      });\n      return [\n        {\n          label: \"强迫思维部分分数\",\n          data: mindArray,\n          borderColor: \"#0d47a1\",\n          backgroundColor: \"#0d47a1\",\n          lineTension: 0,\n          fill: false,\n        },\n        {\n          label: \"强迫行为部分分数\",\n          data: behaviorArray,\n          borderColor: \"#4caf50\",\n          backgroundColor: \"#4caf50\",\n          fill: false,\n          lineTension: 0,\n        },\n        {\n          label: \"两部分总分\",\n          data: totalArray,\n          borderColor: \"#d32f2f\",\n          backgroundColor: \"#d32f2f\",\n          fill: false,\n          lineTension: 0,\n        },\n      ];\n    } else if (formKey === PSSS_FORM_KEY) {\n      const pArray = formResultList.map((formResult) => {\n        const resultObject: PsssResult = JSON.parse(formResult.result);\n        return resultObject.psssP;\n      });\n      const sArray = formResultList.map((formResult) => {\n        const resultObject: PsssResult = JSON.parse(formResult.result);\n        return resultObject.psssS;\n      });\n      const totalArray = formResultList.map((formResult) => {\n        const resultObject: PsssResult = JSON.parse(formResult.result);\n        return resultObject.psssTotal;\n      });\n      return [\n        {\n          label: \"心理（P）因子分数\",\n          data: pArray,\n          borderColor: \"#0d47a1\",\n          backgroundColor: \"#0d47a1\",\n          lineTension: 0,\n          fill: false,\n        },\n        {\n          label: \"躯体（S）因子分数\",\n          data: sArray,\n          borderColor: \"#4caf50\",\n          backgroundColor: \"#4caf50\",\n          fill: false,\n          lineTension: 0,\n        },\n        {\n          label: \"总分\",\n          data: totalArray,\n          borderColor: \"#d32f2f\",\n          backgroundColor: \"#d32f2f\",\n          fill: false,\n          lineTension: 0,\n        },\n      ];\n    } else if (formKey === MDQ_FORM_KEY) {\n      const totalArray = formResultList.map((formResult) => {\n        const resultObject: MdqResult = JSON.parse(formResult.result);\n        return resultObject.mdqTotal;\n      });\n      return [\n        {\n          label: \"总分\",\n          data: totalArray,\n          borderColor: \"#d32f2f\",\n          backgroundColor: \"#d32f2f\",\n          fill: false,\n          lineTension: 0,\n        },\n      ];\n    } else if (formKey === PSQI_FORM_KEY) {\n      const totalArray = formResultList.map((formResult) => {\n        const resultObject: PsqiResult = JSON.parse(formResult.result);\n        return resultObject.psqiTotal;\n      });\n      // const aArray = formResultList.map((formResult) => {\n      //   const resultObject: PsqiResult = JSON.parse(formResult.result);\n      //   return resultObject.psqiA;\n      // });\n      // const bArray = formResultList.map((formResult) => {\n      //   const resultObject: PsqiResult = JSON.parse(formResult.result);\n      //   return resultObject.psqiB;\n      // });\n      // const cArray = formResultList.map((formResult) => {\n      //   const resultObject: PsqiResult = JSON.parse(formResult.result);\n      //   return resultObject.psqiC;\n      // });\n      // const dArray = formResultList.map((formResult) => {\n      //   const resultObject: PsqiResult = JSON.parse(formResult.result);\n      //   return resultObject.psqiD;\n      // });\n      // const eArray = formResultList.map((formResult) => {\n      //   const resultObject: PsqiResult = JSON.parse(formResult.result);\n      //   return resultObject.psqiE;\n      // });\n      // const fArray = formResultList.map((formResult) => {\n      //   const resultObject: PsqiResult = JSON.parse(formResult.result);\n      //   return resultObject.psqiF;\n      // });\n      // const gArray = formResultList.map((formResult) => {\n      //   const resultObject: PsqiResult = JSON.parse(formResult.result);\n      //   return resultObject.psqiG;\n      // });\n      return [\n        {\n          label: \"总分\",\n          data: totalArray,\n          borderColor: \"#d32f2f\",\n          backgroundColor: \"#d32f2f\",\n          fill: false,\n          lineTension: 0,\n        },\n        // {\n        //   label: \"因子A（主观睡眠质量）\",\n        //   data: aArray,\n        //   borderColor: \"#ffeb3b\",\n        //   backgroundColor: \"#ffeb3b\",\n        //   fill: false,\n        //   lineTension: 0,\n        // },\n        // {\n        //   label: \"因子B（睡眠潜伏期）\",\n        //   data: bArray,\n        //   borderColor: \"#4caf50\",\n        //   backgroundColor: \"#4caf50\",\n        //   fill: false,\n        //   lineTension: 0,\n        // },\n        // {\n        //   label: \"因子C（睡眠持续性）\",\n        //   data: cArray,\n        //   borderColor: \"#0d47a1\",\n        //   backgroundColor: \"#0d47a1\",\n        //   fill: false,\n        //   lineTension: 0,\n        // },\n        // {\n        //   label: \"因子D（习惯性睡眠效率）\",\n        //   data: dArray,\n        //   borderColor: \"#9E9E9E\",\n        //   backgroundColor: \"#9E9E9E\",\n        //   fill: false,\n        //   lineTension: 0,\n        // },\n        // {\n        //   label: \"因子E（睡眠紊乱\",\n        //   data: eArray,\n        //   borderColor: \"#FF5722\",\n        //   backgroundColor: \"#FF5722\",\n        //   fill: false,\n        //   lineTension: 0,\n        // },\n        // {\n        //   label: \"因子F（使用睡眠药物）\",\n        //   data: fArray,\n        //   borderColor: \"#26A69A\",\n        //   backgroundColor: \"#26A69A\",\n        //   fill: false,\n        //   lineTension: 0,\n        // },\n        // {\n        //   label: \"因子G（白天功能紊乱）\",\n        //   data: gArray,\n        //   borderColor: \"#4DD0E1\",\n        //   backgroundColor: \"#4DD0E1\",\n        //   fill: false,\n        //   lineTension: 0,\n        // },\n      ];\n    } else if (formKey === PHCSS_FORM_KEY) {\n      const totalArray = formResultList.map((formResult) => {\n        const resultObject: PhcssResult = JSON.parse(formResult.result);\n        return resultObject.phcssTotal;\n      });\n      return [\n        {\n          label: \"总分\",\n          data: totalArray,\n          borderColor: \"#d32f2f\",\n          backgroundColor: \"#d32f2f\",\n          fill: false,\n          lineTension: 0,\n        },\n      ];\n    } else if (formKey === EMBU_FORM_KEY) {\n      const listToReturn = [];\n\n      // const fatherLabels = [\n      //   \"父亲 因子I（情感温暖、理解）\",\n      //   \"父亲 因子II（惩罚、严厉）\",\n      //   \"父亲 因子III（过分干涉）\",\n      //   \"父亲 因子IV（偏爱被试）\",\n      //   \"父亲 因子V（拒绝、否认）\",\n      //   \"父亲 因子VI（过度保护）\",\n      // ];\n      const fatherLabels = [\n        \"父亲 因子I\",\n        \"父亲 因子II\",\n        \"父亲 因子III\",\n        \"父亲 因子IV\",\n        \"父亲 因子V\",\n        \"父亲 因子VI\",\n      ];\n      const fatherColors = [\n        \"#B71C1C\",\n        \"#880E4F\",\n        \"#4A148C\",\n        \"#757575\",\n        \"#FF8F00\",\n        \"#0D47A1\",\n      ];\n      const fatherFactorsData = formResultList.map((formResult) => {\n        const resultObject: EmbuResult = JSON.parse(formResult.result);\n        if (resultObject.embuIsFatherAnswerCompleted)\n          return resultObject.embuFatherComponents;\n        else return [];\n      });\n\n      for (let i = 0; i < fatherLabels.length; i++) {\n        listToReturn.push({\n          label: fatherLabels[i],\n          data: fatherFactorsData.map((data) => data[i]),\n          backgroundColor: fatherColors[i],\n          borderColor: fatherColors[i],\n          fill: false,\n          lineTension: 0,\n        });\n      }\n      // const motherLabel = [\n      //   \"母亲 因子I（情感温暖、理解）\",\n      //   \"母亲 因子II（过干涉、过保护）\",\n      //   \"母亲 因子III（拒绝、否认）\",\n      //   \"母亲 因子IV（惩罚、严厉）\",\n      //   \"母亲 因子V（偏爱被试）\",\n      // ];\n      const motherLabel = [\n        \"母亲 因子I\",\n        \"母亲 因子II\",\n        \"母亲 因子III\",\n        \"母亲 因子IV\",\n        \"母亲 因子V\",\n      ];\n      const motherColors = [\n        \"#B3E5FC\",\n        \"#B2EBF2\",\n        \"#B2DFDB\",\n        \"#C8E6C9\",\n        \"#FFCC80\",\n      ];\n      const motherFactorsData = formResultList.map((formResult) => {\n        const resultObject: EmbuResult = JSON.parse(formResult.result);\n        if (resultObject.embuIsMotherAnswerCompleted)\n          return resultObject.embuMotherComponents;\n        else return [];\n      });\n\n      for (let i = 0; i < motherLabel.length; i++) {\n        listToReturn.push({\n          label: motherLabel[i],\n          data: motherFactorsData.map((data) => data[i]),\n          backgroundColor: motherColors[i],\n          borderColor: motherColors[i],\n          fill: false,\n          lineTension: 0,\n        });\n      }\n      return listToReturn;\n    }\n    return undefined;\n  }, [formKey, formName, formResultList]);\n  let showLabel = true;\n  if (\n    HIDE_LABEL_FORMS.includes(formName) ||\n    HIDE_LABEL_KEYS.includes(formKey)\n  ) {\n    showLabel = false;\n  }\n  // const classes = useStyles();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const handleCloseDialog = () => {\n    setIsDialogOpen(false);\n  };\n  const openDialog = () => {\n    setIsDialogOpen(true);\n  };\n  return (\n    <div>\n      <div>\n        <Button\n          startIcon={<EqualizerIcon />}\n          size=\"small\"\n          color=\"primary\"\n          disabled={formResultList.length <= 1}\n          onClick={openDialog}\n        >\n          趋势\n        </Button>\n      </div>\n      <Dialog onClose={handleCloseDialog} open={isDialogOpen}>\n        <DialogTitle>{formName}分数趋势</DialogTitle>\n        <DialogContent>\n          <LineChart\n            labelList={fillInDateList}\n            dataList={resultList}\n            multipleDataList={multipleDataList}\n            showLabel={showLabel}\n          />\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo.bcf589ff.png\";","import { useMutation } from \"@apollo/client\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  createStyles,\n  makeStyles,\n  TextField,\n  Theme,\n} from \"@material-ui/core\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { ErrorIndicator, LoadingIndicator } from \"../../lib/components\";\nimport { DOCTOR_LOG_IN } from \"../../lib/graphql/mutations\";\nimport {\n  DoctorLogIn,\n  DoctorLogInVariables,\n} from \"../../lib/graphql/mutations/DoctorLogIn/__generated__/DoctorLogIn\";\n// import {\n//   LogIn as LogInData,\n//   LogInVariables,\n// } from \"../../lib/graphql/mutations/Login/__generated__/LogIn\";\nimport { Doctor, Viewer } from \"../../lib/type\";\nimport logo from \"../AppHeader/assets/logo.png\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    logInCard: {\n      borderRadius: 8,\n      width: \"min(450px, 90%)\",\n      margin: \"0 auto 0\",\n    },\n    logInText: {\n      fontSize: \"1.5rem\",\n      textAlign: \"center\",\n      marginBottom: 20,\n      marginTop: 25,\n    },\n    promptText: {\n      marginBottom: 24,\n      fontSize: \"1rem\",\n      textAlign: \"center\",\n    },\n    input: {\n      width: \"100%\",\n    },\n    inputContainer: {\n      margin: \"0 40px\",\n    },\n    userNameInput: {\n      marginBottom: 15,\n    },\n    passwordInput: {\n      marginBottom: 30,\n    },\n    buttonContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n    logo: {\n      height: 92,\n    },\n    logoContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n    pageContainer: {\n      backgroundColor: \"#f5f5f5\",\n      width: \"100%\",\n      height: \"100%\",\n    },\n    topPadding: {\n      height: \"min(100px, 30%)\",\n    },\n  })\n);\n\ninterface AccountInfo {\n  userName: string;\n  password: string;\n}\n\nconst initialAccountInfo = {\n  userName: \"\",\n  password: \"\",\n};\n\ninterface Props {\n  isAuthorized: boolean;\n  setViewer: (viewer: Viewer) => void;\n  setDoctor: (doctor: Doctor) => void;\n  doctor: Doctor;\n}\n\nexport const Login = ({\n  isAuthorized,\n  setViewer,\n  setDoctor,\n  doctor,\n}: Props) => {\n  const classes = useStyles();\n  // const [logIn] = useMutation<LogInData, LogInVariables>(LOG_IN, {\n  //   onCompleted: (data) => {\n  //     if (data && data.logIn && data.logIn.token) {\n  //       setViewer(data.logIn);\n  //     }\n  //   },\n  //   onError: (error) => {\n  //     setIsLogInErrorShown(true);\n  //   },\n  // });\n  // const logInRef = useRef(logIn);\n  const [doctorLogIn] = useMutation<DoctorLogIn, DoctorLogInVariables>(\n    DOCTOR_LOG_IN,\n    {\n      onCompleted: (data) => {\n        if (data && data.doctorLogIn) {\n          const { name, userName, didRequest } = data.doctorLogIn;\n          setDoctor({\n            name,\n            userName,\n            didRequest,\n          });\n          setIsRedo(false);\n        }\n      },\n      onError: (error) => {\n        setIsLogInErrorShown(true);\n      },\n    }\n  );\n  const doctorLoginRef = useRef(doctorLogIn);\n  const [accountInfo, setAccountInfo] = useState<AccountInfo>(\n    initialAccountInfo\n  );\n  const [isNameAndPasswordValidated, setIsNameAndPasswordValidated] = useState(\n    false\n  );\n  const [isLogInErrorShown, setIsLogInErrorShown] = useState(false);\n  const handleKeyPress = (event: KeyboardEvent) => {\n    if (event.key === \"Enter\") {\n      logInButtonOnClick();\n    }\n  };\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyPress);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  });\n  const [isRedo, setIsRedo] = useState(true);\n  const detectRedoRef = useRef(() => {\n    if (\n      history.location.state &&\n      history.location.state.from.pathname === \"/doctor\"\n    ) {\n      setIsRedo(true);\n    } else {\n      setIsRedo(false);\n    }\n  });\n\n  useEffect(() => {\n    detectRedoRef.current();\n  }, []);\n  const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setAccountInfo({ ...accountInfo, userName: e.target.value });\n  };\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setAccountInfo({ ...accountInfo, password: e.target.value });\n  };\n  const logInButtonOnClick = () => {\n    setIsNameAndPasswordValidated(true);\n    if (accountInfo.userName && accountInfo.password)\n      doctorLoginRef.current({\n        variables: {\n          input: {\n            userName: accountInfo.userName,\n            password: accountInfo.password,\n          },\n        },\n      });\n  };\n  const history = useHistory<\n    { from: Location; redo: boolean | undefined } | undefined\n  >();\n  const isDoctor =\n    history.location.state &&\n    history.location.state.from.pathname.includes(\"doctor\")\n      ? true\n      : false;\n  if (isAuthorized) {\n    // let redirectUrl = \"/user\";\n    // if (history.location.state) {\n    //   redirectUrl = history.location.state.from.pathname;\n    // }\n    if (!isRedo) {\n      if (isDoctor) {\n        if (!doctor.userName) {\n          return <LoadingIndicator />;\n        } else {\n          return <Redirect to={`/doctor/${doctor.userName}`} />;\n        }\n      }\n      return <Redirect to=\"/user\" />;\n    }\n  }\n\n  return (\n    <div className={classes.pageContainer}>\n      <div className={classes.topPadding} />\n      <Card className={classes.logInCard}>\n        <CardContent>\n          <div className={classes.logoContainer}>\n            <img src={logo} className={classes.logo} alt=\"医院标志\" />\n          </div>\n          <div className={classes.logInText}>\n            {isDoctor ? \"医生端\" : \"用户端\"}\n          </div>\n          <div className={classes.promptText}>请输入医生的用户名和密码</div>\n          <form>\n            <div className={classes.inputContainer}>\n              <TextField\n                autoFocus\n                className={classes.input + \" \" + classes.userNameInput}\n                color=\"primary\"\n                value={accountInfo.userName}\n                label=\"用户名\"\n                onChange={handleNameChange}\n                helperText={\n                  isNameAndPasswordValidated && !accountInfo.userName\n                    ? \"请输入您的用户名\"\n                    : undefined\n                }\n                error={\n                  isNameAndPasswordValidated && !accountInfo.userName\n                    ? true\n                    : undefined\n                }\n                inputProps={{ \"aira-label\": \"用户名\" }}\n              />\n              <TextField\n                className={classes.input + \" \" + classes.passwordInput}\n                color=\"primary\"\n                value={accountInfo.password}\n                label=\"密码\"\n                helperText={\n                  isNameAndPasswordValidated && !accountInfo.password\n                    ? \"请输入您的密码\"\n                    : undefined\n                }\n                error={\n                  isNameAndPasswordValidated && !accountInfo.password\n                    ? true\n                    : undefined\n                }\n                onChange={handlePasswordChange}\n                type=\"password\"\n                inputProps={{ \"aira-label\": \"密码\" }}\n              />\n            </div>\n            <div className={classes.buttonContainer}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={logInButtonOnClick}\n              >\n                登录\n              </Button>\n            </div>\n          </form>\n        </CardContent>\n      </Card>\n      <ErrorIndicator\n        showError={isLogInErrorShown}\n        setShowError={setIsLogInErrorShown}\n        errorMessage={\"用户名或密码不正确！\"}\n      />\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/cardIcon.2b436e10.png\";","import { gql } from \"@apollo/client\";\n\nexport const QUESTIONNAIRE_LIST = gql`\n  query QuestionnaireList($isReport: Boolean!, $showAll: Boolean) {\n    questionnaireList(isReport: $isReport, showAll: $showAll) {\n      name\n      description\n      id\n      done\n      displayedFillInDate\n      userAnswerId\n      result\n      key\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const QUESTIONNAIRE_CONTENT = gql`\n  query QuestionnaireContent($id: String!) {\n    questionnaire(id: $id) {\n      instruction\n      name\n      questions {\n        choices\n        content\n        parent\n      }\n      key\n    }\n    partialAnswer(questionnaireId: $id) {\n      answers\n      date\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const REPORT = gql`\n  query Report($userAnswerIds: [String!]!, $pageSize: String) {\n    report(userAnswerIds: $userAnswerIds, pageSize: $pageSize) {\n      pdf\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const REPORT_FOR_ADMIN = gql`\n  query ReportForAdmin($userId: String, $userAnswerIds: [String!]!, $pageSize: String) {\n    reportForAdmin(userId: $userId, userAnswerIds: $userAnswerIds, pageSize: $pageSize) {\n      pdf\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const DOCTOR_LIST = gql`\n  query DoctorList($limit: Int!, $currentPageIndex: Int!) {\n    doctorList(limit: $limit, currentPageIndex: $currentPageIndex) {\n      total\n      admins {\n        name\n        userName\n      }\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const CHECK_IF_DOCTOR_CONFIG_USER_NAME_UNIQUE = gql`\n  query CheckIfDoctorConfigNameUnique($doctorConfigName: String!) {\n    checkIfDoctorConfigNameUnique(doctorConfigName: $doctorConfigName) {\n      result\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const CHECK_IF_DOCTOR_USER_NAME_UNIQUE = gql`\n  query CheckIfDoctorNameUnique($userName: String!) {\n    checkIfDoctorUserNameUnique(userName: $userName) {\n      result\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const USER_ANSWER = gql`\n  query UserAnsewr($questionnaireId: String!) {\n    userAnswer(questionnaireId: $questionnaireId) {\n      answers\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const QUERY_USER = gql`\n  query QueryUser(\n    $userName: String\n    $name: String\n    $gender: String\n    $ageRange: AgeRange\n    $minSignUpDate: SignUpDate\n    $maxSignUpDate: SignUpDate\n    $limit: Int!\n    $currentPageIndex: Int!\n    $filter: UsersFilter\n    $onlyMyPatient: Boolean\n    $additionalFields: [String!]\n  ) {\n    queryUser(\n      userName: $userName\n      name: $name\n      gender: $gender\n      ageRange: $ageRange\n      minSignUpDate: $minSignUpDate\n      maxSignUpDate: $maxSignUpDate\n      limit: $limit\n      currentPageIndex: $currentPageIndex\n      filter: $filter\n      onlyMyPatient: $onlyMyPatient\n      additionalFields: $additionalFields\n    ) {\n      total\n      users {\n        id\n        name\n        userName\n        gender\n        education\n        jobStatus\n        age\n        marriageStatus\n        signUpDate\n        doctorName\n        doctorUserName\n        doctorId\n        finishedForms {\n          name\n          id\n          displayedFillInDate\n          userAnswerId\n          result\n          doctorUserName\n          doctorName\n          doctorId\n          key\n        }\n        diagnosis\n      }\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const DOCTOR_CONFIG_LIST = gql`\n  query DoctorConfigList {\n    doctorConfigList {\n      configs {\n        selected\n        formIds\n        configName\n        id\n      }\n    }\n  }\n`;\n","// Error dialog for EPQ (adult version).\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface Props {\n  isOpen: boolean;\n  handleClose: () => void;\n  goToLogInPage: () => void;\n  age?: null | number;\n  gender?: null | string;\n}\n\nexport const EnterGenderAndAgeDialog = ({\n  isOpen,\n  handleClose,\n  goToLogInPage,\n  age,\n  gender,\n}: Props) => {\n  return (\n    <Dialog open={isOpen} onClose={handleClose}>\n      <DialogTitle>\n        {!age || (age >= 16 && !gender)\n          ? \"请您完善信息\"\n          : age >= 7 && age < 16\n          ? \"请使用儿童版量表\"\n          : \"年龄不符合条件\"}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {(!age || !gender) && \"请您填写性别和年龄信息。\"}\n          {age !== undefined && age !== null && age < 16\n            ? \"填写该量表最小年龄为16岁。\"\n            : null}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={!age || age >= 16 ? goToLogInPage : handleClose}\n          color=\"primary\"\n          autoFocus\n        >\n          确定\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","// Error dialog for EPQ (children version).\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface Props {\n  isOpen: boolean;\n  handleClose: () => void;\n  goToLogInPage: () => void;\n  age?: null | number;\n  gender?: null | string;\n}\n\nexport const ChildrenEnterGenderAndAgeDialog = ({\n  isOpen,\n  handleClose,\n  goToLogInPage,\n  age,\n  gender,\n}: Props) => {\n  return (\n    <Dialog open={isOpen} onClose={handleClose}>\n      <DialogTitle>\n        {!age || (age < 16 && age > 7 && !gender)\n          ? \"请您完善信息\"\n          : age >= 16\n          ? \"请使用成人版量表\"\n          : \"年龄不符合条件\"}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {(!age || !gender) && \"请您填写性别和年龄信息。\"}\n          {age !== undefined && age !== null && (age >= 16 || age < 7)\n            ? \"填写该量表年龄应在7岁到15岁之间。\"\n            : null}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={\n            !age || !(age >= 16 || age < 7) ? goToLogInPage : handleClose\n          }\n          color=\"primary\"\n          autoFocus\n        >\n          确定\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","// Error dialog for EPQ (children version).\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface Props {\n  isOpen: boolean;\n  handleClose: () => void;\n  goToLogInPage: () => void;\n  age?: null | number;\n  gender?: null | string;\n}\n\nexport const PhcssGenderAndAgeDialog = ({\n  isOpen,\n  handleClose,\n  goToLogInPage,\n  age,\n  gender,\n}: Props) => {\n  return (\n    <Dialog open={isOpen} onClose={handleClose}>\n      <DialogTitle>\n        {!age || (age < 17 && age > 7 && !gender)\n          ? \"请您完善信息\"\n          : \"年龄不符合条件\"}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {(!age || !gender) && \"请您填写性别和年龄信息。\"}\n          {age !== undefined && age !== null && (age >= 17 || age <= 7)\n            ? \"填写该量表年龄应在8岁到16岁之间。\"\n            : null}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={\n            !age || !(age >= 17 || age <= 7) ? goToLogInPage : handleClose\n          }\n          color=\"primary\"\n          autoFocus\n        >\n          确定\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","// Error dialog for EPQ (children version).\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface Props {\n  isOpen: boolean;\n  handleClose: () => void;\n  goToLogInPage: () => void;\n  gender?: null | string;\n}\n\nexport const PsssGenderDialog = ({\n  isOpen,\n  handleClose,\n  goToLogInPage,\n  gender,\n}: Props) => {\n  return (\n    <Dialog open={isOpen} onClose={handleClose}>\n      <DialogTitle>请您完善信息</DialogTitle>\n      <DialogContent>\n        <DialogContentText>请您填写性别信息。</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={goToLogInPage} color=\"primary\" autoFocus>\n          确定\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import { Snackbar } from \"@material-ui/core\";\nimport React from \"react\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\ninterface Props {\n  showSuccess: boolean;\n  setShowSuccess: (showError: boolean) => void;\n  successMessage: string;\n}\n\nexport const SuccessIndicator = (props: Props) => {\n  const { showSuccess, setShowSuccess, successMessage } = props;\n  return (\n    <Snackbar\n      open={showSuccess}\n      onClose={() => setShowSuccess(false)}\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n    >\n      <MuiAlert\n        elevation={6}\n        variant=\"filled\"\n        severity=\"success\"\n        onClose={() => setShowSuccess(false)}\n      >\n        {successMessage}\n      </MuiAlert>\n    </Snackbar>\n  );\n};\n","import { useQuery } from \"@apollo/client\";\nimport {\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  createStyles,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ListSubheader,\n  makeStyles,\n  Theme,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport indigo from \"@material-ui/core/colors/indigo\";\nimport React, { useMemo, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport CardIcon from \"./assets/cardIcon.png\";\nimport {\n  QuestionnaireList as QuestionnaireListData,\n  QuestionnaireListVariables,\n  QuestionnaireList_questionnaireList as QuestionnaireData,\n} from \"../../lib/graphql/queries/QuestionnaireList/__generated__/QuestionnaireList\";\nimport { QUESTIONNAIRE_LIST } from \"../../lib/graphql/queries\";\nimport { LineChartPopOver, LoadingIndicator } from \"../../lib/components\";\nimport { Patient } from \"../../lib/type\";\nimport {\n  EYSCENCK_CHILDREN_FORM_NAME,\n  EYSCENCK_FORM_NAME,\n  PHCSS_FORM_KEY,\n  PSSS_FORM_KEY,\n} from \"../../lib/utils/constants\";\nimport {\n  EnterGenderAndAgeDialog,\n  PhcssGenderAndAgeDialog,\n  PsssGenderDialog,\n} from \"./components\";\nimport { ChildrenEnterGenderAndAgeDialog } from \"./components/ChildrenEnterGenderAndAgeDialog\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport { SuccessIndicator } from \"../../lib/components/SuccessIndicator\";\n\nconst CARD_WIDTH = 250;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    content: {\n      padding: \"5px 10px\",\n    },\n    listName: {\n      fontSize: \"1rem\",\n      color: \"rgba(0, 0, 0, .654)\",\n      marginTop: 20,\n      marginBottom: 20,\n    },\n    root: {\n      display: \"grid\",\n      gridTemplateColumns: `repeat(auto-fill, ${CARD_WIDTH}px)`,\n      rowGap: \"20px\",\n      columnGap: \"8px\",\n    },\n    card: {\n      height: 212,\n    },\n    cardActionArea: {\n      width: CARD_WIDTH,\n      cursor: \"pointer\",\n      \"&:hover\": {\n        backgroundColor: indigo[50],\n      },\n      height: 160,\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"flex-start\",\n    },\n    cardIcon: {\n      width: 40,\n      height: 40,\n    },\n    unfinishedText: {\n      fontSize: \"0.8125rem\",\n      color: \"rgba(0, 0, 0, .54)\",\n      margin: \"5px 0\",\n    },\n    finishedText: {\n      fontSize: \"0.8125rem\",\n      color: \"#4caf50\",\n      margin: \"5px 0\",\n    },\n    questionnaireName: {\n      fontSize: \"1rem\",\n      color: \"#111\",\n      lineHeight: \"1.5rem\",\n    },\n    cardActionContainer: {\n      paddingLeft: 20,\n      height: 50,\n    },\n    noOverflow: {\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n    },\n    pageHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    refreshButtonContainer: {\n      marginLeft: 15,\n    },\n    cardContent: {\n      padding: 15,\n    },\n  })\n);\n\nexport type FormResult = { result: string; fillInDate: string };\n\ninterface Props {\n  patient: Patient;\n}\n\nexport const Home = ({ patient }: Props) => {\n  const isSmallScreen = useMediaQuery(\"(max-width:600px)\");\n  const classes = useStyles();\n  const { loading, data, error: questionnaireListError, refetch } = useQuery<\n    QuestionnaireListData,\n    QuestionnaireListVariables\n  >(QUESTIONNAIRE_LIST, {\n    fetchPolicy: \"no-cache\",\n    variables: { isReport: false },\n  });\n  const listData: {\n    uniqueFormList: QuestionnaireData[];\n    resultList: FormResult[][];\n  } = useMemo(() => {\n    if (!data) return { uniqueFormList: [], resultList: [] as FormResult[][] };\n    const formList: QuestionnaireData[] = [];\n    const resultList: FormResult[][] = [];\n    const formSet: Set<string> = new Set();\n    data.questionnaireList.forEach((questionnaire) => {\n      if (!formSet.has(questionnaire.id)) {\n        formSet.add(questionnaire.id);\n        formList.push(questionnaire);\n        if (questionnaire.result && questionnaire.displayedFillInDate) {\n          resultList.push([\n            {\n              result: questionnaire.result,\n              fillInDate: questionnaire.displayedFillInDate,\n            },\n          ]);\n        } else {\n          resultList.push([] as FormResult[]);\n        }\n      } else if (questionnaire.result && questionnaire.displayedFillInDate) {\n        let index = 0;\n        while (index <= formList.length) {\n          if (formList[index].id === questionnaire.id) {\n            resultList[index].push({\n              result: questionnaire.result,\n              fillInDate: questionnaire.displayedFillInDate,\n            });\n            break;\n          }\n          index += 1;\n        }\n      }\n    });\n    return { uniqueFormList: formList, resultList };\n  }, [data]);\n  const { uniqueFormList, resultList } = listData;\n  const [isGenderAndAgeDialogOpen, setIsGenderAndAgeDialogOpen] = useState(\n    false\n  );\n  const [\n    isChildrenGenderAndAgeDialogOpen,\n    setIsChildrenGenderAndAgeDialogOpen,\n  ] = useState(false);\n  const [isPhcssDialogOpen, setIsPhcssDialogOpen] = useState(false);\n  const [isPsssDialogOpen, setIsPsssDialogOpen] = useState(false);\n  const closeGenderAndAgeDialog = () => {\n    setIsGenderAndAgeDialogOpen(false);\n  };\n  const closeChildrenGenderAndAgeDialog = () => {\n    setIsChildrenGenderAndAgeDialogOpen(false);\n  };\n  const closePhcssDialog = () => {\n    setIsPhcssDialogOpen(false);\n  };\n  const closePsssDialog = () => {\n    setIsPsssDialogOpen(false);\n  };\n  const goToLogInPage = () => {\n    history.push(`/user/login?userName=${patient.userName}`);\n  };\n  const [isSuccessShown, setIsSuccessShown] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const history = useHistory();\n  const reloadButtonOnClick = async () => {\n    await refetch();\n    setSuccessMessage(\"成功更新列表\");\n    setIsSuccessShown(true);\n  };\n  if (loading) {\n    return <LoadingIndicator />;\n  }\n  if (data) {\n    const questionnaireName = (questionnaire: QuestionnaireData) => {\n      const defaultReturn = (\n        <span className={classes.questionnaireName}>{questionnaire.name}</span>\n      );\n      // Note that this is Chinese parentheses!\n      if (!/^.*（.*）$/.test(questionnaire.name)) {\n        return defaultReturn;\n      } else {\n        const nameMatchFormResult = questionnaire.name.match(/^.*（/);\n        const abbreviationMatchFormResult = questionnaire.name.match(/（.*）/);\n        if (nameMatchFormResult && abbreviationMatchFormResult) {\n          const name = nameMatchFormResult[0].substring(\n            0,\n            nameMatchFormResult[0].length - 1\n          );\n          const abbreviation = abbreviationMatchFormResult[0];\n          return (\n            <span\n              className={classes.questionnaireName + \" \" + classes.noOverflow}\n            >\n              <span className={classes.noOverflow}>{name}</span>\n              <br />\n              {abbreviation.replace(\"（\", \"(\").replace(\"）\", \")\")}\n            </span>\n          );\n        }\n        return defaultReturn;\n      }\n    };\n    const goToFormPage = (\n      formId: string,\n      formName: string,\n      formKey: string\n    ) => {\n      if (formName === EYSCENCK_FORM_NAME) {\n        if (!patient.gender || !patient.age || patient.age < 16) {\n          setIsGenderAndAgeDialogOpen(true);\n          return;\n        }\n      } else if (formName === EYSCENCK_CHILDREN_FORM_NAME) {\n        if (\n          !patient.gender ||\n          !patient.age ||\n          patient.age >= 16 ||\n          patient.age <= 6\n        ) {\n          setIsChildrenGenderAndAgeDialogOpen(true);\n          return;\n        }\n      } else if (formKey === PHCSS_FORM_KEY) {\n        if (\n          !patient.gender ||\n          !patient.age ||\n          patient.age >= 17 || // Age should be a number between 8 - 16.\n          patient.age <= 7\n        ) {\n          setIsPhcssDialogOpen(true);\n          return;\n        }\n      } else if (formKey === PSSS_FORM_KEY) {\n        if (!patient.gender) {\n          setIsPsssDialogOpen(true);\n          return;\n        }\n      }\n      history.push(`/user/form?id=${formId}`);\n    };\n    const finishStatus = (questionnaire: QuestionnaireData) => (\n      <span\n        className={\n          questionnaire.done ? classes.finishedText : classes.unfinishedText\n        }\n      >\n        {questionnaire.done ? \"已完成\" : \"未完成\"}\n      </span>\n    );\n    if (isSmallScreen) {\n      return (\n        <>\n          <List subheader={<ListSubheader>量表</ListSubheader>}>\n            {uniqueFormList.map((questionnaire, index) => (\n              <ListItem\n                button\n                onClick={() =>\n                  goToFormPage(\n                    questionnaire.id,\n                    questionnaire.name,\n                    questionnaire.key\n                  )\n                }\n                key={questionnaire.id}\n              >\n                <ListItemAvatar>\n                  <img\n                    src={CardIcon}\n                    alt=\"量表图标\"\n                    className={classes.cardIcon}\n                  />\n                </ListItemAvatar>\n                <ListItemText\n                  primary={\n                    <div className={classes.questionnaireName}>\n                      {questionnaire.name}\n                    </div>\n                  }\n                  secondary={finishStatus(questionnaire)}\n                />\n              </ListItem>\n            ))}\n          </List>\n          <EnterGenderAndAgeDialog\n            isOpen={isGenderAndAgeDialogOpen}\n            handleClose={closeGenderAndAgeDialog}\n            goToLogInPage={goToLogInPage}\n            age={patient.age}\n            gender={patient.gender}\n          />\n          <ChildrenEnterGenderAndAgeDialog\n            isOpen={isChildrenGenderAndAgeDialogOpen}\n            handleClose={closeChildrenGenderAndAgeDialog}\n            goToLogInPage={goToLogInPage}\n            age={patient.age}\n            gender={patient.gender}\n          />\n          <PhcssGenderAndAgeDialog\n            isOpen={isPhcssDialogOpen}\n            handleClose={closePhcssDialog}\n            goToLogInPage={goToLogInPage}\n            age={patient.age}\n            gender={patient.gender}\n          />\n        </>\n      );\n    }\n    return (\n      <>\n        <div className={classes.content}>\n          <div className={classes.pageHeader}>\n            <p className={classes.listName}>量表</p>\n            <span className={classes.refreshButtonContainer}>\n              <IconButton\n                size=\"small\"\n                color=\"primary\"\n                onClick={reloadButtonOnClick}\n              >\n                <RefreshIcon />\n              </IconButton>\n            </span>\n          </div>\n          <div className={classes.root}>\n            {uniqueFormList.map((questionnaire, index) => (\n              <Card\n                variant=\"outlined\"\n                className={classes.card + \" \" + classes.noOverflow}\n                key={questionnaire.id}\n              >\n                <CardActionArea\n                  className={classes.cardActionArea}\n                  onClick={() =>\n                    goToFormPage(\n                      questionnaire.id,\n                      questionnaire.name,\n                      questionnaire.key\n                    )\n                  }\n                >\n                  <CardContent\n                    className={classes.noOverflow + \" \" + classes.cardContent}\n                  >\n                    <div>\n                      <img\n                        src={CardIcon}\n                        alt=\"量表图标\"\n                        className={classes.cardIcon}\n                      />\n                    </div>\n                    <div className={classes.noOverflow}>\n                      {questionnaireName(questionnaire)}\n                    </div>\n                    {finishStatus(questionnaire)}\n                  </CardContent>\n                </CardActionArea>\n\n                <Divider />\n\n                <CardActions className={classes.cardActionContainer}>\n                  <LineChartPopOver\n                    formResultList={resultList[index]}\n                    formName={questionnaire.name}\n                    formKey={questionnaire.key}\n                  />\n                </CardActions>\n              </Card>\n            ))}\n          </div>\n        </div>\n        <EnterGenderAndAgeDialog\n          isOpen={isGenderAndAgeDialogOpen}\n          handleClose={closeGenderAndAgeDialog}\n          goToLogInPage={goToLogInPage}\n          age={patient.age}\n          gender={patient.gender}\n        />\n        <ChildrenEnterGenderAndAgeDialog\n          isOpen={isChildrenGenderAndAgeDialogOpen}\n          handleClose={closeChildrenGenderAndAgeDialog}\n          goToLogInPage={goToLogInPage}\n          age={patient.age}\n          gender={patient.gender}\n        />\n        <PhcssGenderAndAgeDialog\n          isOpen={isPhcssDialogOpen}\n          handleClose={closePhcssDialog}\n          goToLogInPage={goToLogInPage}\n          age={patient.age}\n          gender={patient.gender}\n        />\n        <PsssGenderDialog\n          isOpen={isPsssDialogOpen}\n          handleClose={closePsssDialog}\n          goToLogInPage={goToLogInPage}\n          gender={patient.gender}\n        />\n        <SuccessIndicator\n          showSuccess={isSuccessShown}\n          setShowSuccess={setIsSuccessShown}\n          successMessage={successMessage}\n        />\n      </>\n    );\n  }\n  return null;\n};\n","import { gql } from \"@apollo/client\";\n\nexport const PATIENT_LOG_OUT = gql`\n  mutation PatientLogOut {\n    patientLogOut {\n      didRequest\n    }\n  }\n`;\n","import { useQuery } from \"@apollo/client\";\nimport React, { ComponentType, PropsWithChildren } from \"react\";\nimport { LoadingIndicator } from \"../../../../lib/components\";\nimport { REPORT } from \"../../../../lib/graphql/queries\";\nimport {\n  Report as ReportData,\n  ReportVariables,\n} from \"../../../../lib/graphql/queries/Report/__generated__/Report\";\n\nexport const withReportPdfData = (\n  WrappedComponent: ComponentType<\n    PropsWithChildren<{\n      pdfData: string;\n      closeReport: () => void;\n      patientName?: string;\n    }>\n  >\n) => {\n  return ({\n    children,\n    userAnswerIds,\n    closeReport,\n    pageSize,\n    patientName,\n  }: PropsWithChildren<{\n    userAnswerIds: string[];\n    closeReport: () => void;\n    pageSize: string;\n    patientName?: string;\n  }>) => {\n    // Get PDF data.\n    const { data, loading } = useQuery<ReportData, ReportVariables>(REPORT, {\n      variables: {\n        userAnswerIds,\n        pageSize,\n      },\n      fetchPolicy: \"no-cache\",\n    });\n\n    if (loading || !data) {\n      return <LoadingIndicator />;\n    }\n\n    if (data.report && data.report.pdf) {\n      return (\n        <WrappedComponent\n          pdfData={data.report.pdf}\n          closeReport={closeReport}\n          patientName={patientName}\n        >\n          {children}\n        </WrappedComponent>\n      );\n    }\n\n    return null;\n  };\n};\n","/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n//==============================================================\n// START Enums and Input Objects\n//==============================================================\n\nexport enum UsersFilter {\n  DATE_LATEST = \"DATE_LATEST\",\n  DATE_OLDEST = \"DATE_OLDEST\",\n}\n\nexport interface AddDiagnosisInput {\n  patientId: string;\n  diagnosis: string;\n}\n\nexport interface AddDoctorInput {\n  userName: string;\n  name: string;\n  password: string;\n}\n\nexport interface AgeRange {\n  min?: number | null;\n  max?: number | null;\n}\n\nexport interface CreateAccountInput {\n  userName: string;\n  password: string;\n  name: string;\n  education: string;\n  jobStatus: string;\n  gender: string;\n  marriageStatus: string;\n  age?: number | null;\n}\n\nexport interface DeleteConfigInput {\n  configId: string;\n}\n\nexport interface DoctorConfigInput {\n  selected: boolean;\n  formIds: string[];\n  configName: string;\n}\n\nexport interface DoctorLoginInput {\n  userName: string;\n  password: string;\n}\n\nexport interface LogInInput {\n  userName: string;\n  password: string;\n}\n\nexport interface SelectConfigInput {\n  configId?: string | null;\n}\n\nexport interface SignUpDate {\n  year: number;\n  month: number;\n  day: number;\n}\n\nexport interface UserAnswerInput {\n  questionnaireId: string;\n  answers: number[];\n}\n\nexport interface UserLoginInput {\n  userName: string;\n  name: string;\n  education?: string | null;\n  jobStatus?: string | null;\n  gender?: string | null;\n  marriageStatus?: string | null;\n  age?: number | null;\n}\n\n//==============================================================\n// END Enums and Input Objects\n//==============================================================\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { AppBar, Button, IconButton, Toolbar } from \"@material-ui/core\";\nimport logo from \"./assets/logo.png\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { Viewer } from \"../../lib/type\";\nimport { useMutation } from \"@apollo/client\";\nimport { DOCTOR_LOG_OUT } from \"../../lib/graphql/mutations\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport { PatientLogOut } from \"../../lib/graphql/mutations/PatientLogOut/__generated__/PatientLogOut\";\nimport { PATIENT_LOG_OUT } from \"../../lib/graphql/mutations/PatientLogOut\";\nimport { DoctorLogOut } from \"../../lib/graphql/mutations/DoctorLogOut/__generated__/doctorLogOut\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    header: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n    logo: {\n      marginRight: theme.spacing(2),\n      maxWidth: 30,\n      maxHeight: 30,\n    },\n    title: {\n      flexGrow: 1,\n      fontSize: \"1.25rem\",\n    },\n    timerHeader: {\n      overflow: \"hidden\",\n      backgroundColor: \"rgb(236, 238, 248)\",\n    },\n    actionContainer: {\n      float: \"right\",\n      paddingRight: 20,\n      paddingTop: 10,\n      fontSize: \"0.875rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n  })\n);\n\ninterface Props {\n  viewer: Viewer;\n  setViewer: (viewer: Viewer) => void;\n  type: \"doctor\" | \"user\";\n  setIsSiderOpen?: (isSiderOpen: boolean) => void;\n}\n\nexport const AppHeader = (props: Props) => {\n  const { viewer, setViewer, type } = props;\n  const history = useHistory();\n\n  const [width, setWidth] = React.useState(window.innerWidth);\n\n  const updateWidth = () => {\n    if (window.innerWidth !== width) setWidth(window.innerWidth);\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateWidth);\n    return () => window.removeEventListener(\"resize\", updateWidth);\n  });\n\n  const [logOut] = useMutation<DoctorLogOut>(DOCTOR_LOG_OUT, {\n    onCompleted: (data) => {\n      if (data && data.doctorLogOut.didRequest) {\n        setViewer(data.doctorLogOut);\n        sessionStorage.removeItem(\"token\");\n        console.log(\"log out successfully\");\n      }\n    },\n    onError: (error) => {\n      console.log(error);\n      console.log(\"log out failed\");\n    },\n  });\n  const [patientLogOut] = useMutation<PatientLogOut>(PATIENT_LOG_OUT, {\n    onCompleted: (data) => {\n      if (data && data.patientLogOut) {\n        setViewer(data.patientLogOut);\n        console.log(\"log out successfully\");\n      }\n    },\n    onError: (error) => {\n      console.log(error);\n      console.log(\"log out failed\");\n    },\n  });\n  const handleLogout = async () => {\n    if (type === \"doctor\") {\n      await logOut();\n      history.push(\"/doctor\");\n    } else {\n      await patientLogOut();\n      history.push(\"/user\");\n    }\n  };\n  const classes = useStyles();\n  const isSiderPermanent = type !== \"doctor\" || window.innerWidth > 1150;\n\n  return (\n    <Switch>\n      <Route path=\"/user/form\" exact />\n      <Route path=\"/\">\n        <div className={classes.root}>\n          <AppBar position=\"fixed\" className={classes.header}>\n            <Toolbar>\n              {!isSiderPermanent && (\n                <IconButton\n                  edge=\"start\"\n                  color=\"inherit\"\n                  aria-label=\"menu\"\n                  onClick={() =>\n                    props.setIsSiderOpen && props.setIsSiderOpen(true)\n                  }\n                >\n                  <MenuIcon />\n                </IconButton>\n              )}\n              <img src={logo} alt=\"中大医院\" className={classes.logo} />\n              <div className={classes.title}>\n                {window.innerWidth >= 650\n                  ? \"东南大学附属中大医院心理健康评估系统\"\n                  : window.innerWidth >= 500\n                  ? \"心理健康评估系统\"\n                  : \"\"}\n              </div>\n\n              <Switch>\n                <Route path={[\"/doctor\", \"/user\"]}>\n                  {viewer && viewer.userName && (\n                    <Button\n                      color=\"inherit\"\n                      startIcon={<ExitToAppIcon />}\n                      onClick={handleLogout}\n                    >\n                      {type === \"doctor\" ? \"退出医生登录\" : \"退出系统\"}\n                    </Button>\n                  )}\n                </Route>\n              </Switch>\n            </Toolbar>\n          </AppBar>\n        </div>\n      </Route>\n    </Switch>\n  );\n};\n","import { createStyles, Divider, makeStyles, Theme } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Viewer } from \"../../../../lib/type\";\n\ninterface Props {\n  viewer: Viewer;\n}\n\nconst checkIsFieldValid = (field: string | number | undefined | null) => {\n  return field !== undefined && field !== null && field !== \"\";\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    propertyName: {\n      color: \"#5f6368\",\n      fontSize: \"0.75rem\",\n      margin: \"8px 0\",\n    },\n    propertyDivider: {\n      marginTop: 5,\n      marginBottom: 5,\n    },\n  })\n);\n\nconst fields = [\n  \"name\",\n  \"gender\",\n  \"age\",\n  \"education\",\n  \"jobStatus\",\n  \"marriageStatus\",\n] as const;\nconst displayNames = [\"姓名\", \"性别\", \"年龄\", \"教育\", \"工作\", \"婚姻\"];\nexport const PersonalInformation = (props: Props) => {\n  const classes = useStyles();\n  const { viewer } = props;\n  const validIndexes: number[] = [];\n  for (let i = 0; i < fields.length; i++) {\n    if (checkIsFieldValid(viewer[fields[i]])) {\n      validIndexes.push(i);\n    }\n  }\n  return (\n    <>\n      {validIndexes.map((validIndex, index) => (\n        <div key={`property-${index}`}>\n          <div className={classes.propertyName}>{displayNames[validIndex]}</div>\n          <div>{viewer[fields[validIndex]]}</div>\n          {index !== validIndexes.length - 1 ? (\n            <Divider className={classes.propertyDivider} />\n          ) : null}\n        </div>\n      ))}\n    </>\n  );\n};\n","import {\n  Card,\n  CardContent,\n  Chip,\n  createStyles,\n  Divider,\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  Theme,\n  Toolbar,\n} from \"@material-ui/core\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\nimport React from \"react\";\nimport { Viewer } from \"../../lib/type\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { PersonalInformation } from \"./components\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport LocalHospitalIcon from \"@material-ui/icons/LocalHospital\";\nimport SettingsApplicationsIcon from \"@material-ui/icons/SettingsApplications\";\nimport NoteIcon from \"@material-ui/icons/Note\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    patientDrawer: {\n      \"@media (max-width:600px)\": {\n        display: \"none\",\n      },\n    },\n    personalInfoCard: {\n      margin: 5,\n      overflow: \"auto\",\n    },\n    personalInfoCardContent: {\n      \"&:last-child\": {\n        paddingBottom: 16,\n      },\n    },\n    personalInfoText: {\n      fontWeight: 400,\n      fontSize: \"1.25rem\",\n      marginBottom: 10,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    idChip: {\n      marginTop: 3,\n      marginBottom: 3,\n    },\n    adminMenu: {\n      padding: 0,\n    },\n    adminMenuHeader: {\n      height: 48,\n      display: \"flex\",\n      alignItems: \"center\",\n      fontWeight: 500,\n      fontSize: \"1.125rem\",\n      paddingLeft: 10,\n    },\n    link: {\n      color: \"#111\",\n    },\n  })\n);\n\ninterface Props {\n  viewer: Viewer;\n  type: \"doctor\" | \"user\";\n  open?: boolean;\n  onClose?: () => void;\n}\n\nexport const Sider = (props: Props) => {\n  const classes = useStyles();\n  const location = useLocation();\n  const { viewer, type } = props;\n\n  const [width, setWidth] = React.useState(window.innerWidth);\n\n  const updateWidth = () => {\n    if (window.innerWidth !== width) setWidth(window.innerWidth);\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateWidth);\n    return () => window.removeEventListener(\"resize\", updateWidth);\n  });\n\n  const isPermanent = type !== \"doctor\" || window.innerWidth > 1150;\n  return (\n    <Drawer\n      className={`${classes.drawer} ${\n        type !== \"doctor\" ? classes.patientDrawer : \"\"\n      }`}\n      variant={isPermanent ? \"permanent\" : undefined}\n      open={isPermanent ? true : props.open}\n      classes={{ paper: classes.drawerPaper }}\n      onClose={props.onClose}\n      // style={{\n      //   display:\n      //     type === \"doctor\" && window.innerWidth <= 1150 ? \"none\" : undefined,\n      // }}\n    >\n      {isPermanent ? <Toolbar /> : null}\n      {type === \"doctor\" ? (\n        <>\n          <div className={classes.adminMenuHeader}>{viewer.name}医生已登入</div>\n          <Divider />\n          <List className={classes.adminMenu}>\n            <Link to={`/doctor/${viewer.userName}`} className={classes.link}>\n              <ListItem button key=\"patientInfo\" onClick={props.onClose}>\n                <ListItemIcon>\n                  <PeopleIcon\n                    color={\n                      location.pathname === `/doctor/${viewer.userName}`\n                        ? \"primary\"\n                        : \"inherit\"\n                    }\n                  />\n                </ListItemIcon>\n                <ListItemText primary={\"病人信息\"} />\n              </ListItem>\n            </Link>\n            <Divider />\n            <Link\n              to={`/doctor/${viewer.userName}/manage`}\n              className={classes.link}\n            >\n              <ListItem button key=\"doctorInfo\" onClick={props.onClose}>\n                <ListItemIcon>\n                  <LocalHospitalIcon\n                    color={\n                      location.pathname === `/doctor/${viewer.userName}/manage`\n                        ? \"primary\"\n                        : \"inherit\"\n                    }\n                  />\n                </ListItemIcon>\n                <ListItemText primary={\"医生信息\"} />\n              </ListItem>\n            </Link>\n            <Divider />\n            <Link\n              to={`/doctor/${viewer.userName}/config`}\n              className={classes.link}\n            >\n              <ListItem button key=\"doctorInfo\" onClick={props.onClose}>\n                <ListItemIcon>\n                  <SettingsApplicationsIcon\n                    color={\n                      location.pathname === `/doctor/${viewer.userName}/config`\n                        ? \"primary\"\n                        : \"inherit\"\n                    }\n                  />\n                </ListItemIcon>\n                <ListItemText primary={\"患者端\"} />\n              </ListItem>\n            </Link>\n            <Divider />\n          </List>\n        </>\n      ) : (\n        <>\n          <Card variant=\"outlined\" className={classes.personalInfoCard}>\n            <CardContent className={classes.personalInfoCardContent}>\n              <div className={classes.personalInfoText}>个人信息</div>\n              <div className={classes.idChip}>\n                <Chip\n                  size=\"small\"\n                  icon={<AssignmentIndIcon />}\n                  color=\"primary\"\n                  label={`门诊号：${viewer.userName}`}\n                  variant=\"outlined\"\n                />\n              </div>\n              <PersonalInformation viewer={viewer} />\n            </CardContent>\n          </Card>\n          <List>\n            <Link to=\"/user/home\" className={classes.link}>\n              <ListItem button key=\"form\">\n                <ListItemIcon>\n                  <DescriptionIcon\n                    color={\n                      location.pathname === \"/user/home\" ? \"primary\" : \"inherit\"\n                    }\n                  />\n                </ListItemIcon>\n                <ListItemText primary={\"量表\"} />\n              </ListItem>\n            </Link>\n            <Link to=\"/user/report\" className={classes.link}>\n              <ListItem button key=\"report\">\n                <ListItemIcon>\n                  <NoteIcon\n                    color={\n                      location.pathname === \"/user/report\"\n                        ? \"primary\"\n                        : \"inherit\"\n                    }\n                  />\n                </ListItemIcon>\n                <ListItemText primary={\"报告\"} />\n              </ListItem>\n            </Link>\n          </List>\n        </>\n      )}\n    </Drawer>\n  );\n};\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface Props {\n  totalNumber: number;\n  currentIndex: number;\n}\nconst PROGRESS_BAR_WIDTH = 100;\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: PROGRESS_BAR_WIDTH,\n      backgroundColor: \"rgba(0, 0, 0, 0.12)\",\n      display: \"flex\",\n      marginRight: 10,\n      height: 12,\n      borderRadius: 6,\n    },\n    finished: {\n      width: 0,\n      height: 12,\n      borderRadius: \"6px 0 0 6px\",\n      backgroundColor: \"#5eb8ff\",\n      maxWidth: PROGRESS_BAR_WIDTH - 6,\n    },\n    leftCircle: {\n      borderRadius: \"6px 0 0 6px\",\n    },\n    circle: {\n      height: 12,\n      width: 12,\n      backgroundColor: \"#5eb8ff\",\n    },\n    circlewrapper: {\n      overflow: \"hidden\",\n    },\n    rightCircle: {\n      borderRadius: 6,\n      backgroundColor: \"#5eb8ff\",\n    },\n    rightCircleWrapper: {\n      marginLeft: -6,\n    },\n  })\n);\n\nexport const ProgressBar = ({ totalNumber, currentIndex }: Props) => {\n  const classes = useStyles();\n  const widthOfFinishedPart =\n    (PROGRESS_BAR_WIDTH * (currentIndex + 1)) / totalNumber;\n  return (\n    <div className={classes.root}>\n      {widthOfFinishedPart > 12 ? (\n        <>\n          <div\n            className={classes.finished}\n            style={{\n              width: widthOfFinishedPart,\n            }}\n          />\n          {PROGRESS_BAR_WIDTH - widthOfFinishedPart <= 6 ? (\n            <div\n              className={\n                classes.rightCircleWrapper + \" \" + classes.circlewrapper\n              }\n              style={{ width: 12 - (PROGRESS_BAR_WIDTH - widthOfFinishedPart) }}\n            >\n              <div className={classes.rightCircle + \" \" + classes.circle} />\n            </div>\n          ) : null}\n        </>\n      ) : (\n        <div\n          className={classes.circlewrapper}\n          style={{\n            width: widthOfFinishedPart,\n          }}\n        >\n          <div className={classes.leftCircle + \" \" + classes.circle} />\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Timer as TimerIcon } from \"@material-ui/icons\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    timeNumber: {\n      marginLeft: 10,\n      userSelect: \"none\",\n      WebkitUserSelect: \"none\",\n      WebkitTouchCallout: \"none\",\n      KhtmlUserSelect: \"none\",\n      MozUserSelect: \"none\",\n      msUserSelect: \"none\",\n    },\n  })\n);\nexport const Timer = () => {\n  const classes = useStyles();\n  const [seconds, setSeconds] = useState(0);\n  useEffect(() => {\n    const interval = setTimeout(() => {\n      setSeconds(seconds + 1);\n    }, 1000);\n    return () => {\n      clearTimeout(interval);\n    };\n  }, [seconds]);\n  const hour = Math.floor(seconds / 3600);\n  const minute = Math.floor(seconds / 60);\n  const second = seconds % 60;\n  return (\n    <div className={classes.root}>\n      <TimerIcon />\n      <span className={classes.timeNumber}>{`${hour < 10 ? \"0\" + hour : hour}:${\n        minute < 10 ? \"0\" + minute : minute\n      }:${second < 10 ? \"0\" + second : second}`}</span>\n    </div>\n  );\n};\n","import React from \"react\";\n\ninterface Props {\n  index: number;\n  totalSize: number;\n}\n\nconst CHINESE_INDEXES = [\n  \"一\",\n  \"二\",\n  \"三\",\n  \"四\",\n  \"五\",\n  \"六\",\n  \"七\",\n  \"八\",\n  \"九\",\n  \"十\",\n];\n\nexport const QuestionIndexText = ({ index, totalSize }: Props) => {\n  let text: string;\n  if (totalSize <= 10) {\n    text = CHINESE_INDEXES[index] + \"、\";\n  } else {\n    text = String(index + 1) + \". \";\n  }\n  return <>{text}</>;\n};\n","import { QuestionnaireContent } from \"../../../../lib/graphql/queries/QuestionnaireContent/__generated__/QuestionnaireContent\";\n\nexport const yaleBrownCustomization = (\n  setAnswers: (\n    value: React.SetStateAction<{\n      [index: number]: number;\n    }>\n  ) => void,\n  setChoiceDisabled: (\n    value: React.SetStateAction<boolean[][] | null | undefined>\n  ) => void,\n  choiceDisabled: boolean[][] | null | undefined,\n  newAnswers: {\n    [x: number]: number;\n  },\n  currentQuestionIndex: number\n) => {\n  if (currentQuestionIndex === 0) {\n    const autoChooseChoices = [1, 2, 3, 4];\n    if (newAnswers[currentQuestionIndex] === 0) {\n      for (const autoChooseChoiceIndex of autoChooseChoices) {\n        newAnswers[autoChooseChoiceIndex] = 0;\n      }\n      setAnswers(newAnswers);\n      if (choiceDisabled) {\n        const newChoiceDisabled = choiceDisabled.map((choices) => [...choices]);\n        for (const autoChooseChoiceIndex of autoChooseChoices) {\n          for (\n            let i = 0;\n            i < newChoiceDisabled[autoChooseChoiceIndex].length;\n            i++\n          ) {\n            if (i !== 0) {\n              newChoiceDisabled[autoChooseChoiceIndex][i] = true;\n            }\n          }\n        }\n        setChoiceDisabled(newChoiceDisabled);\n      }\n    } else {\n      setAnswers(newAnswers);\n      if (choiceDisabled) {\n        const newChoiceDisabled = choiceDisabled.map((choices) => [...choices]);\n        for (const autoChooseChoiceIndex of autoChooseChoices) {\n          for (\n            let i = 0;\n            i < newChoiceDisabled[autoChooseChoiceIndex].length;\n            i++\n          ) {\n            if (i !== 0) {\n              newChoiceDisabled[autoChooseChoiceIndex][i] = false;\n            }\n          }\n        }\n        setChoiceDisabled(newChoiceDisabled);\n      }\n    }\n  } else if (currentQuestionIndex === 5) {\n    const autoChooseChoices = [6, 7, 8, 9];\n    if (newAnswers[currentQuestionIndex] === 0) {\n      for (const autoChooseChoiceIndex of autoChooseChoices) {\n        newAnswers[autoChooseChoiceIndex] = 0;\n      }\n      setAnswers(newAnswers);\n      if (choiceDisabled) {\n        const newChoiceDisabled = choiceDisabled.map((choices) => [...choices]);\n        for (const autoChooseChoiceIndex of autoChooseChoices) {\n          for (\n            let i = 0;\n            i < newChoiceDisabled[autoChooseChoiceIndex].length;\n            i++\n          ) {\n            if (i !== 0) {\n              newChoiceDisabled[autoChooseChoiceIndex][i] = true;\n            }\n          }\n        }\n        setChoiceDisabled(newChoiceDisabled);\n      }\n    } else {\n      setAnswers(newAnswers);\n      if (choiceDisabled) {\n        const newChoiceDisabled = choiceDisabled.map((choices) => [...choices]);\n        for (const autoChooseChoiceIndex of autoChooseChoices) {\n          for (\n            let i = 0;\n            i < newChoiceDisabled[autoChooseChoiceIndex].length;\n            i++\n          ) {\n            if (i !== 0) {\n              newChoiceDisabled[autoChooseChoiceIndex][i] = false;\n            }\n          }\n        }\n        setChoiceDisabled(newChoiceDisabled);\n      }\n    }\n  } else {\n    setAnswers(newAnswers);\n  }\n};\n\nexport const yaleBrownSkipQuestions = (\n  currentQuestionnIndex: number,\n  setCurrentQuestionIndex: (value: React.SetStateAction<number>) => void,\n  choice: number,\n  setIsAllowedToSubmit: (value: React.SetStateAction<boolean>) => void\n) => {\n  if (currentQuestionnIndex === 0 && choice === 0) {\n    setCurrentQuestionIndex(5);\n  } else if (currentQuestionnIndex === 5 && choice === 0) {\n    setCurrentQuestionIndex(9);\n    setIsAllowedToSubmit(true);\n  } else {\n    setCurrentQuestionIndex(currentQuestionnIndex + 1);\n  }\n};\n\nexport const yaleBrownInitialLoad = (\n  data: QuestionnaireContent,\n  choiceDisabled: boolean[][],\n  setChoiceDisabled: (choiceDisabled: null | boolean[][]) => void\n) => {\n  const newChoiceDisabled = choiceDisabled.map((choices) => [...choices]);\n  if (\n    data.partialAnswer &&\n    data.partialAnswer.answers &&\n    data.partialAnswer.answers[0] === 0\n  ) {\n    const autoChooseChoices = [1, 2, 3, 4];\n    for (const autoChooseChoiceIndex of autoChooseChoices) {\n      for (\n        let i = 0;\n        i < newChoiceDisabled[autoChooseChoiceIndex].length;\n        i++\n      ) {\n        if (i !== 0) {\n          newChoiceDisabled[autoChooseChoiceIndex][i] = true;\n        }\n      }\n    }\n  }\n  if (\n    data.partialAnswer &&\n    data.partialAnswer.answers &&\n    data.partialAnswer.answers[5] === 0\n  ) {\n    const autoChooseChoices = [6, 7, 8, 9];\n    for (const autoChooseChoiceIndex of autoChooseChoices) {\n      for (\n        let i = 0;\n        i < newChoiceDisabled[autoChooseChoiceIndex].length;\n        i++\n      ) {\n        if (i !== 0) {\n          newChoiceDisabled[autoChooseChoiceIndex][i] = true;\n        }\n      }\n    }\n  }\n  setChoiceDisabled(newChoiceDisabled);\n};\n","import {\n  QuestionnaireContent,\n  QuestionnaireContent_partialAnswer,\n  QuestionnaireContent_questionnaire,\n} from \"../../../../lib/graphql/queries/QuestionnaireContent/__generated__/QuestionnaireContent\";\n\nexport const embuRadioButtonOnClick = (\n  e: React.MouseEvent<HTMLLabelElement>,\n  index: number,\n  currentQuestionIndex: number,\n  selectChoiceLockRef: React.MutableRefObject<boolean>,\n  choiceDisabled: boolean[][] | null | undefined,\n  answers: {\n    [x: number]: number;\n  },\n  setAnswers: (answers: { [x: number]: number }) => void,\n  questionnaire: QuestionnaireContent_questionnaire,\n  setIsNextButtonDisabled: (isNextButtonDisabled: boolean) => void,\n  setCurrentQuestionIndex: (currentQuestionIndex: number) => void,\n  timeoutRef: React.MutableRefObject<NodeJS.Timeout | null>,\n  setIsAllowedToSubmit: (isAllowedToSubmit: boolean) => void,\n  needAddOne: boolean\n) => {\n  if (\n    selectChoiceLockRef.current ||\n    (choiceDisabled && choiceDisabled[currentQuestionIndex][index])\n  ) {\n    return;\n  }\n  const newAnswers = { ...answers };\n  if (needAddOne) newAnswers[currentQuestionIndex * 2 + 1] = index;\n  else newAnswers[currentQuestionIndex * 2] = index;\n\n  setAnswers(newAnswers);\n  if (currentQuestionIndex !== questionnaire.questions.length - 1) {\n    if (\n      newAnswers[currentQuestionIndex * 2] !== undefined &&\n      newAnswers[currentQuestionIndex * 2 + 1] !== undefined\n    ) {\n      // Go to the next question.\n      setIsNextButtonDisabled(true);\n      selectChoiceLockRef.current = true;\n      const timeout = setTimeout(() => {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n        if (timeoutRef.current) {\n          clearTimeout(timeoutRef.current);\n        }\n        setIsNextButtonDisabled(false);\n        selectChoiceLockRef.current = false;\n      }, 190);\n      timeoutRef.current = timeout;\n    }\n  } else {\n    setIsAllowedToSubmit(true);\n  }\n};\n\nexport const embuLoadPartialAnswers = (\n  partialAnswer: { answers: number[] } | null,\n  data: QuestionnaireContent,\n  setIsAllowedToSubmit: (isAllowedToSubmit: boolean) => void,\n  setAnswers: (answers: { [x: number]: number }) => void,\n  setCurrentQuestionIndex: (currentQuestionIndex: number) => void\n) => {\n  if (partialAnswer?.answers?.length) {\n    const newAnswers = {} as { [index: number]: number };\n    let unfinishedQuestionIndex: number | undefined = undefined;\n    partialAnswer.answers.forEach((answer, index) => {\n      if (answer !== -1) newAnswers[index] = answer;\n      else if (unfinishedQuestionIndex === undefined)\n        unfinishedQuestionIndex = index;\n    });\n    if (\n      partialAnswer.answers.length ===\n        data.questionnaire.questions.length * 2 &&\n      unfinishedQuestionIndex === undefined\n    ) {\n      setIsAllowedToSubmit(true);\n    } else {\n      if (\n        embuValidationAll(\n          newAnswers,\n          data.questionnaire.questions.length,\n          undefined,\n          undefined,\n          undefined,\n          false\n        )\n      ) {\n        setIsAllowedToSubmit(true);\n      }\n    }\n    setAnswers(newAnswers);\n    if (unfinishedQuestionIndex === undefined)\n      setCurrentQuestionIndex(\n        Math.min(\n          partialAnswer.answers.length,\n          data.questionnaire.questions.length - 1\n        )\n      );\n    else setCurrentQuestionIndex(Math.floor(unfinishedQuestionIndex / 2));\n  }\n};\n\nexport const embuShouldDisableNextButton = (\n  answers: {\n    [x: number]: number;\n  },\n  currentQuestionIndex: number,\n  questionNumber: number,\n  isNextButtonDisabled: boolean\n) => {\n  return (currentQuestionIndex === questionNumber - 1 || // Last question.\n    (answers[currentQuestionIndex * 2] === undefined &&\n      answers[currentQuestionIndex * 2 + 1] === undefined) || // Current question is not answered.\n    isNextButtonDisabled) && // A variable in state to try to disable the button.\n    !(\n      // If the button is disabled, then current question is not answered and next question is not answered.\n      (\n        (answers[currentQuestionIndex * 2] !== undefined ||\n          answers[currentQuestionIndex * 2 + 1] !== undefined) &&\n        (answers[(currentQuestionIndex + 1) * 2] !== undefined ||\n          answers[(currentQuestionIndex + 1) * 2 + 1] !== undefined)\n      )\n    )\n    ? true\n    : false;\n};\n\nexport const embuValidationAll = (\n  answers: {\n    [x: number]: number;\n  },\n  questionNumber: number,\n  setIsErrorDialogShown?: (isErrorDialogShown: boolean) => void,\n  setErrorDialogMessage?: (errorMessage: string) => void,\n  setErrorDialogQuestionIndex?: (index: number) => void,\n  showError = true\n): boolean => {\n  let isAllEvenQuestionAnswered = true;\n  let isAllOddQuestionAnswered = true;\n  let isAllEvenQuestionNotAnswered = true;\n  let isAllOddQuestionNotAnswered = true;\n  let firstUndefinedIndex = -1;\n  for (let i = 0; i < questionNumber; i++) {\n    if (answers[i * 2] === undefined) {\n      isAllEvenQuestionAnswered = false;\n      if (firstUndefinedIndex === -1) {\n        firstUndefinedIndex = i * 2;\n      }\n    } else {\n      isAllEvenQuestionNotAnswered = false;\n    }\n    if (answers[i * 2 + 1] === undefined) {\n      isAllOddQuestionAnswered = false;\n      if (firstUndefinedIndex === -1) {\n        firstUndefinedIndex = i * 2 + 1;\n      }\n    } else {\n      isAllOddQuestionNotAnswered = false;\n    }\n  }\n  // If all even questions and odd questions is answered, return true.\n  if (isAllEvenQuestionAnswered === true && isAllOddQuestionAnswered === true) {\n    return true;\n  }\n  if (isAllEvenQuestionAnswered && isAllOddQuestionNotAnswered) {\n    return true;\n  }\n  if (isAllOddQuestionAnswered && isAllEvenQuestionNotAnswered) {\n    return true;\n  }\n  // Open a dialog to tell the user to answer a specific question.\n  if (firstUndefinedIndex !== -1) {\n    if (\n      showError &&\n      setIsErrorDialogShown &&\n      setErrorDialogQuestionIndex &&\n      setErrorDialogMessage\n    ) {\n      setErrorDialogQuestionIndex(Math.floor(firstUndefinedIndex / 2));\n      if (firstUndefinedIndex % 2 === 0) {\n        setErrorDialogMessage(\n          `您未填写第${Math.floor(firstUndefinedIndex / 2) + 1}题的父亲部分。`\n        );\n      } else {\n        setErrorDialogMessage(\n          `您未填写第${Math.floor(firstUndefinedIndex / 2) + 1}题的母亲部分。`\n        );\n      }\n      setIsErrorDialogShown(true);\n    }\n    return false;\n  }\n  return true;\n};\n","export const psqiValidation = (\n  currentQuestionIndex: number,\n  value: number | string,\n  setErrorMessage: (errorMessage: string) => void,\n  showError: () => void\n) => {\n  if (value === undefined || value === null || value === \"\") {\n    setErrorMessage(\"未填写数值！\");\n    showError();\n    return false;\n  }\n  if (currentQuestionIndex === 0) {\n    if (value >= 24 || value < 0) {\n      setErrorMessage(\"数值不符合要求！\");\n      showError();\n      return false;\n    }\n  } else if (currentQuestionIndex === 1) {\n    if (value >= 1440 || value < 0) {\n      setErrorMessage(\"数值不符合要求！\");\n      showError();\n      return false;\n    }\n  } else if (currentQuestionIndex === 2) {\n    if (value >= 24 || value < 0) {\n      setErrorMessage(\"数值不符合要求！\");\n      showError();\n      return false;\n    }\n  } else if (currentQuestionIndex === 3) {\n    if (value < 0 || value >= 24) {\n      setErrorMessage(\"数值不符合要求！\");\n      showError();\n      return false;\n    }\n  }\n  return true;\n};\n","import { useMutation, useQuery } from \"@apollo/client\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  createStyles,\n  FormControl,\n  FormControlLabel,\n  makeStyles,\n  Radio,\n  Theme,\n  Link,\n  Fab,\n  useMediaQuery,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n  FormLabel,\n  RadioGroup,\n} from \"@material-ui/core\";\nimport React, {\n  SyntheticEvent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { ErrorIndicator, LoadingIndicator } from \"../../lib/components\";\nimport {\n  SAVE_PARTIAL_ANSWER,\n  SAVE_USER_ANSWER,\n} from \"../../lib/graphql/mutations\";\nimport {\n  SaveUserAnswer as SaveUserAnswerData,\n  SaveUserAnswerVariables,\n} from \"../../lib/graphql/mutations/SaveUserAnswer/__generated__/SaveUserAnswer\";\nimport { QUESTIONNAIRE_CONTENT } from \"../../lib/graphql/queries\";\nimport {\n  QuestionnaireContent as QuestionnaireContentData,\n  QuestionnaireContentVariables,\n} from \"../../lib/graphql/queries/QuestionnaireContent/__generated__/QuestionnaireContent\";\nimport { ProgressBar, QuestionIndexText } from \"./Components\";\nimport DirectionsRunIcon from \"@material-ui/icons/DirectionsRun\";\nimport {\n  SavePartialAnswer as SavePartialAnswerData,\n  SavePartialAnswerVariables,\n} from \"../../lib/graphql/mutations/SavePartialAnswer/__generated__/SavePartialAnswer\";\nimport { Timer } from \"./Components\";\nimport {\n  EMBU_FORM_KEY,\n  PSQI_FORM_KEY,\n  YAML_BROWN_FORM_KEY,\n} from \"../../lib/utils/constants\";\nimport {\n  yaleBrownCustomization,\n  yaleBrownSkipQuestions,\n  yaleBrownInitialLoad,\n  embuRadioButtonOnClick,\n  embuLoadPartialAnswers,\n  embuShouldDisableNextButton,\n  embuValidationAll,\n} from \"./Customization\";\nimport { PRIMARY_COLOR } from \"../..\";\nimport { psqiValidation } from \"./Customization/psqi\";\nimport { Patient } from \"../../lib/type\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formContainer: {\n      height: \"100%\",\n      width: \"100%\",\n      backgroundColor: \"#e8f1fd\",\n    },\n    form: {\n      width: 768,\n      maxWidth: \"90vw\",\n      margin: \"auto\",\n      paddingTop: 10,\n    },\n    titleCard: {\n      borderRadius: 8,\n      paddingBottom: 5,\n    },\n    titleCardColor: {\n      height: 10,\n      borderTopLeftRadius: 8,\n      borderTopRightRadius: 8,\n      backgroundColor: PRIMARY_COLOR,\n    },\n    titleCardContent: {\n      paddingTop: 5,\n      marginLeft: 5,\n      marginRight: 5,\n    },\n    titleCardMainText: {\n      fontSize: \"2rem\",\n      fontWeight: 400,\n      marginTop: 10,\n      marginBottom: 10,\n    },\n    questionCard: {\n      marginTop: 10,\n      borderRadius: 8,\n      marginBottom: 10,\n      paddingLeft: 5,\n      paddingRight: 5,\n    },\n    questionText: {\n      fontSize: \"1rem\",\n      fontWeight: 400,\n      marginBottom: 16,\n      marginTop: 10,\n      lineHeight: \"1.4rem\",\n    },\n    questionOptionText: {\n      fontSize: \"0.9rem\",\n      userSelect: \"none\",\n      WebkitUserSelect: \"none\",\n      WebkitTouchCallout: \"none\",\n      KhtmlUserSelect: \"none\",\n      MozUserSelect: \"none\",\n      msUserSelect: \"none\",\n    },\n    button: {\n      backgroundColor: \"#fff\",\n      color: PRIMARY_COLOR,\n      \"&:hover\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n    buttonWithRightMargin: {\n      marginRight: 10,\n    },\n    finishedText: {\n      fontSize: \"0.875rem\",\n      marginTop: 26,\n      marginBottom: 26,\n    },\n    homeLink: {\n      fontSize: \"0.875rem\",\n    },\n    exitButton: {\n      position: \"absolute\",\n      right: 20,\n      bottom: 20,\n      backgroundColor: \"#fff\",\n      \"&:hover\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n    timerContaner: {\n      position: \"absolute\",\n      left: 20,\n      bottom: 20,\n    },\n    footer: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n    },\n    progressWrapper: {\n      display: \"flex\",\n      alignItems: \"center\",\n      userSelect: \"none\",\n      WebkitUserSelect: \"none\",\n      WebkitTouchCallout: \"none\",\n      KhtmlUserSelect: \"none\",\n      MozUserSelect: \"none\",\n      msUserSelect: \"none\",\n    },\n    progressWrapperForSmallScreen: {\n      marginTop: 20,\n    },\n    questionParent: {\n      lineHeight: \"1.4rem\",\n      color: \"#757575\",\n    },\n    answerInput: {\n      marginRight: 10,\n      marginLeft: 10,\n    },\n    embuRadioContainer: {\n      width: \"50%\",\n    },\n  })\n);\n\ninterface Props {\n  patient: Patient;\n}\n\nexport const Form = ({ patient }: Props) => {\n  const isSmallScreen = useMediaQuery(\"(max-width:780px)\");\n  const classes = useStyles();\n  const query = new URLSearchParams(useLocation().search);\n  const id = query.get(\"id\");\n  const { loading, data } = useQuery<\n    QuestionnaireContentData,\n    QuestionnaireContentVariables\n  >(QUESTIONNAIRE_CONTENT, {\n    variables: {\n      id: id || \"\",\n    },\n    onCompleted: (data: QuestionnaireContentData) => {\n      const { partialAnswer } = data;\n      const initChoiceDisabled = data.questionnaire.questions.map(\n        (question) => {\n          return question.choices.map((_choice) => false);\n        }\n      );\n      if (data.questionnaire.key !== YAML_BROWN_FORM_KEY)\n        setChoiceDisabled(initChoiceDisabled);\n      else yaleBrownInitialLoad(data, initChoiceDisabled, setChoiceDisabled);\n\n      const localPartialAnswer = localStorage.getItem(\n        `${patient.userName}@${questionnaire.key}`\n      );\n      let answers: number[] = [];\n      if (partialAnswer?.answers?.length) {\n        answers = partialAnswer?.answers;\n        if (localPartialAnswer) {\n          const answerObject = JSON.parse(localPartialAnswer);\n          if (new Date(partialAnswer.date) > new Date(answerObject.time)) {\n            answers = partialAnswer?.answers;\n          } else {\n            answers = answerObject.answerArray;\n          }\n        }\n      } else if (localPartialAnswer) {\n        const answerObject = JSON.parse(localPartialAnswer);\n        answers = answerObject.answerArray;\n      }\n      if (data.questionnaire.key === EMBU_FORM_KEY) {\n        embuLoadPartialAnswers(\n          { answers },\n          data,\n          setIsAllowedToSubmit,\n          setAnswers,\n          setCurrentQuestionIndex\n        );\n      } else if (\n        partialAnswer?.answers?.length ||\n        localStorage.getItem(`${patient.userName}@${questionnaire.key}`)\n      ) {\n        const newAnswers = {} as { [index: number]: number };\n        let unfinishedQuestionIndex: number | undefined = undefined;\n        answers.forEach((answer, index) => {\n          if (answer !== -1) newAnswers[index] = answer;\n          else if (unfinishedQuestionIndex === undefined)\n            unfinishedQuestionIndex = index;\n        });\n        if (\n          answers.length === data.questionnaire.questions.length &&\n          unfinishedQuestionIndex === undefined\n        ) {\n          setIsAllowedToSubmit(true);\n        }\n        setAnswers(newAnswers);\n        if (unfinishedQuestionIndex === undefined)\n          setCurrentQuestionIndex(\n            Math.min(answers.length, data.questionnaire.questions.length - 1)\n          );\n        else setCurrentQuestionIndex(unfinishedQuestionIndex);\n      }\n    },\n    fetchPolicy: \"no-cache\",\n  });\n\n  const [saveUserAnswer] = useMutation<\n    SaveUserAnswerData,\n    SaveUserAnswerVariables\n  >(SAVE_USER_ANSWER, {\n    onCompleted: (data) => {\n      if (data.saveUserAnswer.didRequest) {\n        setIsDone(true);\n      }\n    },\n  });\n\n  const [savePartialAnswer] = useMutation<\n    SavePartialAnswerData,\n    SavePartialAnswerVariables\n  >(SAVE_PARTIAL_ANSWER);\n\n  const saveUserAnswerRef = useRef(saveUserAnswer);\n  const savePartialAnswerRef = useRef(savePartialAnswer);\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const autoSaveTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState<number>(0);\n  const [choiceDisabled, setChoiceDisabled] = useState<null | boolean[][]>();\n  const [answers, setAnswers] = useState<{ [index: number]: number }>({});\n  const [isDone, setIsDone] = useState(false);\n  const [isAllowedToSubmit, setIsAllowedToSubmit] = useState(false);\n  const [isNextButtonDisabled, setIsNextButtonDisabled] = useState(false);\n  const [confirmed, setConfirmed] = useState(false);\n  const history = useHistory();\n  const selectChoiceLockRef = useRef(false);\n  const [isErrorShown, setIsErrorShown] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const showError = () => {\n    setIsErrorShown(true);\n  };\n  // Error dialog.\n  const [isErrorDialogShown, setIsErrorDialogShown] = useState(false);\n  const closeErrorDialog = () => {\n    setIsErrorDialogShown(false);\n  };\n  const [errorDialogMessage, setErrorDialogMessage] = useState(\"\");\n  const [errorDialogQuestionIndex, setErrorDialogQuestionIndex] = useState<\n    number | null\n  >(null);\n  const goToCertainQuestion = () => {\n    if (errorDialogQuestionIndex !== null) {\n      setCurrentQuestionIndex(errorDialogQuestionIndex);\n    }\n    setIsErrorDialogShown(false);\n  };\n\n  const getAnswerArray = useCallback((): number[] => {\n    const questionnaire = data?.questionnaire;\n    if (!questionnaire) {\n      return [];\n    }\n    const answerArray = [];\n    let numberOfQuestions = questionnaire.questions.length;\n    if (questionnaire.key === EMBU_FORM_KEY) {\n      numberOfQuestions *= 2;\n    }\n    for (let i = 0; i < numberOfQuestions; i++) {\n      if (answers[i] !== undefined) answerArray.push(answers[i]);\n      else answerArray.push(-1);\n    }\n    return answerArray;\n  }, [answers, data?.questionnaire]);\n  const savePartialAnswerToBackend = useCallback(() => {\n    const answerArray = getAnswerArray();\n    if (id && answerArray.length !== 0)\n      return savePartialAnswerRef.current({\n        variables: {\n          input: { questionnaireId: id, answers: answerArray },\n        },\n      });\n    return Promise.resolve();\n  }, [getAnswerArray, id]);\n  const savePartialAnswerToLocalStorage = useCallback(() => {\n    if (data) {\n      const answerArray = getAnswerArray();\n      localStorage.setItem(\n        `${patient.userName}@${data.questionnaire.key}`,\n        JSON.stringify({\n          time: new Date(),\n          answerArray,\n        })\n      );\n    }\n  }, [getAnswerArray, patient.userName, data]);\n  useEffect(() => {\n    savePartialAnswerToLocalStorage();\n  }, [savePartialAnswerToLocalStorage]);\n  // // Don't send partial answers to backend automatically.\n  // useEffect(() => {\n  //   autoSaveTimeoutRef.current = setInterval(() => {\n  //     savePartialAnswerToBackend();\n  //   }, 10000);\n  //   return () => {\n  //     if (autoSaveTimeoutRef.current) {\n  //       clearInterval(autoSaveTimeoutRef.current);\n  //       autoSaveTimeoutRef.current = null;\n  //     }\n  //   };\n  // }, [savePartialAnswerToBackend]);\n\n  if (loading) {\n    return <LoadingIndicator />;\n  }\n  if (!data) {\n    return <div>Error</div>;\n  }\n\n  const { questionnaire } = data;\n\n  const closeConfirmDialog = () => {\n    setConfirmed(true);\n  };\n\n  const validation = async (all = false) => {\n    if (questionnaire.key === PSQI_FORM_KEY) {\n      if (all === true) {\n        for (let i = 0; i < questionnaire.questions.length; i++) {\n          if (!psqiValidation(i, answers[i], setErrorMessage, showError)) {\n            return false;\n          }\n        }\n        return true;\n      }\n      return psqiValidation(\n        currentQuestionIndex,\n        answers[currentQuestionIndex],\n        setErrorMessage,\n        showError\n      );\n    } else if (questionnaire.key === EMBU_FORM_KEY) {\n      if (all === true) {\n        return embuValidationAll(\n          answers,\n          questionnaire.questions.length,\n          setIsErrorDialogShown,\n          setErrorDialogMessage,\n          setErrorDialogQuestionIndex\n        );\n      }\n    }\n    return true;\n  };\n  const onNextButtonClick = async () => {\n    const validationResult = await validation();\n    if (validationResult === false) {\n      return;\n    }\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n  };\n\n  const onSubmit = async () => {\n    const validationResult = await validation(true);\n    if (validationResult === false) {\n      return;\n    }\n    if (autoSaveTimeoutRef.current) {\n      clearTimeout(autoSaveTimeoutRef.current);\n      autoSaveTimeoutRef.current = null;\n    }\n    if (id) {\n      const answerArray = getAnswerArray();\n      await saveUserAnswerRef.current({\n        variables: {\n          input: { questionnaireId: id, answers: answerArray },\n        },\n      });\n      localStorage.removeItem(`${patient.userName}@${questionnaire.key}`);\n    }\n  };\n\n  const onBackButtonClick = async () => {\n    // const validationResult = await validation();\n    // if (validationResult === false) {\n    //   return;\n    // }\n    setCurrentQuestionIndex(currentQuestionIndex - 1);\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n  };\n\n  const goToHome = () => {\n    history.push(\"/user/home\");\n  };\n\n  const handleExitButtonClick = async () => {\n    if (autoSaveTimeoutRef.current) {\n      clearTimeout(autoSaveTimeoutRef.current);\n      autoSaveTimeoutRef.current = null;\n    }\n    await savePartialAnswerToBackend();\n    goToHome();\n  };\n\n  const goToHomeLinkOnClick = (e: SyntheticEvent) => {\n    e.preventDefault();\n    goToHome();\n  };\n  const onAnswerInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newAnswers = { ...answers };\n    if (\n      e.target.value !== undefined &&\n      e.target.value !== null &&\n      e.target.value !== \"\"\n    )\n      newAnswers[currentQuestionIndex] = Number(e.target.value);\n    else delete newAnswers[currentQuestionIndex];\n    setAnswers(newAnswers);\n  };\n  const handleRadioChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const selectedChoice = (event.target as HTMLInputElement).value;\n    const index = currentQuestion.choices.indexOf(selectedChoice);\n    if (\n      selectChoiceLockRef.current ||\n      (choiceDisabled && choiceDisabled[currentQuestionIndex][index])\n    ) {\n      return;\n    }\n    const newAnswers = { ...answers };\n    newAnswers[currentQuestionIndex] = index;\n    if (questionnaire.key === YAML_BROWN_FORM_KEY) {\n      yaleBrownCustomization(\n        setAnswers,\n        setChoiceDisabled,\n        choiceDisabled,\n        newAnswers,\n        currentQuestionIndex\n      );\n    } else {\n      setAnswers(newAnswers);\n    }\n    if (currentQuestionIndex !== questionnaire.questions.length - 1) {\n      setIsNextButtonDisabled(true);\n      selectChoiceLockRef.current = true;\n      const timeout = setTimeout(() => {\n        if (questionnaire.key === YAML_BROWN_FORM_KEY) {\n          yaleBrownSkipQuestions(\n            currentQuestionIndex,\n            setCurrentQuestionIndex,\n            index,\n            setIsAllowedToSubmit\n          );\n        } else {\n          setCurrentQuestionIndex(currentQuestionIndex + 1);\n          if (timeoutRef.current) {\n            clearTimeout(timeoutRef.current);\n          }\n        }\n        setIsNextButtonDisabled(false);\n        selectChoiceLockRef.current = false;\n      }, 190);\n      timeoutRef.current = timeout;\n    } else {\n      setIsAllowedToSubmit(true);\n    }\n  };\n\n  const radioButtonOnClick = (\n    e: React.MouseEvent<HTMLLabelElement>,\n    index: number,\n    questionIndex: number\n  ) => {\n    if (\n      selectChoiceLockRef.current ||\n      (choiceDisabled && choiceDisabled[currentQuestionIndex][index])\n    ) {\n      return;\n    }\n    const newAnswers = { ...answers };\n    newAnswers[currentQuestionIndex] = index;\n    if (questionnaire.key === YAML_BROWN_FORM_KEY) {\n      yaleBrownCustomization(\n        setAnswers,\n        setChoiceDisabled,\n        choiceDisabled,\n        newAnswers,\n        currentQuestionIndex\n      );\n    } else {\n      setAnswers(newAnswers);\n    }\n    if (currentQuestionIndex !== questionnaire.questions.length - 1) {\n      setIsNextButtonDisabled(true);\n      selectChoiceLockRef.current = true;\n      const timeout = setTimeout(() => {\n        if (questionnaire.key === YAML_BROWN_FORM_KEY) {\n          yaleBrownSkipQuestions(\n            currentQuestionIndex,\n            setCurrentQuestionIndex,\n            index,\n            setIsAllowedToSubmit\n          );\n        } else {\n          setCurrentQuestionIndex(currentQuestionIndex + 1);\n          if (timeoutRef.current) {\n            clearTimeout(timeoutRef.current);\n          }\n        }\n        setIsNextButtonDisabled(false);\n        selectChoiceLockRef.current = false;\n      }, 190);\n      timeoutRef.current = timeout;\n    } else {\n      setIsAllowedToSubmit(true);\n    }\n  };\n  let checkNextButtonShouldDisable =\n    (currentQuestionIndex === questionnaire.questions.length - 1 || // Last question.\n      answers[currentQuestionIndex] === undefined || // Current question is not answered.\n      isNextButtonDisabled) && // A variable in state to try to disable the button.\n    !(\n      // If the button is disabled, then current question is not answered and next question is not answered.\n      (\n        answers[currentQuestionIndex] !== undefined &&\n        answers[currentQuestionIndex + 1] !== undefined\n      )\n    )\n      ? true\n      : false;\n  if (questionnaire.key === EMBU_FORM_KEY) {\n    checkNextButtonShouldDisable = embuShouldDisableNextButton(\n      answers,\n      currentQuestionIndex,\n      questionnaire.questions.length,\n      isNextButtonDisabled\n    );\n  }\n\n  const currentQuestion = questionnaire.questions[currentQuestionIndex];\n  return (\n    <div className={classes.formContainer}>\n      <div className={classes.form}>\n        <Card className={classes.titleCard} variant=\"outlined\">\n          <div className={classes.titleCardColor} />\n          <CardContent className={classes.titleCardContent}>\n            <div className={classes.titleCardMainText}>\n              {questionnaire.name}\n            </div>\n            {isDone && (\n              <>\n                <div className={classes.finishedText}>\n                  您已完成此量表的填写。\n                </div>\n                <Link\n                  onClick={goToHomeLinkOnClick}\n                  className={classes.homeLink}\n                  href=\"/\"\n                >\n                  回到主页\n                </Link>\n              </>\n            )}\n          </CardContent>\n        </Card>\n        {!isDone && (\n          <>\n            <Card className={classes.questionCard} variant=\"outlined\">\n              <CardContent>\n                {currentQuestion.parent ? (\n                  <div className={classes.questionParent}>\n                    {currentQuestion.parent}\n                  </div>\n                ) : null}\n                <div className={classes.questionText}>\n                  <QuestionIndexText\n                    index={currentQuestionIndex}\n                    totalSize={questionnaire.questions.length}\n                  />\n                  {currentQuestion.choices.length === 0 &&\n                  currentQuestion.content &&\n                  currentQuestion.content.includes(\"{input}\") ? (\n                    <>\n                      {currentQuestion.content.split(\"{input}\")[0]}\n                      <TextField\n                        type=\"number\"\n                        className={classes.answerInput}\n                        value={\n                          answers[currentQuestionIndex] !== null &&\n                          answers[currentQuestionIndex] !== undefined\n                            ? answers[currentQuestionIndex]\n                            : \"\"\n                        }\n                        onChange={onAnswerInputChange}\n                      />\n                      {currentQuestion.content.split(\"{input}\")[1]}\n                    </>\n                  ) : (\n                    currentQuestion.content\n                  )}\n                </div>\n                {questionnaire.key !== EMBU_FORM_KEY ? (\n                  <RadioGroup\n                    value={\n                      currentQuestion.choices[answers[currentQuestionIndex]] ||\n                      \"\"\n                    }\n                    onChange={handleRadioChange}\n                  >\n                    <FormControl component=\"fieldset\">\n                      {currentQuestion.choices.map((choice, index) => (\n                        <FormControlLabel\n                          value={choice}\n                          control={<Radio color=\"primary\" />}\n                          key={`choice-${index}`}\n                          label={\n                            <span className={classes.questionOptionText}>\n                              {choice}\n                            </span>\n                          }\n                          disabled={\n                            choiceDisabled &&\n                            choiceDisabled[currentQuestionIndex][index]\n                              ? true\n                              : undefined\n                          }\n                          // checked={answers[currentQuestionIndex] === index}\n                          onClick={\n                            answers[currentQuestionIndex] === index\n                              ? (e: React.MouseEvent<HTMLLabelElement>) =>\n                                  radioButtonOnClick(\n                                    e,\n                                    index,\n                                    currentQuestionIndex\n                                  )\n                              : undefined\n                          }\n                        />\n                      ))}\n                    </FormControl>\n                  </RadioGroup>\n                ) : (\n                  <>\n                    <FormControl\n                      component=\"fieldset\"\n                      className={classes.embuRadioContainer}\n                    >\n                      <FormLabel component=\"legend\">父亲</FormLabel>\n                      {currentQuestion.choices.map((choice, index) => (\n                        <FormControlLabel\n                          value={choice}\n                          control={<Radio color=\"primary\" />}\n                          key={`choice-${index}`}\n                          label={\n                            <span className={classes.questionOptionText}>\n                              {choice}\n                            </span>\n                          }\n                          checked={answers[currentQuestionIndex * 2] === index}\n                          onClick={(e) =>\n                            embuRadioButtonOnClick(\n                              e,\n                              index,\n                              currentQuestionIndex,\n                              selectChoiceLockRef,\n                              choiceDisabled,\n                              answers,\n                              setAnswers,\n                              questionnaire,\n                              setIsNextButtonDisabled,\n                              setCurrentQuestionIndex,\n                              timeoutRef,\n                              setIsAllowedToSubmit,\n                              false\n                            )\n                          }\n                        />\n                      ))}\n                    </FormControl>\n                    <FormControl component=\"fieldset\">\n                      <FormLabel component=\"legend\">母亲</FormLabel>\n                      {currentQuestion.choices.map((choice, index) => (\n                        <FormControlLabel\n                          value={choice}\n                          control={<Radio color=\"primary\" />}\n                          key={`choice-${index}`}\n                          label={\n                            <span className={classes.questionOptionText}>\n                              {choice}\n                            </span>\n                          }\n                          checked={\n                            answers[currentQuestionIndex * 2 + 1] === index\n                          }\n                          onClick={(e) =>\n                            embuRadioButtonOnClick(\n                              e,\n                              index,\n                              currentQuestionIndex,\n                              selectChoiceLockRef,\n                              choiceDisabled,\n                              answers,\n                              setAnswers,\n                              questionnaire,\n                              setIsNextButtonDisabled,\n                              setCurrentQuestionIndex,\n                              timeoutRef,\n                              setIsAllowedToSubmit,\n                              true\n                            )\n                          }\n                        />\n                      ))}\n                    </FormControl>\n                  </>\n                )}\n              </CardContent>\n            </Card>\n\n            <div className={isSmallScreen ? \"\" : classes.footer}>\n              <div>\n                <Button\n                  className={\n                    classes.buttonWithRightMargin + \" \" + classes.button\n                  }\n                  variant=\"contained\"\n                  onClick={onBackButtonClick}\n                  disabled={currentQuestionIndex !== 0 ? false : true}\n                >\n                  上一题\n                </Button>\n                <Button\n                  className={\n                    classes.buttonWithRightMargin + \" \" + classes.button\n                  }\n                  variant=\"contained\"\n                  onClick={onNextButtonClick}\n                  disabled={checkNextButtonShouldDisable}\n                >\n                  下一题\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={onSubmit}\n                  disabled={!isAllowedToSubmit}\n                >\n                  提交\n                </Button>\n              </div>\n              <div\n                className={\n                  classes.progressWrapper +\n                  \" \" +\n                  (isSmallScreen ? classes.progressWrapperForSmallScreen : \"\")\n                }\n              >\n                <ProgressBar\n                  totalNumber={questionnaire.questions.length}\n                  currentIndex={currentQuestionIndex}\n                />\n                {`第 ${currentQuestionIndex + 1} 题（共\n                 ${questionnaire.questions.length} 题）`}\n              </div>\n            </div>\n            <div className={classes.timerContaner}>\n              <Timer />\n            </div>\n            <Fab\n              className={classes.exitButton}\n              onClick={handleExitButtonClick}\n              variant=\"extended\"\n            >\n              <DirectionsRunIcon color=\"primary\" />\n              暂存并退出\n            </Fab>\n          </>\n        )}\n      </div>\n      <Dialog\n        open={!confirmed && !!questionnaire.instruction}\n        onClose={closeConfirmDialog}\n      >\n        <DialogTitle>指导语</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{questionnaire.instruction}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeConfirmDialog} color=\"primary\" autoFocus>\n            继续\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <ErrorIndicator\n        showError={isErrorShown}\n        setShowError={setIsErrorShown}\n        errorMessage={errorMessage}\n      />\n      <Dialog open={isErrorDialogShown} onClose={closeErrorDialog}>\n        <DialogTitle>提示</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{errorDialogMessage}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={goToCertainQuestion} color=\"primary\" autoFocus>\n            前往该题\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import { useMutation } from \"@apollo/client\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  createStyles,\n  FormControl,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Theme,\n  Toolbar,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { ErrorIndicator } from \"../../lib/components\";\nimport { CREATE_ACCOUNT } from \"../../lib/graphql/mutations\";\nimport {\n  CreateAccount as CreateAccountData,\n  CreateAccountVariables,\n} from \"../../lib/graphql/mutations/CreateAccount/__generated__/CreateAccount\";\nimport { Viewer } from \"../../lib/type\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    createAccountCard: {\n      borderRadius: 8,\n      width: 800,\n      margin: \"30px auto 0\",\n    },\n    createAccountText: {\n      fontSize: \"1.5rem\",\n      textAlign: \"left\",\n      marginBottom: 10,\n      marginTop: 15,\n      paddingLeft: 40,\n    },\n    promptText: {\n      marginBottom: 24,\n      marginLeft: 40,\n      fontSize: \"1rem\",\n    },\n    inputContainer: {\n      margin: \"0 40px\",\n    },\n    input: {\n      width: \"30%\",\n      paddingRight: 10,\n      marginBottom: 10,\n    },\n    buttonContainer: {\n      marginTop: 30,\n      marginLeft: 40,\n      marginRight: 40,\n      marginBottom: 30,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n    },\n    formClassifyText: {\n      color: \"#5f6368\",\n      fontSize: \"0.8em\",\n      marginBottom: 5,\n      marginTop: 10,\n    },\n  })\n);\n\ninterface Props {\n  isAuthorized: boolean;\n  setViewer: (viewer: Viewer) => void;\n}\n\ninterface UserInfo {\n  name: string;\n  userName: string;\n  gender: string;\n  password: string;\n  education: string;\n  marriageStatus: string;\n  jobStatus: string;\n  age: string;\n}\n\nconst initialUserInfo = {\n  name: \"\",\n  userName: \"\",\n  gender: \"\",\n  password: \"\",\n  education: \"\",\n  marriageStatus: \"\",\n  jobStatus: \"\",\n  age: \"\",\n};\n\nexport const CreateAccount = ({ isAuthorized, setViewer }: Props) => {\n  const classes = useStyles();\n  const [userInfo, setUserInfo] = useState<UserInfo>(initialUserInfo);\n  const [reenteredPassword, setReenteredPassword] = useState<string>(\"\");\n  const [createAccount] = useMutation<\n    CreateAccountData,\n    CreateAccountVariables\n  >(CREATE_ACCOUNT, {\n    onCompleted: (data) => {\n      if (data && data.createAccount && data.createAccount.token) {\n        setViewer(data.createAccount);\n      }\n    },\n    onError: (error) => {\n      if (\n        error.message.includes(\"One user with this userName already exists.\")\n      ) {\n        setErrorMessage(\"此门诊号已被注册！\");\n        setShowError(true);\n        setErrorField(\"userNameDuplicate\");\n      }\n    },\n  });\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\n  const [showError, setShowError] = useState(false);\n  const [errorField, setErrorField] = useState<string>();\n  const createAccountButtonOnClick = () => {\n    if (!userInfo.userName) {\n      setErrorMessage(\"请输入您的门诊号！\");\n      setShowError(true);\n      setErrorField(\"userName\");\n      return;\n    }\n    if (!userInfo.password) {\n      setErrorMessage(\"请输入您的密码！\");\n      setShowError(true);\n      setErrorField(\"password\");\n      return;\n    }\n    if (!reenteredPassword) {\n      setErrorMessage(\"请确认您输入的密码！\");\n      setShowError(true);\n      setErrorField(\"reenteredPassword\");\n      return;\n    }\n    if (userInfo.password !== reenteredPassword) {\n      setErrorMessage(\"两次输入的密码不一致！\");\n      setShowError(true);\n      setErrorField(\"reenteredPasswordNotSame\");\n      return;\n    }\n    if (!userInfo.name) {\n      setErrorMessage(\"请输入您的姓名！\");\n      setShowError(true);\n      setErrorField(\"name\");\n      return;\n    }\n    createAccount({\n      variables: {\n        input: {\n          ...userInfo,\n          age: userInfo.age === \"\" ? undefined : Number(userInfo.age),\n        },\n      },\n    });\n  };\n  const onUserNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserInfo({ ...userInfo, userName: e.target.value });\n    if (\n      errorField === \"userName\" ||\n      (errorField === \"userNameDuplicate\" && e.target.value)\n    ) {\n      setErrorField(undefined);\n    }\n  };\n  const onPasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserInfo({ ...userInfo, password: e.target.value });\n    if (errorField === \"password\" && e.target.value) {\n      setErrorField(undefined);\n    }\n  };\n  const onReenteredPasswordChange = (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setReenteredPassword(e.target.value);\n    if (errorField === \"reenteredPassword\" && e.target.value) {\n      setErrorField(undefined);\n    } else if (\n      errorField === \"reenteredPasswordNotSame\" &&\n      e.target.value === userInfo.password\n    ) {\n      setErrorField(undefined);\n    }\n  };\n  const onNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserInfo({ ...userInfo, name: e.target.value });\n    if (errorField === \"name\" && e.target.value) {\n      setErrorField(undefined);\n    }\n  };\n  const onGenderChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setUserInfo({ ...userInfo, gender: e.target.value as string });\n  };\n  const onAgeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserInfo({ ...userInfo, age: e.target.value });\n  };\n  const onEducationChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setUserInfo({ ...userInfo, education: e.target.value as string });\n  };\n  const onJobChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserInfo({ ...userInfo, jobStatus: e.target.value });\n  };\n  const onMarraigeChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setUserInfo({ ...userInfo, marriageStatus: e.target.value as string });\n  };\n  if (isAuthorized) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <>\n      <Toolbar />\n      <Card className={classes.createAccountCard} variant=\"outlined\">\n        <CardContent>\n          <div className={classes.createAccountText}>注册</div>\n          <div className={classes.promptText}>请输入您的个人信息</div>\n          <form>\n            <div className={classes.inputContainer}>\n              <div className={classes.formClassifyText}>登录信息</div>\n              <div>\n                <TextField\n                  required\n                  className={classes.input}\n                  color=\"primary\"\n                  label=\"门诊号\"\n                  size=\"small\"\n                  value={userInfo.userName}\n                  onChange={onUserNameChange}\n                  helperText={\n                    errorField === \"userName\"\n                      ? \"请输入您的门诊号！\"\n                      : errorField === \"userNameDuplicate\"\n                      ? \"此门诊号已被注册！\"\n                      : undefined\n                  }\n                  error={\n                    errorField === \"userName\" ||\n                    errorField === \"userNameDuplicate\"\n                      ? true\n                      : undefined\n                  }\n                />\n              </div>\n              <div>\n                <TextField\n                  required\n                  className={classes.input}\n                  color=\"primary\"\n                  type=\"password\"\n                  label=\"密码\"\n                  size=\"small\"\n                  value={userInfo.password}\n                  onChange={onPasswordChange}\n                  helperText={\n                    errorField === \"password\" ? \"请输入您的密码！\" : undefined\n                  }\n                  error={errorField === \"password\" ? true : undefined}\n                />\n                <TextField\n                  required\n                  type=\"password\"\n                  className={classes.input}\n                  color=\"primary\"\n                  label=\"确认密码\"\n                  size=\"small\"\n                  value={reenteredPassword}\n                  onChange={onReenteredPasswordChange}\n                  helperText={\n                    errorField === \"reenteredPassword\"\n                      ? \"请确认您的密码！\"\n                      : errorField === \"reenteredPasswordNotSame\"\n                      ? \"两次输入的密码不一致！\"\n                      : undefined\n                  }\n                  error={\n                    errorField === \"reenteredPassword\" ||\n                    errorField === \"reenteredPasswordNotSame\"\n                      ? true\n                      : undefined\n                  }\n                />\n              </div>\n              <div className={classes.formClassifyText}>个人信息</div>\n              <TextField\n                required\n                className={classes.input}\n                color=\"primary\"\n                label=\"姓名\"\n                size=\"small\"\n                value={userInfo.name}\n                onChange={onNameChange}\n                helperText={\n                  errorField === \"name\" ? \"请输入您的姓名!\" : undefined\n                }\n                error={errorField === \"name\" ? true : undefined}\n              />\n              <FormControl className={classes.input} size=\"small\">\n                <InputLabel>性别</InputLabel>\n                <Select\n                  color=\"primary\"\n                  label=\"性别\"\n                  value={userInfo.gender}\n                  onChange={onGenderChange}\n                >\n                  <MenuItem value=\"男\">男</MenuItem>\n                  <MenuItem value=\"女\">女</MenuItem>\n                </Select>\n              </FormControl>\n              <TextField\n                className={classes.input}\n                color=\"primary\"\n                label=\"年龄\"\n                size=\"small\"\n                value={userInfo.age}\n                onChange={onAgeChange}\n              />\n              <FormControl className={classes.input} size=\"small\">\n                <InputLabel>教育</InputLabel>\n                <Select\n                  color=\"primary\"\n                  value={userInfo.education}\n                  onChange={onEducationChange}\n                >\n                  <MenuItem value=\"高中以下\">高中以下</MenuItem>\n                  <MenuItem value=\"大中专科\">大中专科</MenuItem>\n                  <MenuItem value=\"本科\">本科</MenuItem>\n                  <MenuItem value=\"硕士\">硕士</MenuItem>\n                  <MenuItem value=\"博士\">博士</MenuItem>\n                </Select>\n              </FormControl>\n              <TextField\n                className={classes.input}\n                color=\"primary\"\n                label=\"职业\"\n                size=\"small\"\n                value={userInfo.jobStatus}\n                onChange={onJobChange}\n              />\n              <FormControl className={classes.input} size=\"small\">\n                <InputLabel>婚姻</InputLabel>\n                <Select\n                  color=\"primary\"\n                  value={userInfo.marriageStatus}\n                  onChange={onMarraigeChange}\n                >\n                  <MenuItem value=\"已婚\">已婚</MenuItem>\n                  <MenuItem value=\"未婚\">未婚</MenuItem>\n                </Select>\n              </FormControl>\n            </div>\n\n            <div className={classes.buttonContainer}>\n              <Link to=\"/login\">\n                <Button>我已有账号</Button>\n              </Link>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={createAccountButtonOnClick}\n              >\n                注册\n              </Button>\n            </div>\n          </form>\n        </CardContent>\n      </Card>\n      <ErrorIndicator\n        showError={showError}\n        setShowError={setShowError}\n        errorMessage={errorMessage}\n      />\n    </>\n  );\n};\n","import { useQuery } from \"@apollo/client\";\nimport {\n  Button,\n  Checkbox,\n  createStyles,\n  FormControl,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Paper,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Theme,\n} from \"@material-ui/core\";\nimport { CheckCircleOutline } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\nimport { LoadingIndicator } from \"../../lib/components\";\nimport { QUESTIONNAIRE_LIST } from \"../../lib/graphql/queries\";\nimport {\n  QuestionnaireList as QuestionnaireListData,\n  QuestionnaireListVariables,\n} from \"../../lib/graphql/queries/QuestionnaireList/__generated__/QuestionnaireList\";\nimport { ReportPdf } from \"../../lib/components\";\nimport { withReportPdfData } from \"./components\";\n\nconst PdfViewer = withReportPdfData(ReportPdf);\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    content: {\n      padding: \"5px 10px\",\n    },\n    questionnaireTable: {\n      marginTop: 20,\n      marginBottom: 20,\n      maxHeight: \"calc(100vh - 200px)\",\n      overflow: \"auto\",\n    },\n    doneIcon: {\n      color: \"#4caf50\",\n    },\n    pageSizeSelect: {\n      minWidth: 100,\n      marginRight: 10,\n    },\n  })\n);\n\ninterface Props {\n  patientName?: string;\n}\nexport const Report = ({ patientName }: Props) => {\n  const classes = useStyles();\n  const { loading, data, error: questionnaireListError } = useQuery<\n    QuestionnaireListData,\n    QuestionnaireListVariables\n  >(QUESTIONNAIRE_LIST, {\n    variables: { isReport: true },\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      const questionnaireList = data.questionnaireList;\n      let count = 0;\n      for (const questionnaire of questionnaireList) {\n        if (questionnaire.done) {\n          count += 1;\n        }\n      }\n      setNumberOfFinishedQuestionnaires(count);\n      const newselectedUserAnswers = new Set<string>();\n      for (const questionnaire of questionnaireList) {\n        if (questionnaire.done && questionnaire.userAnswerId)\n          newselectedUserAnswers.add(questionnaire.userAnswerId);\n      }\n      setSelectedUserAnswers(newselectedUserAnswers);\n    },\n  });\n  const [selectedUserAnswers, setSelectedUserAnswers] = useState<Set<string>>(\n    new Set<string>()\n  );\n  const [pageSize, setPageSize] = useState(\"a5\");\n  const handlePageSizeChange = (\n    event: React.ChangeEvent<{ value: unknown }>\n  ) => {\n    setPageSize(event.target.value as string);\n  };\n  const [\n    numberOfFinishedQuestionnaires,\n    setNumberOfFinishedQuestionnaires,\n  ] = useState<number | null>(null);\n  const [isReportVisible, setIsReportVisible] = useState(false);\n\n  if (loading || !data || numberOfFinishedQuestionnaires === null) {\n    return <LoadingIndicator />;\n  }\n\n  const questionnaireList = data.questionnaireList;\n\n  const selectedQuestionnaireArray: string[] = [];\n  questionnaireList.forEach((questionnaire) => {\n    if (questionnaire.done && questionnaire.userAnswerId) {\n      if (selectedUserAnswers.has(questionnaire.userAnswerId)) {\n        selectedQuestionnaireArray.push(questionnaire.userAnswerId);\n      }\n    }\n  });\n  if (isReportVisible) {\n    return (\n      <PdfViewer\n        userAnswerIds={selectedQuestionnaireArray}\n        closeReport={() => setIsReportVisible(false)}\n        pageSize={pageSize}\n        patientName={patientName}\n      />\n    );\n  }\n  const selectQuestionnaire = (\n    event: React.ChangeEvent<HTMLInputElement>,\n    userAnswerId: string\n  ) => {\n    const checked = event.target.checked;\n    const newselectedUserAnswers = new Set(selectedUserAnswers);\n    if (checked) {\n      newselectedUserAnswers.add(userAnswerId);\n    } else {\n      newselectedUserAnswers.delete(userAnswerId);\n    }\n    setSelectedUserAnswers(newselectedUserAnswers);\n  };\n  const selectAllQuestionnaires = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const checked = event.target.checked;\n    const newselectedUserAnswers = new Set<string>();\n    if (checked) {\n      for (const questionnaire of questionnaireList) {\n        if (questionnaire.done && questionnaire.userAnswerId)\n          newselectedUserAnswers.add(questionnaire.userAnswerId);\n      }\n    }\n    setSelectedUserAnswers(newselectedUserAnswers);\n  };\n  const generateReport = () => {\n    setIsReportVisible(true);\n  };\n  return (\n    <div className={classes.content}>\n      <TableContainer component={Paper} className={classes.questionnaireTable}>\n        <Table size=\"small\" aira-label=\"选择已完成的量表，生成报告\">\n          <TableHead>\n            <TableRow>\n              <TableCell padding=\"checkbox\">\n                <Checkbox\n                  checked={\n                    selectedUserAnswers.size ===\n                      numberOfFinishedQuestionnaires &&\n                    selectedUserAnswers.size !== 0\n                  }\n                  disabled={numberOfFinishedQuestionnaires === 0}\n                  onChange={selectAllQuestionnaires}\n                />\n              </TableCell>\n              <TableCell>量表</TableCell>\n              <TableCell>完成状态</TableCell>\n              <TableCell>完成日期</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {questionnaireList.map((questionnaire, index) => (\n              <TableRow key={`questionnaire-${index}`}>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    disabled={!questionnaire.done}\n                    checked={\n                      !!questionnaire.userAnswerId &&\n                      selectedUserAnswers.has(questionnaire.userAnswerId)\n                    }\n                    onChange={(e) =>\n                      questionnaire.userAnswerId &&\n                      selectQuestionnaire(e, questionnaire.userAnswerId)\n                    }\n                  />\n                </TableCell>\n                <TableCell>{questionnaire.name}</TableCell>\n                <TableCell>\n                  {questionnaire.done ? (\n                    <CheckCircleOutline\n                      className={classes.doneIcon}\n                      fontSize=\"small\"\n                    />\n                  ) : null}\n                </TableCell>\n                <TableCell>\n                  {questionnaire.displayedFillInDate || null}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <FormControl\n        className={classes.pageSizeSelect}\n        variant=\"outlined\"\n        size=\"small\"\n      >\n        <InputLabel id=\"page-size-label\">纸张大小</InputLabel>\n        <Select\n          value={pageSize}\n          onChange={handlePageSizeChange}\n          labelId=\"page-size-label\"\n          label=\"纸张大小\"\n          id=\"page-size-select\"\n        >\n          <MenuItem value={\"a4\"}>A4</MenuItem>\n          <MenuItem value={\"a5\"}>A5</MenuItem>\n        </Select>\n      </FormControl>\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        disabled={selectedUserAnswers.size === 0}\n        onClick={generateReport}\n      >\n        生成报告\n      </Button>\n    </div>\n  );\n};\n","import {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  FormControlLabel,\n  Checkbox,\n  DialogActions,\n  Button,\n  makeStyles,\n  Theme,\n  createStyles,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\n\ninterface Props {\n  isDialogOpen: boolean;\n  handleDialogClose: () => void;\n  additionalFields: string[];\n  setAdditionalFields: (additionalFields: string[]) => void;\n  handleAdditionalFieldsSearch: (additionalFields: string[]) => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    fieldsContainer: {},\n  })\n);\n\nexport const ADDITIONAL_FIELD_KEYS = [\n  \"depressed\",\n  \"anxious\",\n  \"biphasic\",\n  \"schizophrenia\",\n] as const;\nexport const ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES = [\n  \"抑郁障碍\",\n  \"焦虑障碍\",\n  \"双相障碍\",\n  \"精神分裂症\",\n] as const;\n\nexport const removeElementFromArray = <T,>(array: T[], element: T) => {\n  const newArray: T[] = [];\n  for (let currentElement of array) {\n    if (currentElement !== element) {\n      newArray.push(currentElement);\n    }\n  }\n  return newArray;\n};\n\nexport const AdditionalFieldsModal = ({\n  isDialogOpen,\n  handleDialogClose,\n  additionalFields,\n  setAdditionalFields,\n  handleAdditionalFieldsSearch,\n}: Props) => {\n  const classes = useStyles();\n\n  const [selectedFields, setSelectedFields] = useState<string[]>(\n    additionalFields\n  );\n  useEffect(() => {\n    setSelectedFields(additionalFields);\n  }, [isDialogOpen, additionalFields]);\n  const selectAdditionalField = (\n    fieldKey: typeof ADDITIONAL_FIELD_KEYS[number],\n    isSelected: boolean\n  ) => {\n    if (!isSelected) {\n      setSelectedFields(removeElementFromArray(selectedFields, fieldKey));\n    } else if (!selectedFields.includes(fieldKey)) {\n      setSelectedFields([...selectedFields, fieldKey]);\n    }\n  };\n  const handleOkButtonClick = () => {\n    setAdditionalFields(selectedFields);\n    handleDialogClose();\n    handleAdditionalFieldsSearch(selectedFields);\n  };\n  return (\n    <Dialog\n      open={isDialogOpen}\n      onClose={handleDialogClose}\n      aria-labelledby=\"form-dialog-title\"\n      maxWidth=\"xs\"\n      fullWidth={true}\n    >\n      <DialogTitle id=\"form-dialog-title\">高级筛选</DialogTitle>\n      <DialogContent>\n        <div className={classes.fieldsContainer}>\n          {ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES.map((displayName, index) => {\n            return (\n              <div key={displayName}>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={selectedFields.includes(\n                        ADDITIONAL_FIELD_KEYS[index]\n                      )}\n                      onChange={(event) => {\n                        selectAdditionalField(\n                          ADDITIONAL_FIELD_KEYS[index],\n                          event.target.checked\n                        );\n                      }}\n                    />\n                  }\n                  label={displayName}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleDialogClose}>取消</Button>\n        <Button onClick={handleOkButtonClick} color=\"primary\">\n          确定\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  Button,\n  Checkbox,\n  Chip,\n  createStyles,\n  FormControl,\n  FormControlLabel,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Theme,\n} from \"@material-ui/core\";\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport React, { forwardRef, useImperativeHandle, useState } from \"react\";\nimport \"moment/locale/zh-cn\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport SettingsBackupRestoreIcon from \"@material-ui/icons/SettingsBackupRestore\";\nimport cnLocale from \"date-fns/locale/zh-CN\";\nimport { ErrorIndicator } from \"../../../../lib/components\";\nimport { QueryUserVariables } from \"../../../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\nimport { UsersFilter } from \"../../../../lib/graphql/globalTypes\";\nimport { INITAL_ONLY_MY_PATIENT } from \"../..\";\nimport TuneIcon from \"@material-ui/icons/Tune\";\nimport {\n  AdditionalFieldsModal,\n  ADDITIONAL_FIELD_KEYS,\n  ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES,\n  removeElementFromArray,\n} from \"../AdditionalFieldsModal\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport { PRIMARY_COLOR } from \"../../../..\";\n\nconst AGE_RANGE_ERROR_MESSAGE_TEXT = \"最小年龄应小于最大年龄！\";\nconst AGE_NEGATIVE_ERROR_MESSAGE = \"年龄不能为负数！\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    promptText: {\n      color: \"#5f6368\",\n      fontSize: \"0.8em\",\n      paddingBottom: 5,\n      paddingTop: 5,\n    },\n    input: {\n      width: \"30%\",\n      paddingRight: 10,\n      paddingBottom: 5,\n    },\n    rangeWrapper: {\n      display: \"inline-block\",\n    },\n    ageRangeInput: {\n      width: \"40%\",\n    },\n    dateRangeWrapper: {\n      width: \"60%\",\n    },\n    ageRangeWrapper: {\n      width: \"30%\",\n      paddingRight: 10,\n    },\n    dateRangeInput: {\n      width: \"50%\",\n      paddingRight: 10,\n    },\n    ageInputIconWrapper: {\n      width: \"20%\",\n      display: \"inline-flex\",\n      justifyContent: \"center\",\n      paddingTop: 20,\n    },\n    buttonWrapper: {\n      paddingTop: 10,\n    },\n    extraFieldsWrapper: {\n      paddingTop: 10,\n    },\n    searchButton: {\n      marginRight: 10,\n    },\n    whiteButton: {\n      backgroundColor: \"#fff\",\n      color: PRIMARY_COLOR,\n      \"&:hover\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n    rangeFormWrapper: {\n      width: \"100%\",\n      alignItems: \"flex-start\",\n      display: \"flex\",\n    },\n    ageInputIcon: {\n      width: 16,\n      height: 16,\n      color: \"rgba(0, 0, 0, 0.54)\",\n    },\n    chip: {\n      marginRight: 5,\n    },\n    additionalFieldButton: {\n      marginRight: 5,\n    },\n  })\n);\n\nconst datePickerProps = {\n  format: \"yyyy/MM/dd\",\n  okLabel: \"确定\",\n  cancelLabel: \"取消\",\n  invalidLabel: \"输入的日期有误！\",\n  maxDateMessage: \"输入的日期太大！\",\n  minDateMessage: \"输入的日期太小！\",\n  invalidDateMessage: \"输入的日期有误！\",\n  size: \"small\" as const,\n};\n\ninterface Props {\n  searchPatients: (searchParams: QueryUserVariables) => void;\n  limit: number;\n  currentPageIndex: number;\n  setCurrentPageIndex: (currentPageIndex: number) => void;\n  filter: UsersFilter;\n  searchMyPatients: (onlyMyPatient: boolean) => void;\n  handleAdditionalFieldsSearch: (additionalFields: string[]) => void;\n}\n\nexport interface SearchPatientFormHandle {\n  search: () => void;\n}\n\nexport const SearchPatientForm = forwardRef<SearchPatientFormHandle, Props>(\n  (\n    {\n      searchPatients,\n      limit,\n      currentPageIndex,\n      setCurrentPageIndex,\n      filter,\n      searchMyPatients,\n      handleAdditionalFieldsSearch,\n    },\n    ref\n  ) => {\n    const classes = useStyles();\n    const [userName, setUserName] = useState(\"\");\n    const onUserNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setUserName(e.target.value);\n    };\n\n    const [name, setName] = useState(\"\");\n    const onNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setName(e.target.value);\n    };\n\n    const [gender, setGender] = useState<\"男\" | \"女\" | \"全部\" | \"\">(\"\");\n    const onGenderChange = (\n      e: React.ChangeEvent<{\n        name?: string | undefined;\n        value: unknown;\n      }>\n    ) => {\n      setGender(e.target.value as typeof gender);\n    };\n\n    const [ageRange, setAgeRange] = useState({\n      min: \"\",\n      max: \"\",\n    });\n    const onMinAgeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const newMinAge = Number(e.target.value);\n      if (errorField === \"ageRange\") {\n        if (newMinAge <= Number(ageRange.max) || newMinAge === 0) {\n          setErrorField(null);\n        }\n      }\n      if (errorField === \"minAge\") {\n        if (newMinAge >= 0) {\n          setErrorField(null);\n        }\n      }\n      setAgeRange({ ...ageRange, min: e.target.value });\n    };\n    const onMaxAgeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const newMaxAge = Number(e.target.value);\n      if (errorField === \"ageRange\") {\n        if (newMaxAge >= Number(ageRange.min) || newMaxAge === 0) {\n          setErrorField(null);\n        }\n      }\n      if (errorField === \"maxAge\") {\n        if (newMaxAge >= 0) {\n          setErrorField(null);\n        }\n      }\n      setAgeRange({ ...ageRange, max: e.target.value });\n    };\n\n    const [dateRange, setDateRange] = useState<{\n      min: Date | null;\n      max: Date | null;\n    }>({\n      min: null,\n      max: null,\n    });\n    const onMinDateChange = (date: Date | null, _value?: string | null) => {\n      if (errorField === \"dateRange\") {\n        if (date === null || (dateRange.max && +date <= +dateRange.max)) {\n          setErrorField(null);\n        }\n      }\n      setDateRange({\n        ...dateRange,\n        min: date,\n      });\n    };\n    const onMaxDateChange = (date: Date | null, _value?: string | null) => {\n      if (errorField === \"dateRange\") {\n        if (date === null || (dateRange.min && +date >= +dateRange.min)) {\n          setErrorField(null);\n        }\n      }\n      setDateRange({\n        ...dateRange,\n        max: date,\n      });\n    };\n\n    const [onlyMyPatient, setOnlyMyPatient] = useState(false);\n    const handleOnlyMyPatientCheckboxChange = (\n      event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n      setOnlyMyPatient(event.target.checked);\n      searchMyPatients(event.target.checked);\n    };\n\n    const [showError, setShowError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [errorField, setErrorField] = useState<null | string>(null);\n    const [\n      isAdditionalFieldsModalOpen,\n      setIsAdditionalFieldsModalOpen,\n    ] = useState(false);\n    const [additionalFields, setAdditionalFields] = useState<string[]>([]);\n\n    const handleAdditionalFieldsModalClose = () => {\n      setIsAdditionalFieldsModalOpen(false);\n    };\n\n    const handleAdditionalFieldsModalOpen = () => {\n      setIsAdditionalFieldsModalOpen(true);\n    };\n\n    const handleSearchButtonClick = () => {\n      if (ageRange.min && Number(ageRange.min) < 0) {\n        setErrorMessage(AGE_NEGATIVE_ERROR_MESSAGE);\n        setShowError(true);\n        setErrorField(\"minAge\");\n        return;\n      }\n      if (ageRange.max && Number(ageRange.max) < 0) {\n        setErrorMessage(AGE_NEGATIVE_ERROR_MESSAGE);\n        setShowError(true);\n        setErrorField(\"maxAge\");\n        return;\n      }\n      if (\n        ageRange.min &&\n        ageRange.max &&\n        Number(ageRange.min) > Number(ageRange.max)\n      ) {\n        setErrorMessage(AGE_RANGE_ERROR_MESSAGE_TEXT);\n        setShowError(true);\n        setErrorField(\"ageRange\");\n        return;\n      }\n\n      if (dateRange.min && dateRange.max && dateRange.min > dateRange.max) {\n        setErrorMessage(\"起始日期应在截止日期之前！\");\n        setShowError(true);\n        setErrorField(\"dateRange\");\n        return;\n      }\n\n      setCurrentPageIndex(0);\n      searchPatients({\n        userName,\n        name,\n        gender,\n        ageRange: {\n          min: ageRange.min ? Number(ageRange.min) : null,\n          max: ageRange.max ? Number(ageRange.max) : null,\n        },\n        minSignUpDate: dateRange.min\n          ? {\n              year: dateRange.min.getFullYear(),\n              month: dateRange.min.getMonth(),\n              day: dateRange.min.getDate(),\n            }\n          : null,\n        maxSignUpDate: dateRange.max\n          ? {\n              year: dateRange.max.getFullYear(),\n              month: dateRange.max.getMonth(),\n              day: dateRange.max.getDate(),\n            }\n          : null,\n        limit,\n        currentPageIndex: 0,\n        onlyMyPatient,\n        filter,\n        additionalFields,\n      });\n    };\n\n    useImperativeHandle(ref, () => ({\n      search: () => {\n        handleSearchButtonClick();\n      },\n    }));\n    const handleResetButtonClick = () => {\n      setUserName(\"\");\n      setName(\"\");\n      setGender(\"\");\n      setAgeRange({\n        min: \"\",\n        max: \"\",\n      });\n      setDateRange({\n        min: null,\n        max: null,\n      });\n      setErrorField(null);\n      setCurrentPageIndex(0);\n      setOnlyMyPatient(INITAL_ONLY_MY_PATIENT);\n      searchPatients({\n        limit,\n        currentPageIndex: 0,\n        filter,\n        onlyMyPatient: INITAL_ONLY_MY_PATIENT,\n      });\n      setAdditionalFields([]);\n    };\n    return (\n      <form noValidate autoComplete=\"off\">\n        <div className={classes.promptText}>个人信息</div>\n        <div>\n          <TextField\n            label=\"门诊号\"\n            size=\"small\"\n            className={classes.input}\n            value={userName}\n            onChange={onUserNameChange}\n          />\n          <TextField\n            label=\"姓名\"\n            size=\"small\"\n            className={classes.input}\n            value={name}\n            onChange={onNameChange}\n          />\n          <FormControl className={classes.input} size=\"small\">\n            <InputLabel>性别</InputLabel>\n            <Select\n              color=\"primary\"\n              label=\"性别\"\n              value={gender}\n              onChange={onGenderChange}\n            >\n              <MenuItem value=\"男\">男</MenuItem>\n              <MenuItem value=\"女\">女</MenuItem>\n              <MenuItem value=\"全部\">全部</MenuItem>\n            </Select>\n          </FormControl>\n          <div className={classes.rangeFormWrapper}>\n            <div\n              className={classes.ageRangeWrapper + \" \" + classes.rangeWrapper}\n            >\n              <div className={classes.promptText}>年龄</div>\n              <div>\n                <TextField\n                  label=\"最小年龄\"\n                  size=\"small\"\n                  type=\"number\"\n                  className={classes.ageRangeInput}\n                  value={ageRange.min}\n                  onChange={onMinAgeChange}\n                  error={\n                    errorField === \"ageRange\" || errorField === \"minAge\"\n                      ? true\n                      : undefined\n                  }\n                />\n                <span className={classes.ageInputIconWrapper}>\n                  <ArrowForwardIcon className={classes.ageInputIcon} />\n                </span>\n                <TextField\n                  label=\"最大年龄\"\n                  size=\"small\"\n                  type=\"number\"\n                  className={classes.ageRangeInput}\n                  value={ageRange.max}\n                  onChange={onMaxAgeChange}\n                  error={\n                    errorField === \"ageRange\" || errorField === \"maxAge\"\n                      ? true\n                      : undefined\n                  }\n                />\n              </div>\n            </div>\n            <div\n              className={classes.dateRangeWrapper + \" \" + classes.rangeWrapper}\n            >\n              <div className={classes.promptText}>注册时间</div>\n              <MuiPickersUtilsProvider utils={DateFnsUtils} locale={cnLocale}>\n                <DatePicker\n                  value={dateRange.min}\n                  onChange={onMinDateChange}\n                  label={\"起始日期\"}\n                  className={classes.dateRangeInput}\n                  {...datePickerProps}\n                  error={errorField === \"dateRange\" ? true : undefined}\n                />\n                <DatePicker\n                  value={dateRange.max}\n                  onChange={onMaxDateChange}\n                  label={\"截止日期\"}\n                  className={classes.dateRangeInput}\n                  {...datePickerProps}\n                  error={errorField === \"dateRange\" ? true : undefined}\n                />\n              </MuiPickersUtilsProvider>\n            </div>\n          </div>\n        </div>\n        <div className={classes.extraFieldsWrapper}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={onlyMyPatient}\n                onChange={handleOnlyMyPatientCheckboxChange}\n              />\n            }\n            label=\"只选择我的病人\"\n          />\n          <Button\n            startIcon={<TuneIcon />}\n            onClick={handleAdditionalFieldsModalOpen}\n            color=\"primary\"\n            className={classes.additionalFieldButton}\n          >\n            高级筛选\n          </Button>\n          {ADDITIONAL_FIELD_KEYS.map((fieldKey, index) => {\n            if (additionalFields.includes(fieldKey)) {\n              const onChipDelete = () => {\n                setAdditionalFields(\n                  removeElementFromArray(additionalFields, fieldKey)\n                );\n              };\n              return (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  onDelete={onChipDelete}\n                  icon={<InfoIcon />}\n                  color=\"primary\"\n                  label={ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES[index]}\n                  key={fieldKey}\n                  className={classes.chip}\n                />\n              );\n            }\n            return null;\n          })}\n        </div>\n        <div className={classes.buttonWrapper}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<SearchIcon />}\n            className={classes.searchButton}\n            onClick={handleSearchButtonClick}\n          >\n            搜索\n          </Button>\n          <Button\n            variant=\"contained\"\n            startIcon={<SettingsBackupRestoreIcon />}\n            className={classes.whiteButton}\n            onClick={handleResetButtonClick}\n          >\n            重置\n          </Button>\n        </div>\n        <ErrorIndicator\n          showError={showError}\n          setShowError={setShowError}\n          errorMessage={errorMessage}\n        />\n        <AdditionalFieldsModal\n          isDialogOpen={isAdditionalFieldsModalOpen}\n          handleDialogClose={handleAdditionalFieldsModalClose}\n          additionalFields={additionalFields}\n          setAdditionalFields={setAdditionalFields}\n          handleAdditionalFieldsSearch={handleAdditionalFieldsSearch}\n        />\n      </form>\n    );\n  }\n);\n","import { createStyles, Divider, makeStyles, Theme } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 48,\n      display: \"flex\",\n      alignItems: \"center\",\n      paddingLeft: 10,\n      fontWeight: 500,\n      fontSize: \"1.125rem\",\n    },\n  })\n);\n\ninterface Props {\n  text: string;\n}\n\nexport const Header = ({ text }: Props) => {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.root}>{text}</div>\n      <Divider />\n    </>\n  );\n};\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport React, { useMemo, useState } from \"react\";\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport { QueryUser_queryUser_users_finishedForms as FinishedForms } from \"../../../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\nimport { FormResult } from \"../../..\";\nimport { LineChartPopOver } from \"../../../../lib/components\";\n\ninterface Props {\n  finishedForms: FinishedForms[] | null;\n}\n\nexport const LineChartsButton = ({ finishedForms }: Props) => {\n  const isButtonDisabled =\n    finishedForms === null || finishedForms.length === 0 ? true : false;\n  const listData: {\n    uniqueFormList: FinishedForms[];\n    resultList: FormResult[][];\n  } = useMemo(() => {\n    if (!finishedForms)\n      return { uniqueFormList: [], resultList: [] as FormResult[][] };\n    const formList: FinishedForms[] = [];\n    const resultList: FormResult[][] = [];\n    const formSet: Set<string> = new Set();\n    finishedForms.forEach((questionnaire) => {\n      if (!formSet.has(questionnaire.id)) {\n        formSet.add(questionnaire.id);\n        formList.push(questionnaire);\n        if (questionnaire.result && questionnaire.displayedFillInDate) {\n          resultList.push([\n            {\n              result: questionnaire.result,\n              fillInDate: questionnaire.displayedFillInDate,\n            },\n          ]);\n        } else {\n          resultList.push([] as FormResult[]);\n        }\n      } else if (questionnaire.result && questionnaire.displayedFillInDate) {\n        let index = 0;\n        while (index <= formList.length) {\n          if (formList[index].id === questionnaire.id) {\n            resultList[index].push({\n              result: questionnaire.result,\n              fillInDate: questionnaire.displayedFillInDate,\n            });\n            break;\n          }\n          index += 1;\n        }\n      }\n    });\n    const newResultList = resultList.map((result) => [...result].reverse());\n    return { uniqueFormList: formList, resultList: newResultList };\n  }, [finishedForms]);\n  const { uniqueFormList, resultList } = listData;\n  const [isOpen, setIsOpen] = useState(false);\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n  const openModal = () => {\n    setIsOpen(true);\n  };\n  return (\n    <>\n      <Button\n        startIcon={<EqualizerIcon />}\n        color=\"primary\"\n        disabled={isButtonDisabled}\n        onClick={openModal}\n        size=\"small\"\n      >\n        趋势\n      </Button>\n      <Dialog open={isOpen} onClose={closeModal}>\n        <DialogTitle>查看趋势</DialogTitle>\n        <DialogContent>\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>量表</TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {uniqueFormList.map((form, index) => (\n                  <TableRow key={`questionnaire-${index}`}>\n                    <TableCell>{form.name}</TableCell>\n                    <TableCell>\n                      <LineChartPopOver\n                        formResultList={resultList[index]}\n                        formName={form.name}\n                        formKey={form.key}\n                      />\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeModal} color=\"primary\">\n            关闭\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n","import { useMutation } from \"@apollo/client\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  DialogContentText,\n  createStyles,\n  makeStyles,\n  Theme,\n  Button,\n  DialogActions,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ADDITIONAL_FIELD_KEYS,\n  ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES,\n} from \"..\";\nimport { ADD_DIAGNOSIS } from \"../../../../lib/graphql/mutations\";\nimport {\n  AddDiagnosis,\n  AddDiagnosisVariables,\n} from \"../../../../lib/graphql/mutations/AddDiagnosis/__generated__/AddDiagnosis\";\n\ninterface Props {\n  isDialogOpen: boolean;\n  handleDialogClose: () => void;\n  patientName: string;\n  patientId: string;\n  refetch: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    diagnosisText: {\n      minWidth: 250,\n    },\n  })\n);\n\nexport const AddDiagnosisModal = ({\n  isDialogOpen,\n  handleDialogClose,\n  patientName,\n  patientId,\n  refetch,\n}: Props) => {\n  const [addDiagnosis] = useMutation<AddDiagnosis, AddDiagnosisVariables>(\n    ADD_DIAGNOSIS\n  );\n  useEffect(() => {\n    setDiagnosis(\"\");\n  }, [patientName]);\n  const classes = useStyles();\n  const [diagnosis, setDiagnosis] = useState(\"\");\n  const handleDiagnosisSelectChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setDiagnosis(e.target.value as string);\n  };\n  const handleComfirm = async () => {\n    if (diagnosis !== \"\") {\n      await addDiagnosis({\n        variables: {\n          input: {\n            patientId,\n            diagnosis:\n              ADDITIONAL_FIELD_KEYS[\n                ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES.indexOf(\n                  diagnosis as typeof ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES[number]\n                )\n              ],\n          },\n        },\n      });\n    } else {\n      await addDiagnosis({\n        variables: {\n          input: {\n            patientId,\n            diagnosis,\n          },\n        },\n      });\n    }\n    handleDialogClose();\n    refetch();\n  };\n  return (\n    <Dialog open={isDialogOpen} onClose={handleDialogClose}>\n      <DialogTitle>诊断</DialogTitle>\n      <DialogContent>\n        <DialogContentText className={classes.diagnosisText}>\n          给{patientName}添加诊断\n        </DialogContentText>\n        <FormControl fullWidth>\n          <InputLabel shrink>诊断</InputLabel>\n          <Select value={diagnosis} onChange={handleDiagnosisSelectChange}>\n            {ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES.map((option) => (\n              <MenuItem value={option} key={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleDialogClose}>取消</Button>\n        <Button onClick={handleComfirm} color=\"primary\">\n          确认\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import {\n  Button,\n  createStyles,\n  IconButton,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n  Theme,\n} from \"@material-ui/core\";\nimport React, { ChangeEvent, useEffect, useState, MouseEvent } from \"react\";\nimport { ErrorIndicator, LoadingIndicator } from \"../../../../lib/components\";\nimport {\n  QueryUser,\n  QueryUser_queryUser_users_finishedForms as QuestionnaireData,\n} from \"../../../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\nimport NoteIcon from \"@material-ui/icons/Note\";\n// import { HelpPopover } from \"../HelpPopover\";\nimport {\n  ADDITIONAL_FIELD_KEYS,\n  ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES,\n  ChooseFormModal,\n} from \"..\";\nimport { UsersFilter } from \"../../../../lib/graphql/globalTypes\";\nimport { LineChartsButton } from \"../LineChartsButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { AddDiagnosisModal } from \"../AddDiagnosisModal\";\nimport { PRIMARY_COLOR } from \"../../../..\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      marginTop: 20,\n      width: \"min(calc(100% - 20px), calc(100vw - 20px))\",\n      maxWidth: \"100vw\",\n      fontSize: \"0.8rem\",\n    },\n    loadingIndicatorWrapper: {\n      width: \"100%\",\n      height: 200,\n    },\n    reportButton: {\n      backgroundColor: \"#fff\",\n      color: PRIMARY_COLOR,\n      \"&:hover\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n    lineChartsButtonContainer: {\n      marginRight: 5,\n    },\n    tableCell: {\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n    },\n    iconMargin: {\n      marginRight: 5,\n    },\n  })\n);\nconst tableColumnTexts = [\n  \"门诊号\",\n  \"姓名\",\n  \"性别\",\n  \"年龄\",\n  \"教育\",\n  \"职业\",\n  \"婚姻\",\n  \"注册时间\",\n  \"医生\",\n  \"诊断\",\n];\nconst tableColumns = [\n  \"userName\",\n  \"name\",\n  \"gender\",\n  \"age\",\n  \"education\",\n  \"jobStatus\",\n  \"marriageStatus\",\n  \"signUpDate\",\n  \"doctorName\",\n  \"diagnosis\",\n] as const;\n\nconst tableMinWidth = [70, 80, 60, 60, 100, 70, 60, 150, 80, 150] as const;\nconst tableMaxWidth = [140, 80, 60, 60, 100, 70, 60, 150, 80, 150] as const;\n\ninterface Props {\n  loading: boolean;\n  patientList?: QueryUser;\n  selectedUserAnswerIds: string[] | null;\n  setSelectedUserId: (userId: string | null) => void;\n  setSelectedUserAnswerIds: (selectedFormIds: string[] | null) => void;\n  setIsReportShown: (isReportShown: boolean) => void;\n  limit: number;\n  currentPageIndex: number;\n  handleLimitChange: (limit: number) => void;\n  handleCurrentPageIndexChange: (currentPageIndex: number) => void;\n  filter: UsersFilter;\n  setFilter: (filter: UsersFilter) => void;\n  handleSortChange: () => void;\n  refetch: () => void;\n  setPrintPageSize: (printPageSize: string) => void;\n  setPrintPatientName: (printPatientName?: string) => void;\n}\nexport const PatientTable = (props: Props) => {\n  const classes = useStyles();\n  const {\n    loading,\n    patientList,\n    selectedUserAnswerIds,\n    setSelectedUserId,\n    setSelectedUserAnswerIds,\n    setIsReportShown,\n    limit,\n    currentPageIndex,\n    handleLimitChange,\n    handleCurrentPageIndexChange,\n    filter,\n    handleSortChange,\n    refetch,\n    setPrintPageSize,\n    setPrintPatientName,\n  } = props;\n  const [showError, setShowError] = useState(false);\n  const [isChooseFormModalShown, setIsChooseFormModalShown] = useState(false);\n  const [finishedFormList, setFinishedFormList] = useState<\n    QuestionnaireData[] | null\n  >(null);\n  const handleReportButtonClick = (\n    finishedForms: QuestionnaireData[],\n    userId: string,\n    patientName?: string\n  ) => {\n    setSelectedUserId(userId);\n    setFinishedFormList(finishedForms);\n    const selectedUserAnswerIds = finishedForms\n      .map((finishedForm) => finishedForm.userAnswerId)\n      .filter((finishedForm): finishedForm is string => finishedForm !== null);\n    setSelectedUserAnswerIds(selectedUserAnswerIds);\n    setIsChooseFormModalShown(true);\n    setPrintPatientName(patientName);\n  };\n  const closeModal = () => {\n    setIsChooseFormModalShown(false);\n  };\n  const onOkButtonClick = (pageSize: string) => {\n    setIsReportShown(true);\n    setPrintPageSize(pageSize);\n  };\n  const [isAddDiagnosisModalShown, setIsAddDiagnosisModalShown] = useState(\n    false\n  );\n  const [addDiagnosisPatientId, setAddDiagnosisPatientId] = useState<\n    string | null\n  >(null);\n  const handleAddDiagnosisModalClose = () => {\n    setIsAddDiagnosisModalShown(false);\n  };\n  const openAddDiagnosisModal = () => {\n    setIsAddDiagnosisModalShown(true);\n  };\n  const [addDiagnosisPatientName, setAddDiagnosisPatientName] = useState<\n    string | null\n  >(null);\n  const handleEditDiagnosisButtonClick = (\n    patientName: string,\n    patientId: string\n  ) => {\n    setAddDiagnosisPatientName(patientName);\n    setAddDiagnosisPatientId(patientId);\n    openAddDiagnosisModal();\n  };\n  useEffect(() => {\n    if (\n      loading === false &&\n      patientList !== undefined &&\n      patientList.queryUser.users.length === 0\n    ) {\n      setShowError(true);\n    }\n  }, [loading, patientList]);\n  if (loading) {\n    return (\n      <div className={classes.loadingIndicatorWrapper}>\n        <LoadingIndicator />\n      </div>\n    );\n  }\n  if (patientList === undefined) {\n    return null;\n  }\n  if (patientList.queryUser.users.length === 0) {\n    return (\n      <ErrorIndicator\n        showError={showError}\n        setShowError={setShowError}\n        errorMessage=\"未找到符合条件的病人！\"\n      />\n    );\n  }\n\n  const handleRowsPerPageChange = (\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    handleLimitChange(Number(event.target.value));\n  };\n\n  const handlePageChange = (\n    _event: MouseEvent<HTMLButtonElement> | null,\n    page: number\n  ) => {\n    handleCurrentPageIndexChange(page);\n  };\n\n  const labelDisplayedRows = ({\n    from,\n    to,\n    count,\n  }: {\n    from: number;\n    to: number;\n    count: number;\n  }): string => {\n    return `共计${count}条数据，当前为第${Math.ceil(from / limit)}页`;\n  };\n  return (\n    <>\n      <TableContainer component={Paper} className={classes.root}>\n        <TablePagination\n          rowsPerPage={limit}\n          rowsPerPageOptions={[5, 10, 25]}\n          page={currentPageIndex}\n          count={patientList.queryUser.total}\n          onChangePage={handlePageChange}\n          component=\"div\"\n          onChangeRowsPerPage={handleRowsPerPageChange}\n          labelDisplayedRows={labelDisplayedRows}\n        />\n        <Table size=\"small\" aria-label=\"病人列表\">\n          <TableHead>\n            <TableRow>\n              {tableColumnTexts.map((text, index) => (\n                <TableCell\n                  key={text}\n                  style={{\n                    minWidth: tableMinWidth[index],\n                    maxWidth: tableMaxWidth[index],\n                    padding: 5,\n                    paddingLeft: index === 0 ? 10 : undefined,\n                  }}\n                  className={classes.tableCell}\n                >\n                  {tableColumns[index] === \"signUpDate\" ? (\n                    <TableSortLabel\n                      active={tableColumns[index] === \"signUpDate\"}\n                      direction={\n                        filter === UsersFilter.DATE_LATEST ? \"desc\" : \"asc\"\n                      }\n                      onClick={handleSortChange}\n                    >\n                      {text}\n                    </TableSortLabel>\n                  ) : (\n                    text\n                  )}\n                </TableCell>\n              ))}\n              <TableCell\n                style={{\n                  padding: 5,\n                }}\n              />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {patientList.queryUser.users.map((patientInformation) => {\n              const isReportButtonDisabled =\n                !patientInformation.finishedForms ||\n                patientInformation.finishedForms.length === 0;\n\n              return (\n                <TableRow key={patientInformation.userName}>\n                  {tableColumns.map((column, index) => {\n                    const content =\n                      index === tableColumns.length - 1\n                        ? ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES[\n                            ADDITIONAL_FIELD_KEYS.indexOf(\n                              patientInformation[\n                                column\n                              ] as typeof ADDITIONAL_FIELD_KEYS[number]\n                            )\n                          ]\n                        : patientInformation[column];\n                    return (\n                      <TableCell\n                        key={column}\n                        style={{\n                          minWidth: tableMinWidth[index],\n                          maxWidth: tableMaxWidth[index],\n                          padding: 5,\n                          paddingLeft: index === 0 ? 10 : undefined,\n                        }}\n                        className={classes.tableCell}\n                        title={content || undefined}\n                      >\n                        {index === tableColumns.length - 1 ? (\n                          <>\n                            <IconButton\n                              aria-label=\"delete\"\n                              className={classes.iconMargin}\n                              size=\"small\"\n                              color=\"primary\"\n                              onClick={() =>\n                                patientInformation.name &&\n                                handleEditDiagnosisButtonClick(\n                                  patientInformation.name,\n                                  patientInformation.id\n                                )\n                              }\n                            >\n                              <EditIcon fontSize=\"inherit\" />\n                            </IconButton>\n                            {content}\n                          </>\n                        ) : (\n                          content\n                        )}\n                      </TableCell>\n                    );\n                  })}\n                  <TableCell style={{ minWidth: 180, padding: 0 }}>\n                    <div style={{ display: \"flex\" }}>\n                      <span className={classes.lineChartsButtonContainer}>\n                        <LineChartsButton\n                          finishedForms={patientInformation.finishedForms}\n                        />\n                      </span>\n                      <Button\n                        size=\"small\"\n                        // className={classes.reportButton}\n                        color=\"primary\"\n                        startIcon={<NoteIcon />}\n                        disabled={isReportButtonDisabled}\n                        onClick={() =>\n                          patientInformation.finishedForms &&\n                          handleReportButtonClick(\n                            patientInformation.finishedForms,\n                            patientInformation.id,\n                            patientInformation.name || undefined\n                          )\n                        }\n                      >\n                        报告\n                      </Button>\n                      {/* {isReportButtonDisabled && patientInformation.name && (\n                        <HelpPopover name={patientInformation.name} />\n                      )} */}\n                    </div>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {finishedFormList && selectedUserAnswerIds && (\n        <ChooseFormModal\n          isOpen={isChooseFormModalShown}\n          closeModal={closeModal}\n          finishedFormList={finishedFormList}\n          selectedUserAnswerIds={selectedUserAnswerIds}\n          setSelectedUserAnswerIds={setSelectedUserAnswerIds}\n          onOkButtonClick={onOkButtonClick}\n        />\n      )}\n      {addDiagnosisPatientName && addDiagnosisPatientId && (\n        <AddDiagnosisModal\n          isDialogOpen={isAddDiagnosisModalShown}\n          handleDialogClose={handleAddDiagnosisModalClose}\n          patientName={addDiagnosisPatientName}\n          patientId={addDiagnosisPatientId}\n          refetch={refetch}\n        />\n      )}\n    </>\n  );\n};\n","/**\n * @author Qiuran Hu\n * @email qiuranh@gmail.com\n * @create date 2021-04-26 10:49:44\n * @modify date 2021-04-26 10:49:44\n * @desc [description]\n */\nimport {\n  Button,\n  Checkbox,\n  createStyles,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Theme,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { QueryUser_queryUser_users_finishedForms as QuestionnaireData } from \"../../../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\n\ninterface Props {\n  isOpen: boolean;\n  closeModal: () => void;\n  finishedFormList: QuestionnaireData[];\n  selectedUserAnswerIds: string[];\n  setSelectedUserAnswerIds: (selectedUserAnswerIds: string[]) => void;\n  onOkButtonClick: (pageSize: string) => void;\n}\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formName: {\n      maxWidth: 300,\n      textOverflow: \"ellipsis\",\n      overflow: \"hidden\",\n      whiteSpace: \"nowrap\",\n    },\n    pageSizeSelect: {\n      minWidth: 100,\n      marginRight: 10,\n    },\n  })\n);\n\nexport const ChooseFormModal = ({\n  isOpen,\n  closeModal,\n  finishedFormList,\n  selectedUserAnswerIds,\n  setSelectedUserAnswerIds,\n  onOkButtonClick,\n}: Props) => {\n  const classes = useStyles();\n  const handleSelectAllCheckBoxClick = () => {\n    if (selectedUserAnswerIds.length < finishedFormList.length) {\n      setSelectedUserAnswerIds(\n        finishedFormList\n          .map((form) => form.userAnswerId)\n          .filter(\n            (userAnswerId): userAnswerId is string => userAnswerId !== null\n          )\n      );\n    } else {\n      setSelectedUserAnswerIds([]);\n    }\n  };\n  const handleSelectCheckBoxClick = (formId: string) => {\n    if (selectedUserAnswerIds.indexOf(formId) !== -1) {\n      setSelectedUserAnswerIds(\n        selectedUserAnswerIds.filter(\n          (currentUserAnswerId) => currentUserAnswerId !== formId\n        )\n      );\n    } else {\n      setSelectedUserAnswerIds([...selectedUserAnswerIds, formId]);\n    }\n  };\n  const handleOkButtonClick = () => {\n    onOkButtonClick(pageSize);\n    closeModal();\n  };\n  const [pageSize, setPageSize] = useState(\"a5\");\n  const handlePageSizeChange = (\n    event: React.ChangeEvent<{ value: unknown }>\n  ) => {\n    setPageSize(event.target.value as string);\n  };\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={closeModal}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      maxWidth=\"md\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">请选择要生成报告的量表</DialogTitle>\n      <DialogContent>\n        <TableContainer>\n          <Table size=\"small\" aira-label=\"选择量表，生成报告\">\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={\n                      selectedUserAnswerIds.length ===\n                        finishedFormList.length &&\n                      selectedUserAnswerIds.length !== 0\n                    }\n                    onChange={handleSelectAllCheckBoxClick}\n                  />\n                </TableCell>\n                <TableCell>全部已完成量表</TableCell>\n                <TableCell>完成时间</TableCell>\n                <TableCell>医生</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {finishedFormList.map((form, index) => (\n                <TableRow key={`questionnaire-${index}`}>\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={\n                        !!form.userAnswerId &&\n                        selectedUserAnswerIds.indexOf(form.userAnswerId) !== -1\n                      }\n                      onChange={() =>\n                        form.userAnswerId &&\n                        handleSelectCheckBoxClick(form.userAnswerId)\n                      }\n                    />\n                  </TableCell>\n                  <TableCell className={classes.formName}>\n                    {form.name}\n                  </TableCell>\n                  <TableCell>{form.displayedFillInDate || null}</TableCell>\n                  <TableCell>{form.doctorName || null}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </DialogContent>\n      <DialogActions>\n        <FormControl\n          className={classes.pageSizeSelect}\n          variant=\"outlined\"\n          size=\"small\"\n        >\n          <InputLabel id=\"page-size-label\">纸张大小</InputLabel>\n          <Select\n            value={pageSize}\n            onChange={handlePageSizeChange}\n            labelId=\"page-size-label\"\n            label=\"纸张大小\"\n            id=\"page-size-select\"\n          >\n            <MenuItem value={\"a4\"}>A4</MenuItem>\n            <MenuItem value={\"a5\"}>A5</MenuItem>\n          </Select>\n        </FormControl>\n        <Button onClick={closeModal}>取消</Button>\n        <Button\n          onClick={handleOkButtonClick}\n          color=\"primary\"\n          autoFocus\n          disabled={selectedUserAnswerIds.length === 0}\n        >\n          确定\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import {\n  createStyles,\n  IconButton,\n  makeStyles,\n  Popover,\n  Theme,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    popover: {\n      pointerEvents: \"none\",\n    },\n    paper: {\n      padding: theme.spacing(1),\n    },\n    icon: {\n      width: 22,\n      height: 22,\n    },\n  })\n);\n\ninterface Props {\n  name: string;\n}\nexport const HelpPopover = ({ name }: Props) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\n  const open = Boolean(anchorEl);\n  const handlePopoverOpen = (\n    event: React.MouseEvent<HTMLElement, MouseEvent>\n  ) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <>\n      <IconButton\n        color=\"primary\"\n        size=\"small\"\n        onMouseEnter={handlePopoverOpen}\n        onMouseLeave={handlePopoverClose}\n      >\n        <HelpOutlineIcon className={classes.icon} />\n      </IconButton>\n      <Popover\n        id=\"mouse-over-popover\"\n        className={classes.popover}\n        classes={{\n          paper: classes.paper,\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        onClose={handlePopoverClose}\n        disableRestoreFocus\n      >\n        {name}未填写任何量表！\n      </Popover>\n    </>\n  );\n};\n","import { useLazyQuery } from \"@apollo/client\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core\";\nimport React, { ElementRef, useEffect, useRef, useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { ReportPdf } from \"../../lib/components\";\nimport { UsersFilter } from \"../../lib/graphql/globalTypes\";\nimport { QUERY_USER } from \"../../lib/graphql/queries/QueryUser\";\nimport {\n  QueryUser,\n  QueryUserVariables,\n} from \"../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\nimport {\n  Header,\n  PatientTable,\n  SearchPatientForm,\n  withReportPdfDataForAdmin,\n} from \"./components\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    content: {\n      padding: \"5px 10px\",\n    },\n    hiddenContent: {\n      display: \"none\",\n    },\n  })\n);\nconst PdfViewer = withReportPdfDataForAdmin(ReportPdf);\n\nexport const INITIAL_LIMIT = 10;\nexport const INITIAL_CURRENT_PAGE_INDEX = 0;\nexport const INITAL_ONLY_MY_PATIENT = false;\n\nexport const PatientInformation = () => {\n  const [getQueryResult, { loading, data: userListData, error }] = useLazyQuery<\n    QueryUser,\n    QueryUserVariables\n  >(QUERY_USER, {\n    fetchPolicy: \"no-cache\",\n  });\n\n  const searchFormRef = useRef<ElementRef<typeof SearchPatientForm>>(null);\n  const [limit, setLimit] = useState(INITIAL_LIMIT);\n  const [currentPageIndex, setCurrentPageIndex] = useState(\n    INITIAL_CURRENT_PAGE_INDEX\n  );\n  const [filter, setFilter] = useState<UsersFilter>(UsersFilter.DATE_LATEST);\n  const classes = useStyles();\n  const [selectedUserAnswerIds, setSelectedUserAnswerIds] = useState<\n    string[] | null\n  >(null);\n  const [selectedUserId, setSelectedUserId] = useState<string | null>(null);\n  const [isReportShown, setIsReportShown] = useState(false);\n  const closeReport = () => {\n    setIsReportShown(false);\n  };\n  const searchPatients = (params: QueryUserVariables) => {\n    getQueryResult({ variables: params });\n    setSearchParams(params);\n  };\n  const getQueryResultRef = useRef(getQueryResult);\n  const [searchParams, setSearchParams] = useState<QueryUserVariables>({\n    limit: INITIAL_LIMIT,\n    currentPageIndex: INITIAL_CURRENT_PAGE_INDEX,\n  });\n  const handleLimitChange = (limit: number): void => {\n    setLimit(limit);\n    setCurrentPageIndex(0);\n    getQueryResult({\n      variables: { ...searchParams, limit, currentPageIndex: 0, filter },\n    });\n  };\n  const handleCurrentPageIndexChange = (currentPageIndex: number): void => {\n    setCurrentPageIndex(currentPageIndex);\n    getQueryResult({\n      variables: { ...searchParams, limit, currentPageIndex, filter },\n    });\n  };\n  const refetch = () => {\n    getQueryResult({\n      variables: { ...searchParams, limit, currentPageIndex, filter },\n    });\n  };\n  const handleSortChange = () => {\n    const newFilter =\n      filter === UsersFilter.DATE_LATEST\n        ? UsersFilter.DATE_OLDEST\n        : UsersFilter.DATE_LATEST;\n    setFilter(newFilter);\n    setCurrentPageIndex(0);\n    getQueryResult({\n      variables: {\n        ...searchParams,\n        limit,\n        currentPageIndex: 0,\n        filter: newFilter,\n      },\n    });\n  };\n  const searchMyPatients = (onlyMyPatient: boolean) => {\n    setCurrentPageIndex(0);\n    getQueryResult({\n      variables: {\n        ...searchParams,\n        onlyMyPatient,\n        currentPageIndex: 0,\n        limit,\n        filter,\n      },\n    });\n  };\n  const handleAdditionalFieldsSearch = (additionalFields: string[]) => {\n    setCurrentPageIndex(0);\n    getQueryResult({\n      variables: {\n        ...searchParams,\n        additionalFields: additionalFields,\n        currentPageIndex: 0,\n        limit,\n        filter,\n      },\n    });\n  };\n  useEffect(() => {\n    getQueryResultRef.current({\n      variables: {\n        limit: INITIAL_LIMIT,\n        currentPageIndex: INITIAL_CURRENT_PAGE_INDEX,\n        filter: UsersFilter.DATE_LATEST,\n        onlyMyPatient: INITAL_ONLY_MY_PATIENT,\n      },\n    });\n  }, []);\n  const isPdfViewerShown = Boolean(\n    isReportShown && selectedUserId && selectedUserAnswerIds\n  );\n  const [printPageSize, setPrintPageSize] = useState(\"a5\");\n  const [printPatientName, setPrintPatientName] = useState<string | undefined>(\n    undefined\n  );\n  return (\n    <>\n      <div className={isPdfViewerShown ? classes.hiddenContent : \"\"}>\n        <Header text={\"搜索病人信息\"} />\n        <div className={classes.content}>\n          <SearchPatientForm\n            searchPatients={searchPatients}\n            limit={limit}\n            currentPageIndex={currentPageIndex}\n            ref={searchFormRef}\n            setCurrentPageIndex={setCurrentPageIndex}\n            filter={filter}\n            searchMyPatients={searchMyPatients}\n            handleAdditionalFieldsSearch={handleAdditionalFieldsSearch}\n          />\n          <PatientTable\n            loading={loading}\n            patientList={userListData}\n            selectedUserAnswerIds={selectedUserAnswerIds}\n            setSelectedUserId={setSelectedUserId}\n            setSelectedUserAnswerIds={setSelectedUserAnswerIds}\n            setIsReportShown={setIsReportShown}\n            limit={limit}\n            currentPageIndex={currentPageIndex}\n            handleLimitChange={handleLimitChange}\n            handleCurrentPageIndexChange={handleCurrentPageIndexChange}\n            filter={filter}\n            setFilter={setFilter}\n            handleSortChange={handleSortChange}\n            refetch={refetch}\n            setPrintPageSize={setPrintPageSize}\n            setPrintPatientName={setPrintPatientName}\n          />\n        </div>\n      </div>\n      {isReportShown && selectedUserId && selectedUserAnswerIds && (\n        <PdfViewer\n          userId={selectedUserId}\n          userAnswerIds={selectedUserAnswerIds}\n          closeReport={closeReport}\n          pageSize={printPageSize}\n          patientName={printPatientName}\n        />\n      )}\n    </>\n  );\n};\n","import { useQuery } from \"@apollo/client\";\nimport React, { ComponentType, PropsWithChildren } from \"react\";\nimport { LoadingIndicator } from \"../../../../lib/components\";\nimport { REPORT_FOR_ADMIN } from \"../../../../lib/graphql/queries\";\nimport {\n  ReportForAdmin as ReportData,\n  ReportForAdminVariables,\n} from \"../../../../lib/graphql/queries/ReportForAdmin/__generated__/ReportForAdmin\";\n\nexport const withReportPdfDataForAdmin = (\n  WrappedComponent: ComponentType<\n    PropsWithChildren<{\n      pdfData: string;\n      closeReport: () => void;\n      patientName?: string;\n    }>\n  >\n) => {\n  return ({\n    children,\n    userAnswerIds,\n    closeReport,\n    userId,\n    pageSize,\n    patientName,\n  }: PropsWithChildren<{\n    userAnswerIds: string[];\n    closeReport: () => void;\n    userId: string;\n    pageSize: string;\n    patientName?: string;\n  }>) => {\n    // Get PDF data.\n    const { data, loading } = useQuery<ReportData, ReportForAdminVariables>(\n      REPORT_FOR_ADMIN,\n      {\n        variables: {\n          userAnswerIds,\n          userId,\n          pageSize,\n        },\n        fetchPolicy: \"no-cache\",\n      }\n    );\n\n    if (loading || !data) {\n      return <LoadingIndicator />;\n    }\n\n    if (data.reportForAdmin && data.reportForAdmin.pdf) {\n      return (\n        <WrappedComponent\n          pdfData={data.reportForAdmin.pdf}\n          closeReport={closeReport}\n          patientName={patientName}\n        >\n          {children}\n        </WrappedComponent>\n      );\n    }\n\n    return null;\n  };\n};\n","import {\n  makeStyles,\n  Theme,\n  createStyles,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { Doctor } from \"../../../../lib/type\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      overflow: \"hidden\",\n    },\n    actionContainer: {\n      float: \"right\",\n      paddingRight: 10,\n      paddingTop: 10,\n      fontSize: \"0.875rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    welcomeMessage: {\n      paddingRight: 10,\n      paddingBottom: 1,\n    },\n  })\n);\n\ninterface Props {\n  handleDoctorLogOut: () => void;\n  doctor: Doctor;\n}\n\nexport const Header = ({ handleDoctorLogOut, doctor }: Props) => {\n  const classes = useStyles();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const handleCloseDialog = () => {\n    setIsDialogOpen(false);\n  };\n  const openDialog = () => {\n    setIsDialogOpen(true);\n  };\n  const logOutDoctor = () => {\n    setIsDialogOpen(false);\n    handleDoctorLogOut();\n  };\n  return (\n    <div className={classes.root}>\n      <span className={classes.actionContainer}>\n        <span className={classes.welcomeMessage}>{doctor.name}医生已登入</span>\n        <Button\n          color=\"secondary\"\n          startIcon={<ExitToAppIcon />}\n          onClick={openDialog}\n        >\n          退出\n        </Button>\n      </span>\n      <Dialog\n        open={isDialogOpen}\n        onClose={handleCloseDialog}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"确认退出？\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            退出后需要输入医生的账号和密码才能重新登入\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog}>取消</Button>\n          <Button onClick={logOutDoctor} color=\"secondary\">\n            退出\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import {\n  Button,\n  createStyles,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n  makeStyles,\n  TextField,\n  Theme,\n} from \"@material-ui/core\";\nimport React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useState,\n} from \"react\";\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\n\ninterface Props {\n  isDialogOpen: boolean;\n  setIsDialogOpen: (isDialogOpen: boolean) => void;\n  doctorName: string;\n  handleDoctorLogIn: (password: string) => void;\n  hideErrorIndicator: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    passwordInput: {\n      minWidth: 300,\n    },\n  })\n);\n\nexport interface DoctorLogInDialogHandle {\n  showError: () => void;\n  hideError: () => void;\n}\n\nexport const DoctorLogInDialog = forwardRef<DoctorLogInDialogHandle, Props>(\n  (props: Props, ref) => {\n    const handleKeyPress = (event: KeyboardEvent) => {\n      if (event.key === \"Enter\") {\n        handleClickLogIn();\n      }\n    };\n    useEffect(() => {\n      window.addEventListener(\"keydown\", handleKeyPress);\n\n      return () => {\n        window.removeEventListener(\"keydown\", handleKeyPress);\n      };\n    });\n    const classes = useStyles();\n    const {\n      isDialogOpen,\n      setIsDialogOpen,\n      doctorName,\n      handleDoctorLogIn,\n      hideErrorIndicator,\n    } = props;\n    const [password, setPassword] = useState(\"\");\n    const [isErrorShown, setIsErrorShown] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n      showError: () => {\n        setIsErrorShown(true);\n      },\n      hideError: () => {\n        setIsErrorShown(false);\n      },\n    }));\n    const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      hideErrorIndicator();\n      setPassword(e.target.value);\n    };\n    const handleClickLogIn = () => {\n      handleDoctorLogIn(password);\n    };\n    const handleClickCancel = () => {\n      setIsDialogOpen(false);\n    };\n    return (\n      <Dialog open={isDialogOpen} onClose={handleClickCancel}>\n        <DialogTitle>请确认您的密码</DialogTitle>\n        <DialogContent>\n          <DialogContentText>当前登入的医生为{doctorName}</DialogContentText>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item>\n              <VpnKeyIcon />\n            </Grid>\n            <Grid item>\n              <TextField\n                autoFocus\n                className={classes.passwordInput}\n                label=\"密码\"\n                type=\"password\"\n                value={password}\n                onChange={handlePasswordChange}\n                helperText={\n                  isErrorShown && !password ? \"请输入您的密码\" : undefined\n                }\n                error={isErrorShown && !password ? true : undefined}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClickCancel} color=\"primary\">\n            取消\n          </Button>\n          <Button onClick={handleClickLogIn} color=\"primary\">\n            确认\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n);\n","import { Button, createStyles, makeStyles, Theme } from \"@material-ui/core\";\nimport React, { ElementRef, useRef, useState } from \"react\";\nimport { DoctorLogInDialog } from \"./components\";\nimport logo from \"../AppHeader/assets/logo.png\";\nimport PlayArrowRoundedIcon from \"@material-ui/icons/PlayArrowRounded\";\nimport { FetchResult } from \"@apollo/client\";\n// import { DOCTOR_LOG_OUT } from \"../../lib/graphql/mutations\";\nimport { Doctor } from \"../../lib/type\";\n// import { DoctorLogOut } from \"../../lib/graphql/mutations/DoctorLogOut/__generated__/doctorLogOut\";\nimport { useHistory } from \"react-router-dom\";\nimport { ErrorIndicator } from \"../../lib/components\";\nimport {\n  DoctorLogIn,\n  DoctorLogInVariables,\n} from \"../../lib/graphql/mutations/DoctorLogIn/__generated__/DoctorLogIn\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: \"100%\",\n      width: \"100%\",\n      background: \"#e3f2fd\",\n    },\n    logoContainer: {\n      display: \"flex\",\n      minHeight: 92,\n      maxHeight: 290,\n      height: \"calc(100% - 560px)\",\n      justifyContent: \"center\",\n    },\n    logo: {\n      maxHeight: 92,\n      height: \"100%\",\n      marginTop: \"auto\",\n    },\n    actionContainer: {\n      maxHeight: 160,\n      padding: 20,\n      display: \"flex\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      fontSize: \"1.5rem\",\n    },\n    enterSystemButtonContainer: {\n      marginTop: 18,\n    },\n    extendedIcon: {\n      position: \"absolute\",\n      right: 20,\n      bottom: 20,\n      backgroundColor: \"#fff\",\n    },\n    seuText: {\n      margin: \"10px 0 15px\",\n    },\n    header: {\n      height: 52,\n    },\n  })\n);\n\ninterface Props {\n  doctor: Doctor;\n  setDoctor: (doctor: Doctor) => void;\n  logIn: (variables?: {\n    variables: DoctorLogInVariables;\n  }) => Promise<FetchResult<DoctorLogIn>>;\n}\n\nexport const Welcome = ({ setDoctor, doctor, logIn }: Props) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const doctorLogInDialogRef = useRef<ElementRef<typeof DoctorLogInDialog>>(\n    null\n  );\n  // const [logOut] = useMutation<DoctorLogOut>(DOCTOR_LOG_OUT, {\n  //   onCompleted: (data) => {\n  //     if (data && data.doctorLogOut) {\n  //       setDoctor(data.doctorLogOut);\n  //       sessionStorage.removeItem(\"token\");\n  //       console.log(\"log out successfully\");\n  //     }\n  //   },\n  //   onError: (error) => {\n  //     console.log(error);\n  //     console.log(\"log out failed\");\n  //   },\n  // });\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  // const openDoctorLoginDialog = () => {\n  //   doctorLogInDialogRef.current?.hideError();\n  //   setIsDialogOpen(true);\n  // };\n  // const handleDoctorLogOut = () => {\n  //   logOut();\n  // };\n  const [isLogInErrorShown, setIsLogInErrorShown] = useState(false);\n  const handleDoctorLogIn = async (password: string) => {\n    if (doctor.userName) {\n      if (!password) {\n        doctorLogInDialogRef.current?.showError();\n        return;\n      }\n      try {\n        const logInResult = await logIn({\n          variables: {\n            input: {\n              userName: doctor.userName,\n              password,\n            },\n          },\n        });\n        if (logInResult.data && logInResult.data.doctorLogIn.userName) {\n          console.log(\"Second login succeeds.\");\n          history.push(\"/doctor\");\n        }\n      } catch {\n        setIsLogInErrorShown(true);\n      }\n    }\n  };\n  const hideErrorIndicator = () => {\n    setIsLogInErrorShown(false);\n  };\n  const goToLoginPage = () => {\n    history.push(\"/user/login\");\n  };\n  return (\n    <div className={classes.root}>\n      <div className={classes.header} />\n      {/* <Header handleDoctorLogOut={handleDoctorLogOut} doctor={doctor} /> */}\n      <div className={classes.logoContainer}>\n        <img src={logo} alt=\"中大医院\" className={classes.logo} />\n      </div>\n      <div className={classes.actionContainer}>\n        <div className={classes.seuText}>东南大学附属中大医院</div>\n        <div>心理健康评估系统</div>\n        <div className={classes.enterSystemButtonContainer}>\n          <Button\n            startIcon={<PlayArrowRoundedIcon />}\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={goToLoginPage}\n          >\n            进入系统\n          </Button>\n        </div>\n      </div>\n      {/* <Fab\n        variant=\"extended\"\n        className={classes.extendedIcon}\n        onClick={openDoctorLoginDialog}\n      >\n        <SupervisorAccountIcon />\n        医生端\n      </Fab> */}\n      {doctor.name && (\n        <DoctorLogInDialog\n          isDialogOpen={isDialogOpen}\n          setIsDialogOpen={setIsDialogOpen}\n          doctorName={doctor.name}\n          handleDoctorLogIn={handleDoctorLogIn}\n          hideErrorIndicator={hideErrorIndicator}\n          ref={doctorLogInDialogRef}\n        />\n      )}\n      <ErrorIndicator\n        showError={isLogInErrorShown}\n        setShowError={setIsLogInErrorShown}\n        errorMessage={\"密码不正确！\"}\n      />\n    </div>\n  );\n};\n","import { makeStyles, Theme, createStyles, Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport { ReturnToHomeHeader } from \"../../lib/components\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      background: \"#e3f2fd\",\n      height: \"100%\",\n      width: \"100%\",\n    },\n    titleWrapper: {\n      height: \"100%\",\n    },\n    title: {\n      fontSize: \"1.5rem\",\n      textAlign: \"center\",\n    },\n    promptTextContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      paddingTop: 50,\n      background: \"#e3f2fd\",\n    },\n    promptText: {\n      width: \"50%\",\n      minWidth: \"min(85%, 400px)\",\n      lineHeight: \"1.5rem\",\n    },\n    buttonContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      paddingTop: 50,\n      background: \"#e3f2fd\",\n      paddingBottom: 20,\n    },\n    titleContainer: {\n      minHeight: 75,\n      maxHeight: 290,\n      height: \"calc(100% - 610px)\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"flex-end\",\n      background: \"#e3f2fd\",\n    },\n  })\n);\nexport const PromptMessage = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <ReturnToHomeHeader />\n      <div className={classes.titleContainer}>\n        <div className={classes.title}>指导语</div>\n      </div>\n      <div className={classes.promptTextContainer}>\n        <div className={classes.promptText}>\n          在接下来大约20分钟的时间里您将进行一系列的量表评估，目的是对您的心理状况及个性特征进行评估，下面的问题并不存在所谓正确或者错误的答案，您只需要按照自己真实的状况完成就可以了。也许您会觉得自己并不完全如题目所描述的那样，这时候您可以根据选项选择最接近您的状况。请记住，这里并没有正确或错误，您只要如实回答问题就可以了。\n        </div>\n      </div>\n      <div className={classes.buttonContainer}>\n        <Link to=\"/user/home\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            endIcon={<NavigateNextIcon />}\n          >\n            下一步\n          </Button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import { gql } from \"@apollo/client\";\n\nexport const PATIENT_LOG_IN = gql`\n  mutation PatientLogIn($input: UserLoginInput) {\n    patientLogIn(input: $input) {\n      name\n      userName\n      education\n      jobStatus\n      gender\n      marriageStatus\n      age\n      didRequest\n    }\n  }\n`;\n","import {\n  makeStyles,\n  Theme,\n  createStyles,\n  Button,\n  TextField,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Snackbar,\n  Grid,\n} from \"@material-ui/core\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport { LoadingIndicator, ReturnToHomeHeader } from \"../../lib/components\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\nimport { QUERY_USER } from \"../../lib/graphql/queries/QueryUser\";\nimport {\n  QueryUser,\n  QueryUserVariables,\n} from \"../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport WcIcon from \"@material-ui/icons/Wc\";\nimport AccessibilityIcon from \"@material-ui/icons/Accessibility\";\nimport ChildCareIcon from \"@material-ui/icons/ChildCare\";\nimport SchoolIcon from \"@material-ui/icons/School\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport {\n  PatientLogIn,\n  PatientLogInVariables,\n} from \"../../lib/graphql/mutations/PatientLogIn/__generated__/PatientLogIn\";\nimport { Patient } from \"../../lib/type\";\nimport { PATIENT_LOG_IN } from \"../../lib/graphql/mutations/PatientLogIn\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      background: \"#e3f2fd\",\n      height: \"100%\",\n      width: \"100%\",\n    },\n    titleWrapper: {\n      height: \"100%\",\n    },\n    title: {\n      fontSize: \"1.5rem\",\n      textAlign: \"center\",\n    },\n    buttonContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      paddingTop: 50,\n      background: \"#e3f2fd\",\n      paddingBottom: 20,\n    },\n    titleContainer: {\n      minHeight: 75,\n      maxHeight: 290,\n      height: \"calc(100% - 630px)\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"flex-end\",\n      background: \"#e3f2fd\",\n    },\n    inputContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      paddingTop: 50,\n    },\n    personalInformationContainer: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      paddingTop: 20,\n      background: \"#e3f2fd\",\n    },\n    input: {\n      width: 250,\n      paddingTop: 5,\n      paddingBottom: 5,\n    },\n    actionsWrapper: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      background: \"#e3f2fd\",\n    },\n    actionsContainer: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      paddingTop: 50,\n      background: \"#e3f2fd\",\n      paddingBottom: 20,\n      width: 300,\n    },\n  })\n);\n\ninterface Props {\n  setPatient: (patient: Patient) => void;\n  patient: Patient;\n}\n\nfunction useQueryParams() {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport const PatientLogin = ({ setPatient, patient }: Props) => {\n  const queryParams = useQueryParams();\n  const initRef = useRef(() => {\n    const userName = queryParams.get(\"userName\");\n    if (userName) {\n      setUserName(userName);\n      handleNextButtonClick(userName);\n    }\n  });\n  useEffect(() => {\n    initRef.current();\n  }, []);\n  const handleKeyPress = (event: KeyboardEvent) => {\n    if (event.key === \"Enter\") {\n      if (isBasicInformationShown) {\n        handleLogInButtonClick();\n      } else {\n        handleNextButtonClick(undefined);\n      }\n    }\n  };\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyPress);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  });\n\n  const [patientLogIn] = useMutation<PatientLogIn, PatientLogInVariables>(\n    PATIENT_LOG_IN,\n    {\n      onCompleted: (data) => {\n        if (data && data.patientLogIn) {\n          setPatient(data.patientLogIn);\n        }\n      },\n    }\n  );\n  const classes = useStyles();\n  const [isUserNameValidated, setIsUserNameValidated] = useState(false);\n  const [isNameValidated, setIsNameValidated] = useState(false);\n  const [getQueryResult, { loading, data: userListData }] = useLazyQuery<\n    QueryUser,\n    QueryUserVariables\n  >(QUERY_USER, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      if (data.queryUser.total > 0) {\n        const userInfo = data.queryUser.users[0];\n        userInfo.name && setName(userInfo.name);\n        userInfo.gender && setGender(userInfo.gender);\n        userInfo.age && setAge(userInfo.age);\n        userInfo.education && setEducation(userInfo.education);\n        userInfo.jobStatus && setJobStatus(userInfo.jobStatus);\n        userInfo.marriageStatus && setMarriageStatus(userInfo.marriageStatus);\n        setShowLoadSuccess(true);\n      } else {\n        setName(\"\");\n        setGender(\"\");\n        setAge(\"\");\n        setEducation(\"\");\n        setJobStatus(\"\");\n        setMarriageStatus(\"\");\n      }\n    },\n  });\n  const [isBasicInformationShown, setIsBasicInformationShown] = useState(false);\n  const [userName, setUserName] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [education, setEducation] = useState(\"\");\n  const [jobStatus, setJobStatus] = useState(\"\");\n  const [marriageStatus, setMarriageStatus] = useState(\"\");\n  const onNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n  };\n  const onGenderChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setGender(e.target.value as string);\n  };\n  const onAgeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setAge(e.target.value);\n  };\n  const [showLoadSuccess, setShowLoadSuccess] = useState(false);\n  const handleCloseLoadSuccess = () => {\n    setShowLoadSuccess(false);\n  };\n  const handleUserNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserName(e.target.value);\n  };\n  const [showNameErrorMessage, setShowNameErrorMessage] = useState(false);\n  const handleCloseNameErrorMessage = () => {\n    setShowNameErrorMessage(false);\n  };\n  const onEducationChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setEducation(e.target.value as string);\n  };\n  const onMarriageStatusChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setMarriageStatus(e.target.value as string);\n  };\n  const onJobChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setJobStatus(e.target.value);\n  };\n  const handleNextButtonClick = async (\n    userNameFromQueryParams: string | undefined\n  ) => {\n    if (!isBasicInformationShown) {\n      if (userName || userNameFromQueryParams) {\n        await getQueryResult({\n          variables: {\n            userName: userNameFromQueryParams\n              ? userNameFromQueryParams\n              : userName,\n            limit: 1,\n            currentPageIndex: 0,\n          },\n        });\n        setIsBasicInformationShown(true);\n      } else {\n        // Show the userName cannot be empty error.\n        setIsUserNameValidated(true);\n      }\n    }\n  };\n  const handleCancel = () => {\n    setIsBasicInformationShown(false);\n  };\n  const history = useHistory();\n  const handleLogInButtonClick = async () => {\n    if (name) {\n      await patientLogIn({\n        variables: {\n          input: {\n            userName,\n            education,\n            name,\n            age: age !== \"\" ? Number(age) : undefined,\n            gender,\n            jobStatus,\n            marriageStatus,\n          },\n        },\n      });\n      history.push(\"/user/prompt\");\n    } else {\n      setIsNameValidated(true);\n      setShowNameErrorMessage(true);\n    }\n  };\n  return (\n    <div className={classes.root}>\n      <ReturnToHomeHeader />\n      {isBasicInformationShown ? (\n        loading ? (\n          <LoadingIndicator />\n        ) : (\n          <>\n            {userListData && userListData.queryUser.total > 0 ? (\n              <div className={classes.titleContainer}>\n                <div className={classes.title}>请核实您的个人信息</div>\n              </div>\n            ) : (\n              <div className={classes.titleContainer}>\n                <div className={classes.title}>请输入您的个人信息</div>\n              </div>\n            )}\n            <div className={classes.personalInformationContainer}>\n              <div>\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                  <Grid item>\n                    <AccountCircle />\n                  </Grid>\n                  <Grid item>\n                    <TextField\n                      label=\"姓名\"\n                      className={classes.input}\n                      required\n                      value={name}\n                      onChange={onNameChange}\n                      error={isNameValidated && !name ? true : false}\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n              <div>\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                  <Grid item>\n                    <WcIcon />\n                  </Grid>\n                  <Grid item>\n                    <FormControl size=\"small\" className={classes.input}>\n                      <InputLabel>性别</InputLabel>\n                      <Select\n                        color=\"primary\"\n                        label=\"性别\"\n                        onChange={onGenderChange}\n                        value={gender}\n                      >\n                        <MenuItem value=\"男\">男</MenuItem>\n                        <MenuItem value=\"女\">女</MenuItem>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </div>\n              <div>\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                  <Grid item>\n                    <AccessibilityIcon />\n                  </Grid>\n                  <Grid item>\n                    <TextField\n                      className={classes.input}\n                      color=\"primary\"\n                      label=\"年龄\"\n                      size=\"small\"\n                      type=\"number\"\n                      value={age}\n                      onChange={onAgeChange}\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n              <div>\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                  <Grid item>\n                    <ChildCareIcon />\n                  </Grid>\n                  <Grid item>\n                    <FormControl size=\"small\" className={classes.input}>\n                      <InputLabel>婚姻</InputLabel>\n                      <Select\n                        color=\"primary\"\n                        value={marriageStatus}\n                        onChange={onMarriageStatusChange}\n                      >\n                        <MenuItem value=\"已婚\">已婚</MenuItem>\n                        <MenuItem value=\"未婚\">未婚</MenuItem>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </div>\n              <div>\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                  <Grid item>\n                    <SchoolIcon />\n                  </Grid>\n                  <Grid item>\n                    <FormControl size=\"small\" className={classes.input}>\n                      <InputLabel>教育</InputLabel>\n                      <Select\n                        color=\"primary\"\n                        value={education}\n                        onChange={onEducationChange}\n                      >\n                        <MenuItem value=\"高中以下\">高中以下</MenuItem>\n                        <MenuItem value=\"大中专科\">大中专科</MenuItem>\n                        <MenuItem value=\"本科\">本科</MenuItem>\n                        <MenuItem value=\"硕士\">硕士</MenuItem>\n                        <MenuItem value=\"博士\">博士</MenuItem>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </div>\n              <div>\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                  <Grid item>\n                    <WorkIcon />\n                  </Grid>\n                  <Grid item>\n                    <TextField\n                      color=\"primary\"\n                      label=\"职业\"\n                      size=\"small\"\n                      className={classes.input}\n                      value={jobStatus}\n                      onChange={onJobChange}\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n            </div>\n          </>\n        )\n      ) : (\n        <>\n          <div className={classes.titleContainer}>\n            <div className={classes.title}>请输入您的门诊号</div>\n          </div>\n          <div className={classes.inputContainer}>\n            <TextField\n              label=\"门诊号\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <AssignmentIndIcon />\n                  </InputAdornment>\n                ),\n              }}\n              value={userName}\n              onChange={handleUserNameChange}\n              autoFocus\n              error={isUserNameValidated && !userName ? true : undefined}\n              helperText={\n                isUserNameValidated && !userName\n                  ? \"请输入您的门诊号\"\n                  : undefined\n              }\n            />\n          </div>\n        </>\n      )}\n      {isBasicInformationShown ? (\n        loading ? null : (\n          <div className={classes.actionsWrapper}>\n            <div className={classes.actionsContainer}>\n              <Button onClick={handleCancel}>取消</Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleLogInButtonClick}\n              >\n                确定\n              </Button>\n            </div>\n          </div>\n        )\n      ) : (\n        <div className={classes.buttonContainer}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            endIcon={<NavigateNextIcon />}\n            onClick={() => handleNextButtonClick(undefined)}\n          >\n            下一步\n          </Button>\n        </div>\n      )}\n      <Snackbar\n        open={showLoadSuccess}\n        autoHideDuration={6000}\n        onClose={handleCloseLoadSuccess}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n      >\n        <Alert\n          onClose={handleCloseLoadSuccess}\n          severity=\"success\"\n          variant=\"filled\"\n        >\n          成功载入您的个人信息\n        </Alert>\n      </Snackbar>\n      <Snackbar\n        open={showNameErrorMessage}\n        autoHideDuration={6000}\n        onClose={handleCloseNameErrorMessage}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n      >\n        <Alert\n          onClose={handleCloseNameErrorMessage}\n          severity=\"error\"\n          variant=\"filled\"\n        >\n          姓名为必填项！\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n","import {\n  FetchResult,\n  MutationFunctionOptions,\n  QueryLazyOptions,\n} from \"@apollo/client\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions,\n  Button,\n  createStyles,\n  makeStyles,\n  Theme,\n  debounce,\n} from \"@material-ui/core\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { ErrorIndicator } from \"../../../../lib/components\";\nimport { SuccessIndicator } from \"../../../../lib/components/SuccessIndicator\";\nimport {\n  AddDoctor,\n  AddDoctorVariables,\n} from \"../../../../lib/graphql/mutations/AddDoctor/__generated__/AddDoctor\";\nimport {\n  CheckIfDoctorNameUnique,\n  CheckIfDoctorNameUniqueVariables,\n} from \"../../../../lib/graphql/queries/CheckIfDoctorNameUnique/__generated__/CheckIfDoctorNameUnique\";\n\ninterface Props {\n  isOpen: boolean;\n  closeDialog: () => void;\n  checkDoctorUserName: (\n    options: QueryLazyOptions<CheckIfDoctorNameUniqueVariables>\n  ) => void;\n  checkResult: CheckIfDoctorNameUnique | undefined;\n  addDoctor: (\n    options?: MutationFunctionOptions<AddDoctor, AddDoctorVariables>\n  ) => Promise<FetchResult<AddDoctor>>;\n  refetchListData: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    input: {\n      display: \"block\",\n      margin: 5,\n      paddingRight: 5,\n    },\n    inputContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n  })\n);\n\nexport const AddDoctorDialog = (props: Props) => {\n  const classes = useStyles();\n  const {\n    isOpen,\n    closeDialog,\n    checkDoctorUserName,\n    checkResult,\n    addDoctor,\n    refetchListData,\n  } = props;\n  const [userNameInput, setUserNameInput] = useState(\"\");\n  const [nameInput, setNameInput] = useState(\"\");\n  const [passwordInput, setPasswordInput] = useState(\"\");\n  const [secondPasswordInput, setSecondPasswordInput] = useState(\"\");\n  const [userNameDuplicate, setUserNameDubplicate] = useState(false);\n  const [isErrorShown, setIsErrorShown] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isSuccessShown, setIsSuccessShown] = useState(false);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debouncedCheckDoctorUserName = useCallback(\n    debounce(checkDoctorUserName, 300),\n    [checkDoctorUserName]\n  );\n  useEffect(() => {\n    setUserNameInput(\"\");\n    setNameInput(\"\");\n    setPasswordInput(\"\");\n    setSecondPasswordInput(\"\");\n    setUserNameDubplicate(false);\n    setIsSuccessShown(false);\n  }, [isOpen]);\n  useEffect(() => {\n    checkResult &&\n      setUserNameDubplicate(!checkResult.checkIfDoctorUserNameUnique.result);\n  }, [checkResult]);\n  const handleUserNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserNameInput(e.target.value);\n    setUserNameDubplicate(false);\n    debouncedCheckDoctorUserName({\n      variables: {\n        userName: e.target.value,\n      },\n    });\n  };\n  const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setNameInput(e.target.value);\n  };\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setPasswordInput(e.target.value);\n  };\n\n  const handleSecondPasswordInput = (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setSecondPasswordInput(e.target.value);\n  };\n\n  const handleAddButtonClick = async () => {\n    if (passwordInput !== secondPasswordInput) {\n      setErrorMessage(\"两次输入的密码不相同！\");\n      setIsErrorShown(true);\n      return;\n    }\n    const result = await addDoctor({\n      variables: {\n        input: {\n          userName: userNameInput,\n          name: nameInput,\n          password: passwordInput,\n        },\n      },\n    });\n    if (result.data?.addDoctor.result) {\n      closeDialog();\n      refetchListData();\n      setIsSuccessShown(true);\n    }\n  };\n  return (\n    <>\n      <Dialog\n        open={isOpen}\n        onClose={closeDialog}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">添加医生</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            请输入医生的用户名、姓名和密码。\n          </DialogContentText>\n          <TextField\n            autoFocus\n            label=\"用户名\"\n            className={classes.input}\n            fullWidth\n            required\n            value={userNameInput}\n            onChange={handleUserNameChange}\n            error={userNameDuplicate || undefined}\n            helperText={userNameDuplicate ? \"此用户名已经被注册！\" : undefined}\n          />\n          <TextField\n            label=\"姓名\"\n            className={classes.input}\n            fullWidth\n            required\n            value={nameInput}\n            onChange={handleNameChange}\n          />\n          <TextField\n            label=\"密码\"\n            className={classes.input}\n            fullWidth\n            required\n            type=\"password\"\n            value={passwordInput}\n            onChange={handlePasswordChange}\n          />\n          <TextField\n            label=\"确认密码\"\n            className={classes.input}\n            fullWidth\n            required\n            type=\"password\"\n            value={secondPasswordInput}\n            onChange={handleSecondPasswordInput}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog}>取消</Button>\n          <Button\n            onClick={handleAddButtonClick}\n            color=\"primary\"\n            disabled={\n              userNameDuplicate ||\n              !nameInput ||\n              !userNameInput ||\n              !passwordInput ||\n              !secondPasswordInput\n                ? true\n                : undefined\n            }\n          >\n            添加\n          </Button>\n        </DialogActions>\n        <ErrorIndicator\n          showError={isErrorShown}\n          setShowError={setIsErrorShown}\n          errorMessage={errorMessage}\n        />\n      </Dialog>\n      <SuccessIndicator\n        showSuccess={isSuccessShown}\n        setShowSuccess={setIsSuccessShown}\n        successMessage=\"成功创建账号\"\n      />\n    </>\n  );\n};\n","import { useLazyQuery, useMutation, useQuery } from \"@apollo/client\";\nimport {\n  Avatar,\n  Button,\n  createStyles,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles,\n  Paper,\n  Theme,\n} from \"@material-ui/core\";\nimport { Pagination } from \"@material-ui/lab\";\nimport React, { useState } from \"react\";\nimport { LoadingIndicator } from \"../../lib/components\";\nimport { ADD_DOCTOR } from \"../../lib/graphql/mutations/AddDoctor\";\nimport {\n  AddDoctor,\n  AddDoctorVariables,\n} from \"../../lib/graphql/mutations/AddDoctor/__generated__/AddDoctor\";\nimport { DOCTOR_LIST } from \"../../lib/graphql/queries\";\nimport { CHECK_IF_DOCTOR_USER_NAME_UNIQUE } from \"../../lib/graphql/queries/CheckIfDoctorNameUnique\";\nimport {\n  CheckIfDoctorNameUnique,\n  CheckIfDoctorNameUniqueVariables,\n} from \"../../lib/graphql/queries/CheckIfDoctorNameUnique/__generated__/CheckIfDoctorNameUnique\";\nimport {\n  DoctorList,\n  DoctorListVariables,\n} from \"../../lib/graphql/queries/DoctorList/__generated__/DoctorList\";\nimport { Header } from \"../PatientInformation/components\";\nimport { AddDoctorDialog } from \"./components\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport { blue } from \"@material-ui/core/colors\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst DEFAULT_LIMIT = 5;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    list: {\n      margin: \"20px 10px\",\n    },\n    actionContainer: {\n      margin: 10,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n    },\n    paginationContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    totalNumberText: {\n      marginRight: 5,\n    },\n    avatar: {\n      backgroundColor: blue[100],\n      color: blue[600],\n    },\n  })\n);\nexport const CreateDoctor = () => {\n  const classes = useStyles();\n  const { loading, data, refetch } = useQuery<DoctorList, DoctorListVariables>(\n    DOCTOR_LIST,\n    {\n      variables: {\n        limit: DEFAULT_LIMIT,\n        currentPageIndex: 0,\n      },\n      fetchPolicy: \"network-only\",\n    }\n  );\n  const [checkDoctorName, { data: checkNameData }] = useLazyQuery<\n    CheckIfDoctorNameUnique,\n    CheckIfDoctorNameUniqueVariables\n  >(CHECK_IF_DOCTOR_USER_NAME_UNIQUE, {\n    fetchPolicy: \"no-cache\",\n  });\n  const [addDoctor] = useMutation<AddDoctor, AddDoctorVariables>(ADD_DOCTOR);\n  const [currentPageIndex, setCurrentPageIndex] = useState(0);\n  const [isAddDoctorDialogOpen, setIsAddDoctorDialogOpen] = useState(false);\n  const closeDialog = () => {\n    setIsAddDoctorDialogOpen(false);\n  };\n  const openDialog = () => {\n    setIsAddDoctorDialogOpen(true);\n  };\n  const handlePaginationChange = (\n    _event: React.ChangeEvent<unknown>,\n    pageIndex: number\n  ) => {\n    setCurrentPageIndex(pageIndex - 1);\n    refetch({ limit: DEFAULT_LIMIT, currentPageIndex: pageIndex - 1 });\n  };\n  const refetchListData = () => {\n    refetch({ limit: DEFAULT_LIMIT, currentPageIndex });\n  };\n  if (loading || !data) {\n    return <LoadingIndicator />;\n  }\n  return (\n    <>\n      <Header text={\"医生账号信息\"} />\n      <div className={classes.actionContainer}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={openDialog}\n          startIcon={<AddIcon />}\n        >\n          添加医生\n        </Button>\n        <div className={classes.paginationContainer}>\n          <span className={classes.totalNumberText}>\n            共计{data.doctorList.total}个账号\n          </span>\n          <Pagination\n            count={Math.ceil(data.doctorList.total / DEFAULT_LIMIT)}\n            variant=\"outlined\"\n            color=\"primary\"\n            page={currentPageIndex + 1}\n            onChange={handlePaginationChange}\n          />\n        </div>\n      </div>\n      <List component={Paper} className={classes.list}>\n        {data.doctorList.admins.map((admin, index) => (\n          <React.Fragment key={admin.userName}>\n            <ListItem alignItems=\"flex-start\" key={admin.userName}>\n              <ListItemAvatar>\n                <Avatar className={classes.avatar}>\n                  <PersonIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                primary={`账号名：${admin.userName}`}\n                secondary={`姓名：${admin.name}`}\n              />\n            </ListItem>\n            {index !== data.doctorList.admins.length - 1 && <Divider />}\n          </React.Fragment>\n        ))}\n      </List>\n      <AddDoctorDialog\n        isOpen={isAddDoctorDialogOpen}\n        closeDialog={closeDialog}\n        checkDoctorUserName={checkDoctorName}\n        checkResult={checkNameData}\n        addDoctor={addDoctor}\n        refetchListData={refetchListData}\n      />\n    </>\n  );\n};\n","import { useLazyQuery, useMutation } from \"@apollo/client\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions,\n  Button,\n  createStyles,\n  makeStyles,\n  Theme,\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  Switch,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useCallback } from \"react\";\nimport { ErrorIndicator } from \"../../../../lib/components\";\nimport { SuccessIndicator } from \"../../../../lib/components/SuccessIndicator\";\nimport { ADD_DOCTOR_CONFIG } from \"../../../../lib/graphql/mutations\";\nimport {\n  AddDoctorConfig,\n  AddDoctorConfigVariables,\n} from \"../../../../lib/graphql/mutations/AddDoctorConfig/__generated__/AddDoctorConfig\";\nimport { CHECK_IF_DOCTOR_CONFIG_USER_NAME_UNIQUE } from \"../../../../lib/graphql/queries\";\nimport {\n  CheckIfDoctorConfigNameUnique,\n  CheckIfDoctorConfigNameUniqueVariables,\n} from \"../../../../lib/graphql/queries/CheckIfDoctorConfigNameUnique/__generated__/CheckIfDoctorConfigNameUnique\";\nimport { QuestionnaireList } from \"../../../../lib/graphql/queries/QuestionnaireList/__generated__/QuestionnaireList\";\nimport { debounce } from \"../../../../lib/utils\";\n\ninterface Props {\n  isOpen: boolean;\n  closeDialog: () => void;\n  refetchListData: () => void;\n  formList: QuestionnaireList;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    input: {\n      display: \"block\",\n      margin: 5,\n      paddingRight: 5,\n    },\n    inputContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n  })\n);\n\nexport const AddConfigurationDialog = (props: Props) => {\n  const classes = useStyles();\n  const { isOpen, closeDialog, refetchListData, formList } = props;\n  const [checkConfigName, { data: checkConfigNameResult }] = useLazyQuery<\n    CheckIfDoctorConfigNameUnique,\n    CheckIfDoctorConfigNameUniqueVariables\n  >(CHECK_IF_DOCTOR_CONFIG_USER_NAME_UNIQUE, {\n    fetchPolicy: \"no-cache\",\n  });\n\n  const [addDoctorConfig] = useMutation<\n    AddDoctorConfig,\n    AddDoctorConfigVariables\n  >(ADD_DOCTOR_CONFIG);\n  const debouncedCheckConfigName = useCallback(\n    () => debounce(checkConfigName, 300),\n    [checkConfigName]\n  );\n  const [nameInput, setNameInput] = useState(\"\");\n  const [isErrorShown, setIsErrorShown] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isSuccessShown, setIsSuccessShown] = useState(false);\n  const [checkedFormIds, setCheckedFormIds] = useState<string[]>([]);\n\n  useEffect(() => {\n    setNameInput(\"\");\n    setIsErrorShown(false);\n    setErrorMessage(\"\");\n    setIsSuccessShown(false);\n    if (formList && isOpen) {\n      setCheckedFormIds([]);\n    }\n  }, [formList, isOpen]);\n\n  useEffect(() => {\n    if (checkConfigNameResult?.checkIfDoctorConfigNameUnique.result === false) {\n      setErrorMessage(\"此配置名已存在！\");\n    } else {\n      setErrorMessage(\"\");\n    }\n  }, [checkConfigNameResult]);\n\n  const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setNameInput(e.target.value);\n    debouncedCheckConfigName()({\n      variables: { doctorConfigName: e.target.value },\n    });\n  };\n\n  const handleSwitchChange = (formId: string) => {\n    if (checkedFormIds.includes(formId)) {\n      setCheckedFormIds(\n        checkedFormIds.filter((currentId) => currentId !== formId)\n      );\n    } else {\n      setCheckedFormIds([...checkedFormIds, formId]);\n    }\n  };\n\n  const handleOkButtonClick = () => {\n    addDoctorConfig({\n      variables: {\n        input: {\n          configName: nameInput,\n          selected: false,\n          formIds: checkedFormIds,\n        },\n      },\n    }).then((addResult) => {\n      if (addResult.data?.addDoctorConfig.result === true) {\n        setIsSuccessShown(true);\n        closeDialog();\n        refetchListData();\n      }\n    });\n  };\n  return (\n    <>\n      <Dialog\n        open={isOpen}\n        onClose={closeDialog}\n        aria-labelledby=\"form-dialog-title\"\n        maxWidth=\"md\"\n        fullWidth={true}\n      >\n        <DialogTitle id=\"form-dialog-title\">添加配置</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            请输入配置名，并选择需要使用的量表。\n          </DialogContentText>\n\n          <TextField\n            label=\"配置名\"\n            className={classes.input}\n            fullWidth\n            required\n            value={nameInput}\n            onChange={handleNameChange}\n            error={errorMessage ? true : undefined}\n            helperText={errorMessage || undefined}\n          />\n          <List>\n            {formList.questionnaireList.map((form) => (\n              <ListItem key={form.key}>\n                <ListItemText primary={form.name} />\n                <ListItemSecondaryAction>\n                  <Switch\n                    edge=\"end\"\n                    color=\"primary\"\n                    checked={checkedFormIds.includes(form.id)}\n                    onChange={() => handleSwitchChange(form.id)}\n                  />\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n          </List>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog}>取消</Button>\n          <Button\n            color=\"primary\"\n            disabled={!nameInput || errorMessage ? true : undefined}\n            onClick={handleOkButtonClick}\n          >\n            添加\n          </Button>\n        </DialogActions>\n        <ErrorIndicator\n          showError={isErrorShown}\n          setShowError={setIsErrorShown}\n          errorMessage={errorMessage}\n        />\n      </Dialog>\n      <SuccessIndicator\n        showSuccess={isSuccessShown}\n        setShowSuccess={setIsSuccessShown}\n        successMessage=\"成功添加配置\"\n      />\n    </>\n  );\n};\n","import { useMediaQuery } from \"@material-ui/core\";\n\nexport const useCheckSmallScreen = () => {\n  return useMediaQuery(\"(max-width:580px)\");\n};\n\nexport const debounce = <F extends (...params: any[]) => void>(\n  func: F,\n  waitTime: number\n): F => {\n  let timeout: NodeJS.Timeout;\n  return function returnedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      return func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, waitTime);\n  } as F;\n};\n\nexport function isNumeric(str: string) {\n  if (typeof str != \"string\") return false;\n  return !isNaN(parseFloat(str));\n}\n","import {\n  Dialog,\n  DialogTitle,\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  Switch,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { DoctorConfigList_doctorConfigList_configs as DoctorConfigItem } from \"../../../../lib/graphql/queries/DoctorConfigList/__generated__/DoctorConfigList\";\nimport { QuestionnaireList } from \"../../../../lib/graphql/queries/QuestionnaireList/__generated__/QuestionnaireList\";\n\ninterface Props {\n  config: DoctorConfigItem;\n  isDialogOpen: boolean;\n  formList: QuestionnaireList;\n  closeDialog: () => void;\n}\nexport const ConfirationDetailDialog = (props: Props) => {\n  const { config, isDialogOpen, formList, closeDialog } = props;\n  return (\n    <Dialog fullWidth maxWidth=\"md\" open={isDialogOpen} onClose={closeDialog}>\n      <DialogTitle>配置名：{config.configName}</DialogTitle>\n      <List>\n        {formList.questionnaireList.map((form) => (\n          <ListItem key={form.key}>\n            <ListItemText primary={form.name} />\n            <ListItemSecondaryAction>\n              <Switch\n                edge=\"end\"\n                color=\"primary\"\n                checked={config.formIds.includes(form.id)}\n              />\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n    </Dialog>\n  );\n};\n","import { gql } from \"@apollo/client\";\n\nexport const DELETE_CONFIG = gql`\n  mutation DeleteConfig($input: DeleteConfigInput) {\n    deleteConfig(input: $input) {\n      result\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  Button,\n  Card,\n  CardContent,\n  CardActions,\n  IconButton,\n} from \"@material-ui/core\";\nimport { Header } from \"../PatientInformation/components\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { AddConfigurationDialog, ConfirationDetailDialog } from \"./components\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport {\n  DOCTOR_CONFIG_LIST,\n  QUESTIONNAIRE_LIST,\n} from \"../../lib/graphql/queries\";\nimport {\n  QuestionnaireList,\n  QuestionnaireListVariables,\n} from \"../../lib/graphql/queries/QuestionnaireList/__generated__/QuestionnaireList\";\nimport { LoadingIndicator } from \"../../lib/components\";\nimport {\n  DoctorConfigList,\n  DoctorConfigList_doctorConfigList_configs as DoctorConfigItem,\n} from \"../../lib/graphql/queries/DoctorConfigList/__generated__/DoctorConfigList\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport {\n  SelectConfig,\n  SelectConfigVariables,\n} from \"../../lib/graphql/mutations/SelectConfig/__generated__/SelectConfig\";\nimport { SELECT_CONFIG } from \"../../lib/graphql/mutations\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {\n  DeleteConfig,\n  DeleteConfigVariables,\n} from \"../../lib/graphql/mutations/DeleteConfig/__generated__/DeleteConfig\";\nimport { DELETE_CONFIG } from \"../../lib/graphql/mutations/DeleteConfig\";\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    actionsContainer: {\n      margin: 10,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n    },\n    configCard: {\n      width: 270,\n      margin: \"10px 10px\",\n      display: \"inline-block\",\n    },\n    configNameContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    settingIcon: {\n      marginRight: 10,\n      color: \"#2196F3\",\n    },\n    configPromptMessage: {\n      margin: 10,\n    },\n    noOverflow: {\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n    },\n    inUseText: {\n      color: \"#4caf50 !important\",\n    },\n    resetButton: {\n      marginLeft: 10,\n    },\n    cardDescription: {\n      fontSize: \"0.875rem\",\n      paddingTop: 15,\n    },\n    deleteButton: {\n      marginLeft: \"auto !important\",\n      \"&:hover\": {\n        color: \"#B71C1C\",\n      },\n    },\n  })\n);\n\nexport const DoctorConfig = () => {\n  const [isAddConfigDialogOpen, setIsAddConfigDialogOpen] = useState(false);\n  const closeAddConfigDialog = () => {\n    setIsAddConfigDialogOpen(false);\n  };\n  const openAddConfigDialog = () => {\n    setIsAddConfigDialogOpen(true);\n  };\n  const [selectedConfig, setSelectedConfig] = useState<null | DoctorConfigItem>(\n    null\n  );\n  const [\n    isConfigrationDetailDialogOpen,\n    setIsConfigrationDetailDialogOpen,\n  ] = useState(false);\n  const closeConfigDetailDialog = () => {\n    setIsConfigrationDetailDialogOpen(false);\n  };\n  const openConfigDetailDialog = (configItem: DoctorConfigItem) => {\n    setSelectedConfig(configItem);\n    setIsConfigrationDetailDialogOpen(true);\n  };\n  const {\n    data: configList,\n    refetch,\n    loading: configListLoading,\n  } = useQuery<DoctorConfigList>(DOCTOR_CONFIG_LIST, {\n    fetchPolicy: \"no-cache\",\n  });\n  const classes = useStyles();\n  const {\n    loading,\n    data: formListData,\n    error: questionnaireListError,\n  } = useQuery<QuestionnaireList, QuestionnaireListVariables>(\n    QUESTIONNAIRE_LIST,\n    {\n      variables: { isReport: false, showAll: true },\n    }\n  );\n  const [selectConfig] = useMutation<SelectConfig, SelectConfigVariables>(\n    SELECT_CONFIG\n  );\n  const [deleteConfig] = useMutation<DeleteConfig, DeleteConfigVariables>(\n    DELETE_CONFIG\n  );\n  const handleSelectConfigButtonClick = (configId: string) => {\n    selectConfig({ variables: { input: { configId } } }).then(() => refetch());\n  };\n  const handleDeleteConfigButtonClick = (configId: string) => {\n    deleteConfig({ variables: { input: { configId } } }).then(() => refetch());\n  };\n  const handleResetButtonClick = () => {\n    selectConfig({ variables: { input: {} } }).then(() => refetch());\n  };\n\n  if (loading || !formListData || !configList || configListLoading) {\n    return <LoadingIndicator />;\n  }\n  let currentlyUsedConfig: null | DoctorConfigItem | false = null;\n  // null: unknown\n  // false: no currently used configuration\n  // DoctorConfigItem: currently used configration\n  const configInUseList = configList?.doctorConfigList.configs.filter(\n    (config) => config.selected === true\n  );\n  if (configInUseList === undefined) {\n    currentlyUsedConfig = null;\n  } else if (configInUseList.length === 0) {\n    currentlyUsedConfig = false;\n  } else {\n    currentlyUsedConfig = configInUseList[0];\n  }\n  return (\n    <>\n      <Header text={\"配置患者端使用的量表\"} />\n      <div className={classes.actionsContainer}>\n        <Button\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          variant=\"contained\"\n          onClick={openAddConfigDialog}\n        >\n          添加配置\n        </Button>\n        <a href=\"/user\" target=\"_blank\">\n          <Button startIcon={<OpenInNewIcon />}>启动用户端</Button>\n        </a>\n      </div>\n      <div className={classes.configPromptMessage}>\n        {/** Prompt message */}\n        {currentlyUsedConfig === null ? null : currentlyUsedConfig === false ? (\n          \"当前无使用中的自定义配置，所有量表都可见。\"\n        ) : (\n          <>\n            {`当前使用的配置名称为：${currentlyUsedConfig.configName}`}\n            <Button\n              className={classes.resetButton}\n              variant=\"outlined\"\n              size=\"small\"\n              onClick={handleResetButtonClick}\n            >\n              重置\n            </Button>\n          </>\n        )}\n      </div>\n      <div>\n        {configList?.doctorConfigList.configs.map((config) => (\n          <Card className={classes.configCard} key={config.id}>\n            <CardContent>\n              <div className={classes.configNameContainer}>\n                <SettingsIcon className={classes.settingIcon} />\n                <span className={classes.noOverflow}>{config.configName}</span>\n              </div>\n              <div className={classes.cardDescription}>\n                共{config.formIds.length}个量表\n              </div>\n            </CardContent>\n            <CardActions>\n              <Button\n                size=\"small\"\n                onClick={() => openConfigDetailDialog(config)}\n              >\n                查看详情\n              </Button>\n              {config.selected === false ? (\n                <Button\n                  size=\"small\"\n                  onClick={() => handleSelectConfigButtonClick(config.id)}\n                >\n                  使用此配置\n                </Button>\n              ) : (\n                <Button\n                  size=\"small\"\n                  className={classes.inUseText}\n                  disableRipple\n                  disabled\n                >\n                  使用中\n                </Button>\n              )}\n              <IconButton\n                size=\"small\"\n                className={classes.deleteButton}\n                onClick={() => handleDeleteConfigButtonClick(config.id)}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </CardActions>\n          </Card>\n        ))}\n      </div>\n      <AddConfigurationDialog\n        isOpen={isAddConfigDialogOpen}\n        closeDialog={closeAddConfigDialog}\n        refetchListData={refetch}\n        formList={formListData}\n      />\n      {selectedConfig && (\n        <ConfirationDetailDialog\n          isDialogOpen={isConfigrationDetailDialogOpen}\n          closeDialog={closeConfigDetailDialog}\n          formList={formListData}\n          config={selectedConfig}\n        />\n      )}\n    </>\n  );\n};\n","/**\n * @author Qiuran Hu\n * @email qiuranh@gmail.com\n * @create date 2021-04-26 10:50:05\n * @modify date 2021-04-26 10:50:05\n * @desc [description]\n */\nimport \"@fontsource/noto-sans-sc/400.css\";\nimport {\n  ApolloClient,\n  ApolloProvider,\n  InMemoryCache,\n  useMutation,\n  HttpLink,\n} from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { DOCTOR_LOG_IN } from \"./lib/graphql/mutations\";\nimport { Doctor, Patient, Viewer } from \"./lib/type\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport {\n  AppHeader,\n  Sider,\n  Home,\n  Login,\n  Form,\n  Report,\n  PatientInformation,\n  Welcome,\n  PromptMessage,\n  PatientLogin,\n  CreateDoctor,\n  DoctorConfig,\n} from \"./sections\";\nimport {\n  createMuiTheme,\n  createStyles,\n  makeStyles,\n  Theme,\n  ThemeProvider,\n  Toolbar,\n} from \"@material-ui/core\";\nimport { PrivateRoute } from \"./lib/components/PrivateRoute\";\nimport { LoadingIndicator } from \"./lib/components\";\nimport { zhCN } from \"@material-ui/core/locale\";\nimport {\n  DoctorLogIn,\n  DoctorLogInVariables,\n} from \"./lib/graphql/mutations/DoctorLogIn/__generated__/DoctorLogIn\";\nimport {\n  PatientLogIn,\n  PatientLogInVariables,\n} from \"./lib/graphql/mutations/PatientLogIn/__generated__/PatientLogIn\";\nimport { PATIENT_LOG_IN } from \"./lib/graphql/mutations/PatientLogIn\";\nimport \"fontsource-roboto\";\nimport {\n  NO_DOCTOR_LOGIN_ERROR_MESSAGE,\n  NO_PATIENT_LOGIN_ERROR_MESSAGE,\n} from \"./lib/utils/constants\";\n\nconst httpLink = new HttpLink({ uri: \"/api\" });\n\nconst logoutLink = onError((errorHandler) => {\n  const graphQLErrors = errorHandler.graphQLErrors;\n  if (graphQLErrors)\n    for (let error of graphQLErrors) {\n      if (\n        error.message === NO_DOCTOR_LOGIN_ERROR_MESSAGE ||\n        error.message === NO_PATIENT_LOGIN_ERROR_MESSAGE\n      ) {\n        // eslint-disable-next-line no-restricted-globals\n        location.reload();\n        return;\n      }\n    }\n});\n\nconst client = new ApolloClient({\n  uri: \"/api\",\n  cache: new InMemoryCache(),\n  link: logoutLink.concat(httpLink),\n  headers: { \"X-CSRF_TOKEN\": sessionStorage.getItem(\"token\") || \"\" },\n});\n\nconst initialViewer: Viewer = {\n  userName: null,\n  token: null,\n  didRequest: false,\n  catelogy: null,\n};\n\nconst initialDoctor: Doctor = {\n  name: null,\n  userName: null,\n  didRequest: false,\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      height: \"100%\",\n    },\n    contentContainer: {\n      flexGrow: 1,\n      height: \"100%\",\n    },\n  })\n);\n\nexport const PRIMARY_COLOR = \"#1a73e8\";\nconst App = () => {\n  const classes = useStyles();\n\n  // const [viewer, setViewer] = useState<Viewer>(initialViewer);\n  const [doctor, setDoctor] = useState<Doctor>(initialDoctor);\n  const [patient, setPatient] = useState<Patient>(initialViewer);\n  const [isSiderOpen, setIsSiderOpen] = useState(false);\n  // const [logIn] = useMutation<LogInData, LogInVariables>(LOG_IN, {\n  //   onCompleted: (data) => {\n  //     if (data && data.logIn) {\n  //       setViewer(data.logIn);\n  //       if (data.logIn.token) {\n  //         sessionStorage.setItem(\"token\", data.logIn.token);\n  //       } else {\n  //         sessionStorage.removeItem(\"token\");\n  //       }\n  //     }\n  //   },\n  // });\n  // const logInRef = useRef(logIn);\n  const [doctorLogIn, { loading: doctorLogInLoading }] = useMutation<\n    DoctorLogIn,\n    DoctorLogInVariables\n  >(DOCTOR_LOG_IN, {\n    onCompleted: (data) => {\n      if (data && data.doctorLogIn) {\n        const { name, userName, didRequest } = data.doctorLogIn;\n        setDoctor({\n          name,\n          userName,\n          didRequest,\n        });\n      }\n    },\n  });\n  const doctorLogInRef = useRef(doctorLogIn);\n\n  const [patientLogIn, { loading: patientLogInLoading }] = useMutation<\n    PatientLogIn,\n    PatientLogInVariables\n  >(PATIENT_LOG_IN, {\n    onCompleted: (data) => {\n      if (data && data.patientLogIn) {\n        setPatient(data.patientLogIn);\n      }\n    },\n  });\n\n  const patientLogInRef = useRef(patientLogIn);\n  useEffect(() => {\n    doctorLogInRef.current();\n    // logInRef.current();\n    patientLogInRef.current();\n  }, []);\n  if (\n    doctorLogInLoading ||\n    !doctor.didRequest ||\n    patientLogInLoading ||\n    !patient.didRequest\n  ) {\n    return <LoadingIndicator />;\n  }\n  const isAuthorized = !!doctor.userName;\n  return (\n    <Router>\n      {/** App Header */}\n      <Switch>\n        <Route exact path=\"/\" />\n        <Route exact path=\"/user/prompt\" />\n        <Route exact path=\"/user/login\" />\n        <Route path=\"/user/home\" />\n        <Route path=\"/doctor\">\n          <AppHeader\n            viewer={doctor}\n            setViewer={setDoctor}\n            type=\"doctor\"\n            setIsSiderOpen={setIsSiderOpen}\n          />\n          <Switch>\n            <Route exact path=\"/\" />\n          </Switch>\n        </Route>\n      </Switch>\n\n      <Switch>\n        <Route exact path=\"/login\">\n          <Login\n            isAuthorized={isAuthorized}\n            setViewer={setDoctor}\n            setDoctor={setDoctor}\n            doctor={doctor}\n          />\n        </Route>\n        <Route\n          exact\n          path=\"/doctor\"\n          render={({ location }) => (\n            <Redirect to={{ pathname: \"/login\", state: { from: location } }} />\n          )}\n        />\n\n        <PrivateRoute isAuthorized={isAuthorized} path=\"/user\" exact>\n          <Welcome\n            setDoctor={setDoctor}\n            doctor={doctor}\n            logIn={doctorLogInRef.current}\n          />\n        </PrivateRoute>\n        <PrivateRoute isAuthorized={isAuthorized} path=\"/user/login\" exact>\n          <PatientLogin setPatient={setPatient} patient={patient} />\n        </PrivateRoute>\n        {patient.userName && (\n          <PrivateRoute isAuthorized={isAuthorized} path=\"/user/prompt\" exact>\n            <PromptMessage />\n          </PrivateRoute>\n        )}\n        {doctor.userName && (\n          <PrivateRoute\n            isAuthorized={isAuthorized}\n            path={`/doctor/${doctor.userName}`}\n          >\n            <div className={classes.root}>\n              <Sider\n                viewer={doctor}\n                type=\"doctor\"\n                open={isSiderOpen}\n                onClose={() => setIsSiderOpen(false)}\n              />\n              <div className={classes.contentContainer}>\n                <Toolbar />\n                <Switch>\n                  <Route\n                    exact\n                    path={`/doctor/${doctor.userName}`}\n                    component={PatientInformation}\n                  />\n                  <Route\n                    exact\n                    path={`/doctor/${doctor.userName}/manage`}\n                    component={CreateDoctor}\n                  />\n                  <Route\n                    exact\n                    path={`/doctor/${doctor.userName}/config`}\n                    component={DoctorConfig}\n                  />\n                </Switch>\n              </div>\n            </div>\n          </PrivateRoute>\n        )}\n        {patient.userName && (\n          <PrivateRoute isAuthorized={isAuthorized} path=\"/user\">\n            <AppHeader viewer={patient} setViewer={setPatient} type=\"user\" />\n            <Switch>\n              <PrivateRoute isAuthorized={isAuthorized} path=\"/user/form\" exact>\n                <Form patient={patient} />\n              </PrivateRoute>\n\n              <PrivateRoute isAuthorized={isAuthorized} path=\"/user\">\n                <div className={classes.root}>\n                  <Sider viewer={patient} type=\"user\" />\n                  <div className={classes.contentContainer}>\n                    <Toolbar />\n                    <Switch>\n                      <Route exact path=\"/user/home\">\n                        <Home patient={patient} />\n                      </Route>\n                      <Route exact path=\"/user/report\">\n                        <Report patientName={patient.name || undefined} />\n                      </Route>\n                    </Switch>\n                  </div>\n                </div>\n              </PrivateRoute>\n            </Switch>\n          </PrivateRoute>\n        )}\n        <PrivateRoute isAuthorized={isAuthorized} path=\"/user\">\n          <></>\n        </PrivateRoute>\n        <PrivateRoute isAuthorized={isAuthorized} path=\"/doctor\">\n          <></>\n        </PrivateRoute>\n        <Route exact path=\"/\">\n          <Redirect to=\"/user\" />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nconst theme = createMuiTheme(\n  {\n    palette: {\n      primary: {\n        light: \"#6a9dff\",\n        main: PRIMARY_COLOR,\n        dark: \"#0045b5\",\n        contrastText: \"#fff\",\n      },\n      secondary: {\n        light: \"#ff7961\",\n        main: \"#f44336\",\n        dark: \"#ba000d\",\n        contrastText: \"#000\",\n      },\n    },\n  },\n  zhCN\n);\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}