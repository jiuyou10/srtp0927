{"version":3,"sources":["lib/graphql/mutations/Login/index.ts","lib/graphql/mutations/LogOut/index.ts","lib/graphql/mutations/CreateAccount/index.ts","lib/graphql/mutations/SaveUserAnswer/index.ts","lib/graphql/mutations/SavePartialAnswer/index.ts","lib/graphql/mutations/DoctorLogOut/index.ts","lib/graphql/mutations/DoctorLogIn/index.ts","lib/graphql/mutations/AddDiagnosis/index.ts","lib/graphql/mutations/AddDoctor/index.ts","reportWebVitals.ts","lib/components/PrivateRoute/index.tsx","lib/components/LoadingIndicator/index.tsx","lib/components/ErrorIndicator/index.tsx","lib/components/ReportPdf/index.tsx","lib/components/ReturnToHomeHeader/index.tsx","lib/components/LineChart/index.tsx","lib/utils/constants.ts","lib/components/LineChartPopOver/index.tsx","sections/AppHeader/assets/logo.png","sections/Login/index.tsx","sections/Home/assets/cardIcon.png","lib/graphql/queries/QuestionnaireList/index.ts","lib/graphql/queries/QuestionnaireContent/index.ts","lib/graphql/queries/Report/index.ts","lib/graphql/queries/ReportForAdmin/index.ts","lib/graphql/queries/DoctorList/index.ts","sections/Home/components/EnterGenderAndAgeDialog/index.tsx","sections/Home/components/ChildrenEnterGenderAndAgeDialog/index.tsx","sections/Home/components/PhcssGenderAndAgeDialog/index.tsx","sections/Home/index.tsx","lib/graphql/mutations/PatientLogOut/index.ts","sections/Report/components/withReportPdfData/index.tsx","lib/graphql/globalTypes.ts","sections/AppHeader/index.tsx","sections/Sider/components/PersonalInfomation/index.tsx","sections/Sider/index.tsx","sections/Form/Components/ProgressBar/index.tsx","sections/Form/Components/Timer/index.tsx","sections/Form/Customization/psqi/index.tsx","sections/Form/index.tsx","sections/Form/Customization/yaleBrown/index.ts","sections/CreateAccount/index.tsx","sections/Report/index.tsx","lib/graphql/queries/QueryUser/index.ts","sections/PatientInformation/components/AdditionalFieldsModal/index.tsx","sections/PatientInformation/components/SearchPatientForm/index.tsx","sections/PatientInformation/components/Header/index.tsx","sections/PatientInformation/components/LineChartsButton/index.tsx","sections/PatientInformation/components/AddDiagnosisModal/index.tsx","sections/PatientInformation/components/PatientTable/index.tsx","sections/PatientInformation/components/ChooseFormModal/index.tsx","sections/PatientInformation/components/HelpPopover/index.tsx","sections/PatientInformation/index.tsx","sections/PatientInformation/components/withReportPdfDataForAdmin/index.tsx","sections/Welcome/components/Header/index.tsx","sections/Welcome/components/DoctorLogInDialog/index.tsx","sections/Welcome/index.tsx","sections/PromptMessage/index.tsx","lib/graphql/mutations/PatientLogIn/index.ts","sections/PatientLogin/index.tsx","lib/graphql/queries/CheckIfDoctorNameUnique/index.ts","lib/components/SuccessIndicator/index.tsx","sections/CreateDoctor/components/AddDoctorDialog/index.tsx","sections/CreateDoctor/index.tsx","index.tsx"],"names":["gql","SAVE_USER_ANSWER","SAVE_PARTIAL_ANSWER","DOCTOR_LOG_OUT","DOCTOR_LOG_IN","ADD_DIAGNOSIS","ADD_DOCTOR","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","PrivateRoute","props","isAuthorized","children","rest","render","location","to","pathname","state","from","useStyles","makeStyles","theme","root","display","width","height","justifyContent","alignItems","LoadingIndicator","styles","className","CircularProgress","ErrorIndicator","showError","setShowError","errorMessage","Snackbar","open","onClose","elevation","variant","severity","pdfjs","GlobalWorkerOptions","workerSrc","createStyles","marginTop","paper","marginBottom","pdfViewer","topbar","returnButton","marginLeft","downloadButton","marginRight","printIcon","page","padding","ReportPdf","pdfData","closeReport","classes","React","useState","window","innerWidth","setWidth","updateWidth","useEffect","addEventListener","removeEventListener","numPages","setNumPages","IconButton","onClick","printJS","printable","type","base64","download","href","title","Divider","file","loading","onLoadSuccess","nextNumPages","Array","el","index","Paper","pageNumber","renderMode","document","getElementById","offsetWidth","header","overflow","actionContainer","float","paddingRight","paddingTop","fontSize","ReturnToHomeHeader","Button","color","startIcon","canvasContainer","LineChart","labelList","dataList","multipleDataList","showLabel","chartRef","useRef","initRef","current","lineChart","getContext","Chart","data","labels","datasets","label","borderColor","backgroundColor","fill","lineTension","options","tooltips","mode","intersect","hover","maintainAspectRatio","responsive","scales","yAxes","ticks","beginAtZero","plugins","datalabels","anchor","align","formatter","Math","round","id","ref","EYSCENCK_FORM_NAME","EYSCENCK_CHILDREN_FORM_NAME","YAML_BROWN_FORM_KEY","PSQI_FORM_KEY","PHCSS_FORM_KEY","HIDE_LABEL_FORMS","HIDE_LABEL_KEYS","LineChartPopOver","formResultList","formName","formKey","fillInDateList","useMemo","map","formResult","fillInDate","resultList","Number","JSON","parse","result","total","resultObject","eTScore","pTScore","nTScore","lTScore","yaleBrownMind","yaleBrownBehavior","yaleBrownTotal","psssP","psssS","psssTotal","mdqTotal","psqiTotal","phcssTotal","includes","isDialogOpen","setIsDialogOpen","size","disabled","length","Dialog","DialogTitle","DialogContent","logInCard","borderRadius","margin","logInText","textAlign","promptText","input","inputContainer","userNameInput","passwordInput","buttonContainer","logo","logoContainer","pageContainer","topPadding","initialAccountInfo","userName","password","Login","setDoctor","setViewer","doctor","useMutation","onCompleted","doctorLogIn","name","didRequest","setIsRedo","onError","error","setIsLogInErrorShown","doctorLoginRef","accountInfo","setAccountInfo","isNameAndPasswordValidated","setIsNameAndPasswordValidated","isLogInErrorShown","handleKeyPress","event","key","logInButtonOnClick","isRedo","detectRedoRef","history","variables","useHistory","isDoctor","Card","CardContent","src","alt","TextField","autoFocus","value","onChange","e","target","helperText","undefined","inputProps","QUESTIONNAIRE_LIST","QUESTIONNAIRE_CONTENT","REPORT","REPORT_FOR_ADMIN","DOCTOR_LIST","EnterGenderAndAgeDialog","isOpen","handleClose","goToLogInPage","age","gender","DialogContentText","DialogActions","ChildrenEnterGenderAndAgeDialog","PhcssGenderAndAgeDialog","content","listName","gridTemplateColumns","rowGap","columnGap","card","cardActionArea","cursor","indigo","cardIcon","unfinishedText","finishedText","questionnaireName","lineHeight","cardActionContainer","paddingLeft","noOverflow","textOverflow","whiteSpace","Home","patient","isSmallScreen","useMediaQuery","useQuery","fetchPolicy","isReport","listData","uniqueFormList","formList","formSet","Set","questionnaireList","forEach","questionnaire","has","displayedFillInDate","push","add","isGenderAndAgeDialogOpen","setIsGenderAndAgeDialogOpen","isChildrenGenderAndAgeDialogOpen","setIsChildrenGenderAndAgeDialogOpen","isPhcssDialogOpen","setIsPhcssDialogOpen","closeGenderAndAgeDialog","closeChildrenGenderAndAgeDialog","defaultReturn","test","nameMatchFormResult","match","abbreviationMatchFormResult","substring","abbreviation","replace","goToFormPage","formId","finishStatus","done","List","subheader","ListSubheader","ListItem","button","ListItemAvatar","CardIcon","ListItemText","primary","secondary","CardActionArea","CardActions","WrappedComponent","UsersFilter","PATIENT_LOG_OUT","flexGrow","zIndex","drawer","spacing","maxWidth","maxHeight","timerHeader","AppHeader","viewer","doctorLogOut","sessionStorage","removeItem","console","log","logOut","patientLogOut","handleLogout","a","path","exact","AppBar","position","Toolbar","propertyName","propertyDivider","fields","displayNames","PersonalInformation","field","validIndexes","i","validIndex","flexShrink","personalInfoCard","personalInfoCardContent","paddingBottom","personalInfoText","fontWeight","drawerPaper","idChip","adminMenu","adminMenuHeader","link","Sider","useLocation","Drawer","style","ListItemIcon","Chip","icon","PROGRESS_BAR_WIDTH","finished","leftCircle","circle","circlewrapper","rightCircle","rightCircleWrapper","ProgressBar","totalNumber","currentIndex","widthOfFinishedPart","timeNumber","userSelect","WebkitUserSelect","WebkitTouchCallout","KhtmlUserSelect","MozUserSelect","msUserSelect","Timer","seconds","setSeconds","interval","setTimeout","clearTimeout","hour","floor","minute","second","psqiValidation","currentQuestionIndex","setErrorMessage","formContainer","form","titleCard","titleCardColor","borderTopLeftRadius","borderTopRightRadius","PRIMARY_COLOR","titleCardContent","titleCardMainText","questionCard","questionText","questionOptionText","buttonWithRightMargin","homeLink","exitButton","right","bottom","timerContaner","left","footer","progressWrapper","progressWrapperForSmallScreen","questionParent","answerInput","Form","URLSearchParams","search","get","partialAnswer","setChoiceDisabled","questions","question","choices","choice","answers","setIsAllowedToSubmit","newAnswers","unfinishedQuestionIndex","answer","setAnswers","setCurrentQuestionIndex","min","saveUserAnswer","setIsDone","savePartialAnswer","saveUserAnswerRef","savePartialAnswerRef","timeoutRef","autoSaveTimeoutRef","choiceDisabled","isDone","isAllowedToSubmit","isNextButtonDisabled","setIsNextButtonDisabled","confirmed","setConfirmed","selectChoiceLockRef","isErrorShown","setIsErrorShown","getAnswerArray","useCallback","answerArray","savePartialAnswerToBackend","questionnaireId","Promise","resolve","setInterval","clearInterval","closeConfirmDialog","validation","all","onNextButtonClick","onSubmit","onBackButtonClick","goToHome","handleExitButtonClick","radioButtonOnClick","questionIndex","autoChooseChoices","newChoiceDisabled","autoChooseChoiceIndex","yaleBrownCustomization","timeout","currentQuestionnIndex","yaleBrownSkipQuestions","currentQuestion","preventDefault","parent","split","FormControl","component","FormControlLabel","control","Radio","checked","Fab","instruction","createAccountCard","createAccountText","formClassifyText","PdfViewer","userAnswerIds","report","pdf","questionnaireTable","doneIcon","Report","count","setNumberOfFinishedQuestionnaires","newselectedUserAnswers","userAnswerId","setSelectedUserAnswers","selectedUserAnswers","numberOfFinishedQuestionnaires","isReportVisible","setIsReportVisible","TableContainer","Table","aira-label","TableHead","TableRow","TableCell","Checkbox","TableBody","delete","selectQuestionnaire","CheckCircleOutline","QUERY_USER","ADDITIONAL_FIELD_KEYS","ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES","removeElementFromArray","array","element","newArray","currentElement","AdditionalFieldsModal","handleDialogClose","additionalFields","setAdditionalFields","aria-labelledby","displayName","fieldKey","AGE_NEGATIVE_ERROR_MESSAGE","rangeWrapper","ageRangeInput","dateRangeWrapper","ageRangeWrapper","dateRangeInput","ageInputIconWrapper","buttonWrapper","extraFieldsWrapper","searchButton","whiteButton","rangeFormWrapper","ageInputIcon","chip","additionalFieldButton","datePickerProps","format","okLabel","cancelLabel","invalidLabel","maxDateMessage","minDateMessage","invalidDateMessage","SearchPatientForm","forwardRef","searchPatients","limit","setCurrentPageIndex","currentPageIndex","filter","setUserName","setName","setGender","max","ageRange","setAgeRange","dateRange","setDateRange","onlyMyPatient","setOnlyMyPatient","errorField","setErrorField","isAdditionalFieldsModalOpen","setIsAdditionalFieldsModalOpen","handleSearchButtonClick","minSignUpDate","year","getFullYear","month","getMonth","day","getDate","maxSignUpDate","useImperativeHandle","noValidate","autoComplete","InputLabel","Select","MenuItem","newMinAge","newMaxAge","utils","DateFnsUtils","locale","cnLocale","DatePicker","date","_value","onDelete","INITAL_ONLY_MY_PATIENT","Header","text","LineChartsButton","finishedForms","isButtonDisabled","newResultList","reverse","setIsOpen","closeModal","diagnosisText","minWidth","AddDiagnosisModal","patientName","patientId","refetch","addDiagnosis","setDiagnosis","diagnosis","handleComfirm","indexOf","fullWidth","shrink","option","loadingIndicatorWrapper","reportButton","lineChartsButtonContainer","tableCell","iconMargin","tableColumnTexts","tableColumns","tableMinWidth","tableMaxWidth","PatientTable","patientList","selectedUserAnswerIds","setSelectedUserId","setSelectedUserAnswerIds","setIsReportShown","handleLimitChange","handleCurrentPageIndexChange","handleSortChange","isChooseFormModalShown","setIsChooseFormModalShown","finishedFormList","setFinishedFormList","isAddDiagnosisModalShown","setIsAddDiagnosisModalShown","addDiagnosisPatientId","setAddDiagnosisPatientId","addDiagnosisPatientName","setAddDiagnosisPatientName","handleEditDiagnosisButtonClick","queryUser","users","TablePagination","rowsPerPage","rowsPerPageOptions","onChangePage","_event","onChangeRowsPerPage","labelDisplayedRows","ceil","aria-label","TableSortLabel","active","direction","DATE_LATEST","patientInformation","isReportButtonDisabled","column","userId","finishedForm","handleReportButtonClick","onOkButtonClick","popover","pointerEvents","ChooseFormModal","aria-describedby","currentUserAnswerId","doctorName","reportForAdmin","withReportPdfDataForAdmin","PatientInformation","useLazyQuery","getQueryResult","userListData","searchFormRef","setLimit","setFilter","selectedUserId","isReportShown","getQueryResultRef","searchParams","setSearchParams","params","newFilter","DATE_OLDEST","welcomeMessage","DoctorLogInDialog","handleClickLogIn","handleDoctorLogIn","hideErrorIndicator","setPassword","hideError","handleClickCancel","Grid","container","item","background","minHeight","flexDirection","enterSystemButtonContainer","extendedIcon","seuText","Welcome","logIn","doctorLogInDialogRef","logInResult","titleWrapper","promptTextContainer","titleContainer","PromptMessage","endIcon","PATIENT_LOG_IN","personalInformationContainer","actionsWrapper","actionsContainer","PatientLogin","setPatient","queryParams","handleNextButtonClick","isBasicInformationShown","handleLogInButtonClick","patientLogIn","isUserNameValidated","setIsUserNameValidated","isNameValidated","setIsNameValidated","userInfo","setAge","education","setEducation","jobStatus","setJobStatus","marriageStatus","setMarriageStatus","setShowLoadSuccess","setIsBasicInformationShown","showLoadSuccess","handleCloseLoadSuccess","showNameErrorMessage","setShowNameErrorMessage","handleCloseNameErrorMessage","userNameFromQueryParams","required","InputProps","startAdornment","InputAdornment","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","CHECK_IF_DOCTOR_USER_NAME_UNIQUE","SuccessIndicator","showSuccess","setShowSuccess","successMessage","AddDoctorDialog","closeDialog","checkDoctorUserName","checkResult","addDoctor","refetchListData","setUserNameInput","nameInput","setNameInput","setPasswordInput","secondPasswordInput","setSecondPasswordInput","userNameDuplicate","setUserNameDubplicate","isSuccessShown","setIsSuccessShown","debouncedCheckDoctorUserName","debounce","checkIfDoctorUserNameUnique","handleAddButtonClick","list","paginationContainer","totalNumberText","avatar","blue","CreateDoctor","checkDoctorName","checkNameData","isAddDoctorDialogOpen","setIsAddDoctorDialogOpen","doctorList","Pagination","pageIndex","admins","admin","Fragment","Avatar","client","ApolloClient","uri","cache","InMemoryCache","headers","getItem","initialViewer","token","catelogy","initialDoctor","contentContainer","App","doctorLogInLoading","doctorLogInRef","patientLogInLoading","patientLogInRef","createMuiTheme","palette","light","main","dark","contrastText","zhCN","ReactDOM","ThemeProvider"],"mappings":"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","file":"static/js/main.fb0cc935.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const LOG_IN = gql`\n  mutation LogIn($input: LogInInput) {\n    logIn(input: $input) {\n      ... on UserViewer {\n        token\n        name\n        userName\n        gender\n        education\n        jobStatus\n        age\n        marriageStatus\n        didRequest\n        catelogy\n      }\n      ... on AdminViewer {\n        name\n        userName\n        didRequest\n        token\n        catelogy\n      }\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const LOG_OUT = gql`\n  mutation Logout {\n    logOut {\n      ... on UserViewer {\n        id\n        token\n        didRequest\n        catelogy\n      }\n      ... on AdminViewer {\n        id\n        token\n        didRequest\n        catelogy\n      }\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const CREATE_ACCOUNT = gql`\n  mutation CreateAccount($input: CreateAccountInput) {\n    createAccount(input: $input) {\n      token\n      name\n      userName\n      gender\n      education\n      jobStatus\n      marriageStatus\n      didRequest\n      age\n      catelogy\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const SAVE_USER_ANSWER = gql`\n  mutation SaveUserAnswer($input: UserAnswerInput) {\n    saveUserAnswer(input: $input) {\n      didRequest\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const SAVE_PARTIAL_ANSWER = gql`\n  mutation SavePartialAnswer($input: UserAnswerInput) {\n    savePartialAnswer(input: $input) {\n      didRequest\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const DOCTOR_LOG_OUT = gql`\n  mutation DoctorLogOut {\n    doctorLogOut {\n      didRequest\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const DOCTOR_LOG_IN = gql`\n  mutation DoctorLogIn($input: DoctorLoginInput) {\n    doctorLogIn(input: $input) {\n      name\n      userName\n      didRequest\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const ADD_DIAGNOSIS = gql`\n  mutation AddDiagnosis($input: AddDiagnosisInput) {\n    addDiagnosis(input: $input) {\n      result\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const ADD_DOCTOR = gql`\n  mutation AddDoctor($input: AddDoctorInput) {\n    addDoctor(input: $input) {\n      result\n    }\n  }\n`;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { ReactNode } from \"react\";\nimport { Redirect, Route, RouteProps } from \"react-router-dom\";\n\ninterface Props extends RouteProps {\n  isAuthorized: boolean;\n  children: ReactNode;\n}\n\nexport const PrivateRoute = (props: Props) => {\n  const { isAuthorized, children, ...rest } = props;\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuthorized ? (\n          children\n        ) : (\n          <Redirect to={{ pathname: \"/login\", state: { from: location } }} />\n        )\n      }\n    />\n  );\n};\n","import { CircularProgress, makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}));\nexport const LoadingIndicator = () => {\n  const styles = useStyles();\n  return (\n    <div className={styles.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n","import { Snackbar } from \"@material-ui/core\";\nimport React from \"react\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\ninterface Props {\n  showError: boolean;\n  setShowError: (showError: boolean) => void;\n  errorMessage: string;\n}\n\nexport const ErrorIndicator = (props: Props) => {\n  const { showError, setShowError, errorMessage } = props;\n  return (\n    <Snackbar open={showError} onClose={() => setShowError(false)}>\n      <MuiAlert\n        elevation={6}\n        variant=\"filled\"\n        severity=\"error\"\n        onClose={() => setShowError(false)}\n      >\n        {errorMessage}\n      </MuiAlert>\n    </Snackbar>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Document, Page } from \"react-pdf\";\nimport { pdfjs } from \"react-pdf\";\nimport {\n  createStyles,\n  Divider,\n  IconButton,\n  makeStyles,\n  Paper,\n  Theme,\n} from \"@material-ui/core\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport printJS from \"print-js\";\nimport PrintIcon from \"@material-ui/icons/Print\";\n\npdfjs.GlobalWorkerOptions.workerSrc = \"/pdf.worker.js\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      marginTop: 10,\n    },\n    paper: {\n      marginBottom: 10,\n    },\n    pdfViewer: {},\n    topbar: {\n      height: 48,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n    },\n    returnButton: {\n      marginLeft: 5,\n    },\n    downloadButton: {\n      marginRight: 5,\n    },\n    printIcon: {},\n    page: {\n      padding: 3,\n    },\n  })\n);\n\ninterface Props {\n  pdfData: string;\n  closeReport: () => void;\n}\n\nexport const ReportPdf = ({ pdfData, closeReport }: Props) => {\n  const classes = useStyles();\n\n  const [width, setWidth] = React.useState(window.innerWidth);\n\n  const updateWidth = () => {\n    if (window.innerWidth !== width) setWidth(window.innerWidth);\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateWidth);\n    return () => window.removeEventListener(\"resize\", updateWidth);\n  });\n  const printReport = () => {\n    printJS({\n      printable: `${pdfData}`,\n      type: \"pdf\",\n      base64: true,\n    });\n  };\n  const [numPages, setNumPages] = useState<number>(0);\n  const onDocumentLoadSuccess = ({\n    numPages: nextNumPages,\n  }: {\n    numPages: number;\n  }) => {\n    setNumPages(nextNumPages);\n  };\n\n  return (\n    <>\n      <div>\n        <div className={classes.topbar}>\n          <IconButton onClick={closeReport} className={classes.returnButton}>\n            <ArrowBackIcon />\n          </IconButton>\n          <div>\n            <IconButton className={classes.printIcon} onClick={printReport}>\n              <PrintIcon />\n            </IconButton>\n            <a\n              download=\"心理评估报告单\"\n              href={`data:application/pdf;base64,${pdfData}`}\n              title=\"下载心理评估报告单\"\n            >\n              <IconButton className={classes.downloadButton}>\n                <CloudDownloadIcon />\n              </IconButton>\n            </a>\n          </div>\n        </div>\n        <Divider />\n      </div>\n      <div className={classes.root}>\n        <Document\n          file={`data:application/pdf;base64,${pdfData}`}\n          loading={<div></div>}\n          className={classes.pdfViewer}\n          onLoadSuccess={onDocumentLoadSuccess}\n        >\n          {Array.from(new Array(numPages), (el, index) => (\n            <Paper elevation={3} className={classes.paper} key={index}>\n              <Page\n                pageNumber={index + 1}\n                loading={<></>}\n                renderMode=\"svg\"\n                width={\n                  document.getElementById(\"root\")\n                    ? (document.getElementById(\"root\")!.offsetWidth > 750\n                        ? document.getElementById(\"root\")!.offsetWidth - 240\n                        : document.getElementById(\"root\")!.offsetWidth) * 0.8\n                    : 1000\n                }\n              />\n            </Paper>\n          ))}\n        </Document>\n      </div>\n    </>\n  );\n};\n","import { makeStyles, Theme, createStyles, Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport HomeIcon from \"@material-ui/icons/Home\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    header: {\n      overflow: \"hidden\",\n    },\n    actionContainer: {\n      float: \"right\",\n      paddingRight: 10,\n      paddingTop: 10,\n      fontSize: \"0.875rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n  })\n);\nexport const ReturnToHomeHeader = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.header}>\n      <span className={classes.actionContainer}>\n        <Link to=\"/\">\n          <Button color=\"secondary\" startIcon={<HomeIcon />}>\n            返回主页\n          </Button>\n        </Link>\n      </span>\n    </div>\n  );\n};\n","import React, { useEffect, useRef } from \"react\";\nimport Chart, { ChartDataSets } from \"chart.js\";\nimport \"chartjs-plugin-datalabels\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core\";\n\ninterface Props {\n  labelList: string[];\n  dataList?: number[];\n  multipleDataList?: ChartDataSets[];\n  showLabel: boolean;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    canvasContainer: {\n      width: 550,\n      height: 400,\n    },\n  })\n);\n\nexport const LineChart = ({\n  labelList,\n  dataList,\n  multipleDataList,\n  showLabel,\n}: Props) => {\n  const classes = useStyles();\n  const chartRef = useRef<HTMLCanvasElement>(null);\n  const init = () => {\n    if (chartRef.current) {\n      const lineChart = chartRef.current.getContext(\"2d\");\n      if (lineChart)\n        new Chart(lineChart, {\n          type: \"line\",\n          data: {\n            //Bring in data\n            labels: labelList,\n            datasets: multipleDataList\n              ? multipleDataList\n              : [\n                  {\n                    label: \"得分\",\n                    data: dataList,\n                    borderColor: \"#0d47a1\",\n                    backgroundColor: \"#bbdefb\",\n                    fill: false,\n                    lineTension: 0,\n                  },\n                ],\n          },\n          options: {\n            tooltips: {\n              mode: \"index\",\n              intersect: false,\n            },\n            hover: {\n              mode: \"nearest\",\n              intersect: true,\n            },\n            maintainAspectRatio: false,\n            responsive: true,\n            scales: {\n              yAxes: [\n                {\n                  ticks: {\n                    beginAtZero: true,\n                  },\n                },\n              ],\n            },\n            plugins: {\n              datalabels: {\n                anchor: \"start\",\n                align: \"top\",\n                formatter: Math.round,\n                display: showLabel ? true : false,\n              },\n            },\n          },\n        });\n    }\n  };\n  const initRef = useRef(init);\n  useEffect(() => {\n    initRef.current();\n  }, []);\n  return (\n    <div className={classes.canvasContainer}>\n      <canvas id=\"line-chart\" ref={chartRef} />\n    </div>\n  );\n};\n","export const EYSCENCK_FORM_NAME = \"艾森克个性测试（EPQ）\";\nexport const EYSCENCK_CHILDREN_FORM_NAME = \"艾森克个性测试儿童版（EPQ）\";\nexport const SCL_90_NAME = \"90项症状清单（SCL-90）\";\nexport const YAML_BROWN_FORM_KEY = \"yale-brown\";\nexport const PSSS_FORM_KEY = \"psss\";\nexport const MDQ_FORM_KEY = \"mdq\";\nexport const PSQI_FORM_KEY = \"psqi\";\nexport const PHCSS_FORM_KEY = \"phcss\";\n","import {\n  Button,\n  // createStyles,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  // makeStyles,\n  // Theme,\n} from \"@material-ui/core\";\nimport React, { useMemo, useState } from \"react\";\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport {\n  EysenckFormResult,\n  MdqResult,\n  PsqiResult,\n  PsssResult,\n  YamlBrownResult,\n  PhcssResult,\n} from \"./type\";\nimport { ChartDataSets } from \"chart.js\";\nimport {\n  EYSCENCK_CHILDREN_FORM_NAME,\n  EYSCENCK_FORM_NAME,\n  MDQ_FORM_KEY,\n  PHCSS_FORM_KEY,\n  PSQI_FORM_KEY,\n  PSSS_FORM_KEY,\n  SCL_90_NAME,\n  YAML_BROWN_FORM_KEY,\n} from \"../../utils/constants\";\nimport { FormResult } from \"../../../sections\";\nimport { LineChart } from \"..\";\n\n// const useStyles = makeStyles((theme: Theme) => createStyles({}));\n\ninterface Props {\n  formResultList: FormResult[];\n  formName: string;\n  formKey: string;\n}\n\nconst HIDE_LABEL_FORMS = [EYSCENCK_FORM_NAME, EYSCENCK_CHILDREN_FORM_NAME];\nconst HIDE_LABEL_KEYS: string[] = [];\n\nexport const LineChartPopOver = (props: Props) => {\n  const { formResultList, formName, formKey } = props;\n  const fillInDateList = useMemo(\n    () => formResultList.map((formResult) => formResult.fillInDate),\n    [formResultList]\n  );\n  const resultList = useMemo(() => {\n    if (formName === SCL_90_NAME) {\n      return formResultList.map((formResult) =>\n        Number(JSON.parse(formResult.result).total)\n      );\n    }\n    return formResultList.map((formResult) => Number(formResult.result));\n  }, [formResultList, formName]);\n  const multipleDataList: undefined | ChartDataSets[] = useMemo(() => {\n    if (\n      formName === EYSCENCK_FORM_NAME ||\n      formName === EYSCENCK_CHILDREN_FORM_NAME\n    ) {\n      const eArray = formResultList.map((formResult) => {\n        const resultObject: EysenckFormResult = JSON.parse(formResult.result);\n        return Number(resultObject.eTScore);\n      });\n      const pArray = formResultList.map((formResult) => {\n        const resultObject: EysenckFormResult = JSON.parse(formResult.result);\n        return Number(resultObject.pTScore);\n      });\n      const nArray = formResultList.map((formResult) => {\n        const resultObject: EysenckFormResult = JSON.parse(formResult.result);\n        return Number(resultObject.nTScore);\n      });\n      const lArray = formResultList.map((formResult) => {\n        const resultObject: EysenckFormResult = JSON.parse(formResult.result);\n        return Number(resultObject.lTScore);\n      });\n      return [\n        {\n          label: \"E量表得分\",\n          data: eArray,\n          borderColor: \"#0d47a1\",\n          backgroundColor: \"#0d47a1\",\n          lineTension: 0,\n          fill: false,\n        },\n        {\n          label: \"P量表得分\",\n          data: pArray,\n          borderColor: \"#4caf50\",\n          backgroundColor: \"#4caf50\",\n          fill: false,\n          lineTension: 0,\n        },\n        {\n          label: \"N量表得分\",\n          data: nArray,\n          borderColor: \"#ffeb3b\",\n          backgroundColor: \"#ffeb3b\",\n          fill: false,\n          lineTension: 0,\n        },\n        {\n          label: \"L量表得分\",\n          data: lArray,\n          borderColor: \"#d32f2f\",\n          backgroundColor: \"#d32f2f\",\n          fill: false,\n          lineTension: 0,\n        },\n      ];\n    } else if (formKey === YAML_BROWN_FORM_KEY) {\n      const mindArray = formResultList.map((formResult) => {\n        const resultObject: YamlBrownResult = JSON.parse(formResult.result);\n        return resultObject.yaleBrownMind;\n      });\n      const behaviorArray = formResultList.map((formResult) => {\n        const resultObject: YamlBrownResult = JSON.parse(formResult.result);\n        return resultObject.yaleBrownBehavior;\n      });\n      const totalArray = formResultList.map((formResult) => {\n        const resultObject: YamlBrownResult = JSON.parse(formResult.result);\n        return resultObject.yaleBrownTotal;\n      });\n      return [\n        {\n          label: \"强迫思维部分分数\",\n          data: mindArray,\n          borderColor: \"#0d47a1\",\n          backgroundColor: \"#0d47a1\",\n          lineTension: 0,\n          fill: false,\n        },\n        {\n          label: \"强迫行为部分分数\",\n          data: behaviorArray,\n          borderColor: \"#4caf50\",\n          backgroundColor: \"#4caf50\",\n          fill: false,\n          lineTension: 0,\n        },\n        {\n          label: \"两部分总分\",\n          data: totalArray,\n          borderColor: \"#d32f2f\",\n          backgroundColor: \"#d32f2f\",\n          fill: false,\n          lineTension: 0,\n        },\n      ];\n    } else if (formKey === PSSS_FORM_KEY) {\n      const pArray = formResultList.map((formResult) => {\n        const resultObject: PsssResult = JSON.parse(formResult.result);\n        return resultObject.psssP;\n      });\n      const sArray = formResultList.map((formResult) => {\n        const resultObject: PsssResult = JSON.parse(formResult.result);\n        return resultObject.psssS;\n      });\n      const totalArray = formResultList.map((formResult) => {\n        const resultObject: PsssResult = JSON.parse(formResult.result);\n        return resultObject.psssTotal;\n      });\n      return [\n        {\n          label: \"心理（P）因子分数\",\n          data: pArray,\n          borderColor: \"#0d47a1\",\n          backgroundColor: \"#0d47a1\",\n          lineTension: 0,\n          fill: false,\n        },\n        {\n          label: \"躯体（S）因子分数\",\n          data: sArray,\n          borderColor: \"#4caf50\",\n          backgroundColor: \"#4caf50\",\n          fill: false,\n          lineTension: 0,\n        },\n        {\n          label: \"总分\",\n          data: totalArray,\n          borderColor: \"#d32f2f\",\n          backgroundColor: \"#d32f2f\",\n          fill: false,\n          lineTension: 0,\n        },\n      ];\n    } else if (formKey === MDQ_FORM_KEY) {\n      const totalArray = formResultList.map((formResult) => {\n        const resultObject: MdqResult = JSON.parse(formResult.result);\n        return resultObject.mdqTotal;\n      });\n      return [\n        {\n          label: \"总分\",\n          data: totalArray,\n          borderColor: \"#d32f2f\",\n          backgroundColor: \"#d32f2f\",\n          fill: false,\n          lineTension: 0,\n        },\n      ];\n    } else if (formKey === PSQI_FORM_KEY) {\n      const totalArray = formResultList.map((formResult) => {\n        const resultObject: PsqiResult = JSON.parse(formResult.result);\n        return resultObject.psqiTotal;\n      });\n      // const aArray = formResultList.map((formResult) => {\n      //   const resultObject: PsqiResult = JSON.parse(formResult.result);\n      //   return resultObject.psqiA;\n      // });\n      // const bArray = formResultList.map((formResult) => {\n      //   const resultObject: PsqiResult = JSON.parse(formResult.result);\n      //   return resultObject.psqiB;\n      // });\n      // const cArray = formResultList.map((formResult) => {\n      //   const resultObject: PsqiResult = JSON.parse(formResult.result);\n      //   return resultObject.psqiC;\n      // });\n      // const dArray = formResultList.map((formResult) => {\n      //   const resultObject: PsqiResult = JSON.parse(formResult.result);\n      //   return resultObject.psqiD;\n      // });\n      // const eArray = formResultList.map((formResult) => {\n      //   const resultObject: PsqiResult = JSON.parse(formResult.result);\n      //   return resultObject.psqiE;\n      // });\n      // const fArray = formResultList.map((formResult) => {\n      //   const resultObject: PsqiResult = JSON.parse(formResult.result);\n      //   return resultObject.psqiF;\n      // });\n      // const gArray = formResultList.map((formResult) => {\n      //   const resultObject: PsqiResult = JSON.parse(formResult.result);\n      //   return resultObject.psqiG;\n      // });\n      return [\n        {\n          label: \"总分\",\n          data: totalArray,\n          borderColor: \"#d32f2f\",\n          backgroundColor: \"#d32f2f\",\n          fill: false,\n          lineTension: 0,\n        },\n        // {\n        //   label: \"因子A（主观睡眠质量）\",\n        //   data: aArray,\n        //   borderColor: \"#ffeb3b\",\n        //   backgroundColor: \"#ffeb3b\",\n        //   fill: false,\n        //   lineTension: 0,\n        // },\n        // {\n        //   label: \"因子B（睡眠潜伏期）\",\n        //   data: bArray,\n        //   borderColor: \"#4caf50\",\n        //   backgroundColor: \"#4caf50\",\n        //   fill: false,\n        //   lineTension: 0,\n        // },\n        // {\n        //   label: \"因子C（睡眠持续性）\",\n        //   data: cArray,\n        //   borderColor: \"#0d47a1\",\n        //   backgroundColor: \"#0d47a1\",\n        //   fill: false,\n        //   lineTension: 0,\n        // },\n        // {\n        //   label: \"因子D（习惯性睡眠效率）\",\n        //   data: dArray,\n        //   borderColor: \"#9E9E9E\",\n        //   backgroundColor: \"#9E9E9E\",\n        //   fill: false,\n        //   lineTension: 0,\n        // },\n        // {\n        //   label: \"因子E（睡眠紊乱\",\n        //   data: eArray,\n        //   borderColor: \"#FF5722\",\n        //   backgroundColor: \"#FF5722\",\n        //   fill: false,\n        //   lineTension: 0,\n        // },\n        // {\n        //   label: \"因子F（使用睡眠药物）\",\n        //   data: fArray,\n        //   borderColor: \"#26A69A\",\n        //   backgroundColor: \"#26A69A\",\n        //   fill: false,\n        //   lineTension: 0,\n        // },\n        // {\n        //   label: \"因子G（白天功能紊乱）\",\n        //   data: gArray,\n        //   borderColor: \"#4DD0E1\",\n        //   backgroundColor: \"#4DD0E1\",\n        //   fill: false,\n        //   lineTension: 0,\n        // },\n      ];\n    } else if (formKey === PHCSS_FORM_KEY) {\n      const totalArray = formResultList.map((formResult) => {\n        const resultObject: PhcssResult = JSON.parse(formResult.result);\n        return resultObject.phcssTotal;\n      });\n      return [\n        {\n          label: \"总分\",\n          data: totalArray,\n          borderColor: \"#d32f2f\",\n          backgroundColor: \"#d32f2f\",\n          fill: false,\n          lineTension: 0,\n        },\n      ];\n    }\n    return undefined;\n  }, [formKey, formName, formResultList]);\n  let showLabel = true;\n  if (\n    HIDE_LABEL_FORMS.includes(formName) ||\n    HIDE_LABEL_KEYS.includes(formKey)\n  ) {\n    showLabel = false;\n  }\n  // const classes = useStyles();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const handleCloseDialog = () => {\n    setIsDialogOpen(false);\n  };\n  const openDialog = () => {\n    setIsDialogOpen(true);\n  };\n  return (\n    <div>\n      <div>\n        <Button\n          startIcon={<EqualizerIcon />}\n          size=\"small\"\n          color=\"primary\"\n          disabled={formResultList.length <= 1}\n          onClick={openDialog}\n        >\n          趋势\n        </Button>\n      </div>\n      <Dialog onClose={handleCloseDialog} open={isDialogOpen}>\n        <DialogTitle>{formName}分数趋势</DialogTitle>\n        <DialogContent>\n          <LineChart\n            labelList={fillInDateList}\n            dataList={resultList}\n            multipleDataList={multipleDataList}\n            showLabel={showLabel}\n          />\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo.bcf589ff.png\";","import { useMutation } from \"@apollo/client\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  createStyles,\n  makeStyles,\n  TextField,\n  Theme,\n} from \"@material-ui/core\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { ErrorIndicator, LoadingIndicator } from \"../../lib/components\";\nimport { DOCTOR_LOG_IN } from \"../../lib/graphql/mutations\";\nimport {\n  DoctorLogIn,\n  DoctorLogInVariables,\n} from \"../../lib/graphql/mutations/DoctorLogIn/__generated__/DoctorLogIn\";\n// import {\n//   LogIn as LogInData,\n//   LogInVariables,\n// } from \"../../lib/graphql/mutations/Login/__generated__/LogIn\";\nimport { Doctor, Viewer } from \"../../lib/type\";\nimport logo from \"../AppHeader/assets/logo.png\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    logInCard: {\n      borderRadius: 8,\n      width: \"min(450px, 90%)\",\n      margin: \"0 auto 0\",\n    },\n    logInText: {\n      fontSize: \"1.5rem\",\n      textAlign: \"center\",\n      marginBottom: 20,\n      marginTop: 25,\n    },\n    promptText: {\n      marginBottom: 24,\n      fontSize: \"1rem\",\n      textAlign: \"center\",\n    },\n    input: {\n      width: \"100%\",\n    },\n    inputContainer: {\n      margin: \"0 40px\",\n    },\n    userNameInput: {\n      marginBottom: 15,\n    },\n    passwordInput: {\n      marginBottom: 30,\n    },\n    buttonContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n    logo: {\n      height: 92,\n    },\n    logoContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n    pageContainer: {\n      backgroundColor: \"#f5f5f5\",\n      width: \"100%\",\n      height: \"100%\",\n    },\n    topPadding: {\n      height: \"min(100px, 30%)\",\n    },\n  })\n);\n\ninterface AccountInfo {\n  userName: string;\n  password: string;\n}\n\nconst initialAccountInfo = {\n  userName: \"\",\n  password: \"\",\n};\n\ninterface Props {\n  isAuthorized: boolean;\n  setViewer: (viewer: Viewer) => void;\n  setDoctor: (doctor: Doctor) => void;\n  doctor: Doctor;\n}\n\nexport const Login = ({\n  isAuthorized,\n  setViewer,\n  setDoctor,\n  doctor,\n}: Props) => {\n  const classes = useStyles();\n  // const [logIn] = useMutation<LogInData, LogInVariables>(LOG_IN, {\n  //   onCompleted: (data) => {\n  //     if (data && data.logIn && data.logIn.token) {\n  //       setViewer(data.logIn);\n  //     }\n  //   },\n  //   onError: (error) => {\n  //     setIsLogInErrorShown(true);\n  //   },\n  // });\n  // const logInRef = useRef(logIn);\n  const [doctorLogIn] = useMutation<DoctorLogIn, DoctorLogInVariables>(\n    DOCTOR_LOG_IN,\n    {\n      onCompleted: (data) => {\n        if (data && data.doctorLogIn) {\n          const { name, userName, didRequest } = data.doctorLogIn;\n          setDoctor({\n            name,\n            userName,\n            didRequest,\n          });\n          setIsRedo(false);\n        }\n      },\n      onError: (error) => {\n        setIsLogInErrorShown(true);\n      },\n    }\n  );\n  const doctorLoginRef = useRef(doctorLogIn);\n  const [accountInfo, setAccountInfo] = useState<AccountInfo>(\n    initialAccountInfo\n  );\n  const [isNameAndPasswordValidated, setIsNameAndPasswordValidated] = useState(\n    false\n  );\n  const [isLogInErrorShown, setIsLogInErrorShown] = useState(false);\n  const handleKeyPress = (event: KeyboardEvent) => {\n    if (event.key === \"Enter\") {\n      logInButtonOnClick();\n    }\n  };\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyPress);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  });\n  const [isRedo, setIsRedo] = useState(true);\n  const detectRedoRef = useRef(() => {\n    if (\n      history.location.state &&\n      history.location.state.from.pathname === \"/doctor\"\n    ) {\n      setIsRedo(true);\n    } else {\n      setIsRedo(false);\n    }\n  });\n\n  useEffect(() => {\n    detectRedoRef.current();\n  }, []);\n  const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setAccountInfo({ ...accountInfo, userName: e.target.value });\n  };\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setAccountInfo({ ...accountInfo, password: e.target.value });\n  };\n  const logInButtonOnClick = () => {\n    setIsNameAndPasswordValidated(true);\n    if (accountInfo.userName && accountInfo.password)\n      doctorLoginRef.current({\n        variables: {\n          input: {\n            userName: accountInfo.userName,\n            password: accountInfo.password,\n          },\n        },\n      });\n  };\n  const history = useHistory<\n    { from: Location; redo: boolean | undefined } | undefined\n  >();\n  const isDoctor =\n    history.location.state &&\n    history.location.state.from.pathname.includes(\"doctor\")\n      ? true\n      : false;\n  if (isAuthorized) {\n    // let redirectUrl = \"/user\";\n    // if (history.location.state) {\n    //   redirectUrl = history.location.state.from.pathname;\n    // }\n    if (!isRedo) {\n      if (isDoctor) {\n        if (!doctor.userName) {\n          return <LoadingIndicator />;\n        } else {\n          return <Redirect to={`/doctor/${doctor.userName}`} />;\n        }\n      }\n      return <Redirect to=\"/user\" />;\n    }\n  }\n\n  return (\n    <div className={classes.pageContainer}>\n      <div className={classes.topPadding} />\n      <Card className={classes.logInCard}>\n        <CardContent>\n          <div className={classes.logoContainer}>\n            <img src={logo} className={classes.logo} alt=\"医院标志\" />\n          </div>\n          <div className={classes.logInText}>\n            {isDoctor ? \"医生端\" : \"用户端\"}\n          </div>\n          <div className={classes.promptText}>请输入医生的用户名和密码</div>\n          <form>\n            <div className={classes.inputContainer}>\n              <TextField\n                autoFocus\n                className={classes.input + \" \" + classes.userNameInput}\n                color=\"primary\"\n                value={accountInfo.userName}\n                label=\"用户名\"\n                onChange={handleNameChange}\n                helperText={\n                  isNameAndPasswordValidated && !accountInfo.userName\n                    ? \"请输入您的用户名\"\n                    : undefined\n                }\n                error={\n                  isNameAndPasswordValidated && !accountInfo.userName\n                    ? true\n                    : undefined\n                }\n                inputProps={{ \"aira-label\": \"用户名\" }}\n              />\n              <TextField\n                className={classes.input + \" \" + classes.passwordInput}\n                color=\"primary\"\n                value={accountInfo.password}\n                label=\"密码\"\n                helperText={\n                  isNameAndPasswordValidated && !accountInfo.password\n                    ? \"请输入您的密码\"\n                    : undefined\n                }\n                error={\n                  isNameAndPasswordValidated && !accountInfo.password\n                    ? true\n                    : undefined\n                }\n                onChange={handlePasswordChange}\n                type=\"password\"\n                inputProps={{ \"aira-label\": \"密码\" }}\n              />\n            </div>\n            <div className={classes.buttonContainer}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={logInButtonOnClick}\n              >\n                登录\n              </Button>\n            </div>\n          </form>\n        </CardContent>\n      </Card>\n      <ErrorIndicator\n        showError={isLogInErrorShown}\n        setShowError={setIsLogInErrorShown}\n        errorMessage={\"用户名或密码不正确！\"}\n      />\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/cardIcon.2b436e10.png\";","import { gql } from \"@apollo/client\";\n\nexport const QUESTIONNAIRE_LIST = gql`\n  query QuestionnaireList($isReport: Boolean!) {\n    questionnaireList(isReport: $isReport) {\n      name\n      description\n      id\n      done\n      displayedFillInDate\n      userAnswerId\n      result\n      key\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const QUESTIONNAIRE_CONTENT = gql`\n  query QuestionnaireContent($id: String!) {\n    questionnaire(id: $id) {\n      instruction\n      name\n      questions {\n        choices\n        content\n        parent\n      }\n      key\n    }\n    partialAnswer(questionnaireId: $id) {\n      answers\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const REPORT = gql`\n  query Report($userAnswerIds: [String!]!) {\n    report(userAnswerIds: $userAnswerIds) {\n      pdf\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const REPORT_FOR_ADMIN = gql`\n  query ReportForAdmin($userId: String, $userAnswerIds: [String!]!) {\n    reportForAdmin(userId: $userId, userAnswerIds: $userAnswerIds) {\n      pdf\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const DOCTOR_LIST = gql`\n  query DoctorList($limit: Int!, $currentPageIndex: Int!) {\n    doctorList(limit: $limit, currentPageIndex: $currentPageIndex) {\n      total\n      admins {\n        name\n        userName\n      }\n    }\n  }\n`;\n","// Error dialog for EPQ (adult version).\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface Props {\n  isOpen: boolean;\n  handleClose: () => void;\n  goToLogInPage: () => void;\n  age?: null | number;\n  gender?: null | string;\n}\n\nexport const EnterGenderAndAgeDialog = ({\n  isOpen,\n  handleClose,\n  goToLogInPage,\n  age,\n  gender,\n}: Props) => {\n  return (\n    <Dialog open={isOpen} onClose={handleClose}>\n      <DialogTitle>\n        {!age || (age >= 16 && !gender)\n          ? \"请您完善信息\"\n          : age >= 7 && age < 16\n          ? \"请使用儿童版量表\"\n          : \"年龄不符合条件\"}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {(!age || !gender) && \"请您填写性别和年龄信息。\"}\n          {age !== undefined && age !== null && age < 16\n            ? \"填写该量表最小年龄为16岁。\"\n            : null}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={!age || age >= 16 ? goToLogInPage : handleClose}\n          color=\"primary\"\n          autoFocus\n        >\n          确定\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","// Error dialog for EPQ (children version).\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface Props {\n  isOpen: boolean;\n  handleClose: () => void;\n  goToLogInPage: () => void;\n  age?: null | number;\n  gender?: null | string;\n}\n\nexport const ChildrenEnterGenderAndAgeDialog = ({\n  isOpen,\n  handleClose,\n  goToLogInPage,\n  age,\n  gender,\n}: Props) => {\n  return (\n    <Dialog open={isOpen} onClose={handleClose}>\n      <DialogTitle>\n        {!age || (age < 16 && age > 7 && !gender)\n          ? \"请您完善信息\"\n          : age >= 16\n          ? \"请使用成人版量表\"\n          : \"年龄不符合条件\"}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {(!age || !gender) && \"请您填写性别和年龄信息。\"}\n          {age !== undefined && age !== null && (age >= 16 || age < 7)\n            ? \"填写该量表年龄应在7岁到15岁之间。\"\n            : null}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={\n            !age || !(age >= 16 || age < 7) ? goToLogInPage : handleClose\n          }\n          color=\"primary\"\n          autoFocus\n        >\n          确定\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","// Error dialog for EPQ (children version).\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface Props {\n  isOpen: boolean;\n  handleClose: () => void;\n  goToLogInPage: () => void;\n  age?: null | number;\n  gender?: null | string;\n}\n\nexport const PhcssGenderAndAgeDialog = ({\n  isOpen,\n  handleClose,\n  goToLogInPage,\n  age,\n  gender,\n}: Props) => {\n  return (\n    <Dialog open={isOpen} onClose={handleClose}>\n      <DialogTitle>\n        {!age || (age < 17 && age > 7 && !gender)\n          ? \"请您完善信息\"\n          : \"年龄不符合条件\"}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {(!age || !gender) && \"请您填写性别和年龄信息。\"}\n          {age !== undefined && age !== null && (age >= 17 || age <= 7)\n            ? \"填写该量表年龄应在8岁到16岁之间。\"\n            : null}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={\n            !age || !(age >= 17 || age <= 7) ? goToLogInPage : handleClose\n          }\n          color=\"primary\"\n          autoFocus\n        >\n          确定\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import { useQuery } from \"@apollo/client\";\nimport {\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  createStyles,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ListSubheader,\n  makeStyles,\n  Theme,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport indigo from \"@material-ui/core/colors/indigo\";\nimport React, { useMemo, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport CardIcon from \"./assets/cardIcon.png\";\nimport {\n  QuestionnaireList as QuestionnaireListData,\n  QuestionnaireListVariables,\n  QuestionnaireList_questionnaireList as QuestionnaireData,\n} from \"../../lib/graphql/queries/QuestionnaireList/__generated__/QuestionnaireList\";\nimport { QUESTIONNAIRE_LIST } from \"../../lib/graphql/queries\";\nimport { LineChartPopOver, LoadingIndicator } from \"../../lib/components\";\nimport { Patient } from \"../../lib/type\";\nimport {\n  EYSCENCK_CHILDREN_FORM_NAME,\n  EYSCENCK_FORM_NAME,\n  PHCSS_FORM_KEY,\n} from \"../../lib/utils/constants\";\nimport { EnterGenderAndAgeDialog, PhcssGenderAndAgeDialog } from \"./components\";\nimport { ChildrenEnterGenderAndAgeDialog } from \"./components/ChildrenEnterGenderAndAgeDialog\";\n\nconst CARD_WIDTH = 250;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    content: {\n      padding: \"5px 10px\",\n    },\n    listName: {\n      fontSize: \"1rem\",\n      color: \"rgba(0, 0, 0, .654)\",\n      marginTop: 20,\n      marginBottom: 20,\n    },\n    root: {\n      display: \"grid\",\n      gridTemplateColumns: `repeat(auto-fill, ${CARD_WIDTH}px)`,\n      rowGap: \"20px\",\n      columnGap: \"20px\",\n    },\n    card: {\n      height: 212,\n    },\n    cardActionArea: {\n      width: CARD_WIDTH,\n      cursor: \"pointer\",\n      \"&:hover\": {\n        backgroundColor: indigo[50],\n      },\n      height: 160,\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"flex-start\",\n    },\n    cardIcon: {\n      width: 40,\n      height: 40,\n    },\n    unfinishedText: {\n      fontSize: \"0.8125rem\",\n      color: \"rgba(0, 0, 0, .54)\",\n      margin: \"5px 0\",\n    },\n    finishedText: {\n      fontSize: \"0.8125rem\",\n      color: \"#4caf50\",\n      margin: \"5px 0\",\n    },\n    questionnaireName: {\n      fontSize: \"1rem\",\n      color: \"#111\",\n      lineHeight: \"1.5rem\",\n    },\n    cardActionContainer: {\n      paddingLeft: 20,\n      height: 50,\n    },\n    noOverflow: {\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n    },\n  })\n);\n\nexport type FormResult = { result: string; fillInDate: string };\n\ninterface Props {\n  patient: Patient;\n}\n\nexport const Home = ({ patient }: Props) => {\n  const isSmallScreen = useMediaQuery(\"(max-width:780px)\");\n  const classes = useStyles();\n  const { loading, data } = useQuery<\n    QuestionnaireListData,\n    QuestionnaireListVariables\n  >(QUESTIONNAIRE_LIST, {\n    fetchPolicy: \"no-cache\",\n    variables: { isReport: false },\n  });\n  const listData: {\n    uniqueFormList: QuestionnaireData[];\n    resultList: FormResult[][];\n  } = useMemo(() => {\n    if (!data) return { uniqueFormList: [], resultList: [] as FormResult[][] };\n    const formList: QuestionnaireData[] = [];\n    const resultList: FormResult[][] = [];\n    const formSet: Set<string> = new Set();\n    data.questionnaireList.forEach((questionnaire) => {\n      if (!formSet.has(questionnaire.id)) {\n        formSet.add(questionnaire.id);\n        formList.push(questionnaire);\n        if (questionnaire.result && questionnaire.displayedFillInDate) {\n          resultList.push([\n            {\n              result: questionnaire.result,\n              fillInDate: questionnaire.displayedFillInDate,\n            },\n          ]);\n        } else {\n          resultList.push([] as FormResult[]);\n        }\n      } else if (questionnaire.result && questionnaire.displayedFillInDate) {\n        let index = 0;\n        while (index <= formList.length) {\n          if (formList[index].id === questionnaire.id) {\n            resultList[index].push({\n              result: questionnaire.result,\n              fillInDate: questionnaire.displayedFillInDate,\n            });\n            break;\n          }\n          index += 1;\n        }\n      }\n    });\n    return { uniqueFormList: formList, resultList };\n  }, [data]);\n  const { uniqueFormList, resultList } = listData;\n  const [isGenderAndAgeDialogOpen, setIsGenderAndAgeDialogOpen] = useState(\n    false\n  );\n  const [\n    isChildrenGenderAndAgeDialogOpen,\n    setIsChildrenGenderAndAgeDialogOpen,\n  ] = useState(false);\n  const [isPhcssDialogOpen, setIsPhcssDialogOpen] = useState(false);\n  const closeGenderAndAgeDialog = () => {\n    setIsGenderAndAgeDialogOpen(false);\n  };\n  const closeChildrenGenderAndAgeDialog = () => {\n    setIsChildrenGenderAndAgeDialogOpen(false);\n  };\n  const closePhcssDialog = () => {\n    setIsPhcssDialogOpen(false);\n  };\n  const goToLogInPage = () => {\n    history.push(`/user/login?userName=${patient.userName}`);\n  };\n  const history = useHistory();\n  if (loading) {\n    return <LoadingIndicator />;\n  }\n  if (data) {\n    const questionnaireName = (questionnaire: QuestionnaireData) => {\n      const defaultReturn = (\n        <span className={classes.questionnaireName}>{questionnaire.name}</span>\n      );\n      // Note that this is Chinese parentheses!\n      if (!/^.*（.*）$/.test(questionnaire.name)) {\n        return defaultReturn;\n      } else {\n        const nameMatchFormResult = questionnaire.name.match(/^.*（/);\n        const abbreviationMatchFormResult = questionnaire.name.match(/（.*）/);\n        if (nameMatchFormResult && abbreviationMatchFormResult) {\n          const name = nameMatchFormResult[0].substring(\n            0,\n            nameMatchFormResult[0].length - 1\n          );\n          const abbreviation = abbreviationMatchFormResult[0];\n          return (\n            <span\n              className={classes.questionnaireName + \" \" + classes.noOverflow}\n            >\n              <span className={classes.noOverflow}>{name}</span>\n              <br />\n              {abbreviation.replace(\"（\", \"(\").replace(\"）\", \")\")}\n            </span>\n          );\n        }\n        return defaultReturn;\n      }\n    };\n    const goToFormPage = (\n      formId: string,\n      formName: string,\n      formKey: string\n    ) => {\n      if (formName === EYSCENCK_FORM_NAME) {\n        if (!patient.gender || !patient.age || patient.age < 16) {\n          setIsGenderAndAgeDialogOpen(true);\n          return;\n        }\n      } else if (formName === EYSCENCK_CHILDREN_FORM_NAME) {\n        if (\n          !patient.gender ||\n          !patient.age ||\n          patient.age >= 16 ||\n          patient.age <= 6\n        ) {\n          setIsChildrenGenderAndAgeDialogOpen(true);\n          return;\n        }\n      } else if (formKey === PHCSS_FORM_KEY) {\n        if (\n          !patient.gender ||\n          !patient.age ||\n          patient.age >= 17 || // Age should be a number between 8 - 16.\n          patient.age <= 7\n        ) {\n          setIsPhcssDialogOpen(true);\n          return;\n        }\n      }\n      history.push(`/user/form?id=${formId}`);\n    };\n    const finishStatus = (questionnaire: QuestionnaireData) => (\n      <span\n        className={\n          questionnaire.done ? classes.finishedText : classes.unfinishedText\n        }\n      >\n        {questionnaire.done ? \"已完成\" : \"未完成\"}\n      </span>\n    );\n    if (isSmallScreen) {\n      return (\n        <>\n          <List subheader={<ListSubheader>量表</ListSubheader>}>\n            {uniqueFormList.map((questionnaire, index) => (\n              <ListItem\n                button\n                onClick={() =>\n                  goToFormPage(\n                    questionnaire.id,\n                    questionnaire.name,\n                    questionnaire.key\n                  )\n                }\n                key={questionnaire.id}\n              >\n                <ListItemAvatar>\n                  <img\n                    src={CardIcon}\n                    alt=\"量表图标\"\n                    className={classes.cardIcon}\n                  />\n                </ListItemAvatar>\n                <ListItemText\n                  primary={\n                    <div className={classes.questionnaireName}>\n                      {questionnaire.name}\n                    </div>\n                  }\n                  secondary={finishStatus(questionnaire)}\n                />\n              </ListItem>\n            ))}\n          </List>\n          <EnterGenderAndAgeDialog\n            isOpen={isGenderAndAgeDialogOpen}\n            handleClose={closeGenderAndAgeDialog}\n            goToLogInPage={goToLogInPage}\n            age={patient.age}\n            gender={patient.gender}\n          />\n          <ChildrenEnterGenderAndAgeDialog\n            isOpen={isChildrenGenderAndAgeDialogOpen}\n            handleClose={closeChildrenGenderAndAgeDialog}\n            goToLogInPage={goToLogInPage}\n            age={patient.age}\n            gender={patient.gender}\n          />\n        </>\n      );\n    }\n    return (\n      <>\n        <div className={classes.content}>\n          <p className={classes.listName}>量表</p>\n          <div className={classes.root}>\n            {uniqueFormList.map((questionnaire, index) => (\n              <Card\n                variant=\"outlined\"\n                className={classes.card + \" \" + classes.noOverflow}\n                key={questionnaire.id}\n              >\n                <CardActionArea\n                  className={classes.cardActionArea}\n                  onClick={() =>\n                    goToFormPage(\n                      questionnaire.id,\n                      questionnaire.name,\n                      questionnaire.key\n                    )\n                  }\n                >\n                  <CardContent>\n                    <div>\n                      <img\n                        src={CardIcon}\n                        alt=\"量表图标\"\n                        className={classes.cardIcon}\n                      />\n                    </div>\n                    <div className={classes.noOverflow}>\n                      {questionnaireName(questionnaire)}\n                    </div>\n                    {finishStatus(questionnaire)}\n                  </CardContent>\n                </CardActionArea>\n\n                <Divider />\n\n                <CardActions className={classes.cardActionContainer}>\n                  <LineChartPopOver\n                    formResultList={resultList[index]}\n                    formName={questionnaire.name}\n                    formKey={questionnaire.key}\n                  />\n                </CardActions>\n              </Card>\n            ))}\n          </div>\n        </div>\n        <EnterGenderAndAgeDialog\n          isOpen={isGenderAndAgeDialogOpen}\n          handleClose={closeGenderAndAgeDialog}\n          goToLogInPage={goToLogInPage}\n          age={patient.age}\n          gender={patient.gender}\n        />\n        <ChildrenEnterGenderAndAgeDialog\n          isOpen={isChildrenGenderAndAgeDialogOpen}\n          handleClose={closeChildrenGenderAndAgeDialog}\n          goToLogInPage={goToLogInPage}\n          age={patient.age}\n          gender={patient.gender}\n        />\n        <PhcssGenderAndAgeDialog\n          isOpen={isPhcssDialogOpen}\n          handleClose={closePhcssDialog}\n          goToLogInPage={goToLogInPage}\n          age={patient.age}\n          gender={patient.gender}\n        />\n      </>\n    );\n  }\n  return null;\n};\n","import { gql } from \"@apollo/client\";\n\nexport const PATIENT_LOG_OUT = gql`\n  mutation PatientLogOut {\n    patientLogOut {\n      didRequest\n    }\n  }\n`;\n","import { useQuery } from \"@apollo/client\";\nimport React, { ComponentType, PropsWithChildren } from \"react\";\nimport { LoadingIndicator } from \"../../../../lib/components\";\nimport { REPORT } from \"../../../../lib/graphql/queries\";\nimport {\n  Report as ReportData,\n  ReportVariables,\n} from \"../../../../lib/graphql/queries/Report/__generated__/Report\";\n\nexport const withReportPdfData = (\n  WrappedComponent: ComponentType<\n    PropsWithChildren<{ pdfData: string; closeReport: () => void }>\n  >\n) => {\n  return ({\n    children,\n    userAnswerIds,\n    closeReport,\n  }: PropsWithChildren<{\n    userAnswerIds: string[];\n    closeReport: () => void;\n  }>) => {\n    // Get PDF data.\n    const { data, loading } = useQuery<ReportData, ReportVariables>(REPORT, {\n      variables: {\n        userAnswerIds,\n      },\n      fetchPolicy: \"no-cache\",\n    });\n\n    if (loading || !data) {\n      return <LoadingIndicator />;\n    }\n\n    if (data.report && data.report.pdf) {\n      return (\n        <WrappedComponent pdfData={data.report.pdf} closeReport={closeReport}>\n          {children}\n        </WrappedComponent>\n      );\n    }\n\n    return null;\n  };\n};\n","/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n//==============================================================\n// START Enums and Input Objects\n//==============================================================\n\nexport enum UsersFilter {\n  DATE_LATEST = \"DATE_LATEST\",\n  DATE_OLDEST = \"DATE_OLDEST\",\n}\n\nexport interface AddDiagnosisInput {\n  patientId: string;\n  diagnosis: string;\n}\n\nexport interface AddDoctorInput {\n  userName: string;\n  name: string;\n  password: string;\n}\n\nexport interface AgeRange {\n  min?: number | null;\n  max?: number | null;\n}\n\nexport interface CreateAccountInput {\n  userName: string;\n  password: string;\n  name: string;\n  education: string;\n  jobStatus: string;\n  gender: string;\n  marriageStatus: string;\n  age?: number | null;\n}\n\nexport interface DoctorLoginInput {\n  userName: string;\n  password: string;\n}\n\nexport interface LogInInput {\n  userName: string;\n  password: string;\n}\n\nexport interface SignUpDate {\n  year: number;\n  month: number;\n  day: number;\n}\n\nexport interface UserAnswerInput {\n  questionnaireId: string;\n  answers: number[];\n}\n\nexport interface UserLoginInput {\n  userName: string;\n  name: string;\n  education?: string | null;\n  jobStatus?: string | null;\n  gender?: string | null;\n  marriageStatus?: string | null;\n  age?: number | null;\n}\n\n//==============================================================\n// END Enums and Input Objects\n//==============================================================\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { AppBar, Button, Toolbar } from \"@material-ui/core\";\nimport logo from \"./assets/logo.png\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { Viewer } from \"../../lib/type\";\nimport { useMutation } from \"@apollo/client\";\nimport { DOCTOR_LOG_OUT } from \"../../lib/graphql/mutations\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport { PatientLogOut } from \"../../lib/graphql/mutations/PatientLogOut/__generated__/PatientLogOut\";\nimport { PATIENT_LOG_OUT } from \"../../lib/graphql/mutations/PatientLogOut\";\nimport { DoctorLogOut } from \"../../lib/graphql/mutations/DoctorLogOut/__generated__/doctorLogOut\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    header: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n    logo: {\n      marginRight: theme.spacing(2),\n      maxWidth: 30,\n      maxHeight: 30,\n    },\n    title: {\n      flexGrow: 1,\n      fontSize: \"1.25rem\",\n    },\n    timerHeader: {\n      overflow: \"hidden\",\n      backgroundColor: \"rgb(236, 238, 248)\",\n    },\n    actionContainer: {\n      float: \"right\",\n      paddingRight: 20,\n      paddingTop: 10,\n      fontSize: \"0.875rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n  })\n);\n\ninterface Props {\n  viewer: Viewer;\n  setViewer: (viewer: Viewer) => void;\n  type: \"doctor\" | \"user\";\n}\n\nexport const AppHeader = (props: Props) => {\n  const { viewer, setViewer, type } = props;\n  const history = useHistory();\n\n  const [width, setWidth] = React.useState(window.innerWidth);\n\n  const updateWidth = () => {\n    if (window.innerWidth !== width) setWidth(window.innerWidth);\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateWidth);\n    return () => window.removeEventListener(\"resize\", updateWidth);\n  });\n\n  const [logOut] = useMutation<DoctorLogOut>(DOCTOR_LOG_OUT, {\n    onCompleted: (data) => {\n      if (data && data.doctorLogOut.didRequest) {\n        setViewer(data.doctorLogOut);\n        sessionStorage.removeItem(\"token\");\n        console.log(\"log out successfully\");\n      }\n    },\n    onError: (error) => {\n      console.log(error);\n      console.log(\"log out failed\");\n    },\n  });\n  const [patientLogOut] = useMutation<PatientLogOut>(PATIENT_LOG_OUT, {\n    onCompleted: (data) => {\n      if (data && data.patientLogOut) {\n        setViewer(data.patientLogOut);\n        console.log(\"log out successfully\");\n      }\n    },\n    onError: (error) => {\n      console.log(error);\n      console.log(\"log out failed\");\n    },\n  });\n  const handleLogout = async () => {\n    if (type === \"doctor\") {\n      await logOut();\n      history.push(\"/doctor\");\n    } else {\n      await patientLogOut();\n      history.push(\"/user\");\n    }\n  };\n  const classes = useStyles();\n\n  return (\n    <Switch>\n      <Route path=\"/user/form\" exact />\n      <Route path=\"/\">\n        <div className={classes.root}>\n          <AppBar position=\"fixed\" className={classes.header}>\n            <Toolbar>\n              <img src={logo} alt=\"中大医院\" className={classes.logo} />\n              <div className={classes.title}>\n                {window.innerWidth >= 650\n                  ? \"东南大学附属中大医院心理健康评估系统\"\n                  : \"心理健康评估系统\"}\n              </div>\n\n              <Switch>\n                <Route path={[\"/doctor\", \"/user\"]}>\n                  {viewer && viewer.userName && (\n                    <Button\n                      color=\"inherit\"\n                      startIcon={<ExitToAppIcon />}\n                      onClick={handleLogout}\n                    >\n                      {type === \"doctor\" ? \"退出医生登录\" : \"退出系统\"}\n                    </Button>\n                  )}\n                </Route>\n              </Switch>\n            </Toolbar>\n          </AppBar>\n        </div>\n      </Route>\n    </Switch>\n  );\n};\n","import { createStyles, Divider, makeStyles, Theme } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Viewer } from \"../../../../lib/type\";\n\ninterface Props {\n  viewer: Viewer;\n}\n\nconst checkIsFieldValid = (field: string | number | undefined | null) => {\n  return field !== undefined && field !== null && field !== \"\";\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    propertyName: {\n      color: \"#5f6368\",\n      fontSize: \"0.75rem\",\n      margin: \"8px 0\",\n    },\n    propertyDivider: {\n      marginTop: 5,\n      marginBottom: 5,\n    },\n  })\n);\n\nconst fields = [\n  \"name\",\n  \"gender\",\n  \"age\",\n  \"education\",\n  \"jobStatus\",\n  \"marriageStatus\",\n] as const;\nconst displayNames = [\"姓名\", \"性别\", \"年龄\", \"教育\", \"工作\", \"婚姻\"];\nexport const PersonalInformation = (props: Props) => {\n  const classes = useStyles();\n  const { viewer } = props;\n  const validIndexes: number[] = [];\n  for (let i = 0; i < fields.length; i++) {\n    if (checkIsFieldValid(viewer[fields[i]])) {\n      validIndexes.push(i);\n    }\n  }\n  return (\n    <>\n      {validIndexes.map((validIndex, index) => (\n        <div key={`property-${index}`}>\n          <div className={classes.propertyName}>{displayNames[validIndex]}</div>\n          <div>{viewer[fields[validIndex]]}</div>\n          {index !== validIndexes.length - 1 ? (\n            <Divider className={classes.propertyDivider} />\n          ) : null}\n        </div>\n      ))}\n    </>\n  );\n};\n","import {\n  Card,\n  CardContent,\n  Chip,\n  createStyles,\n  Divider,\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  Theme,\n  Toolbar,\n} from \"@material-ui/core\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\nimport React from \"react\";\nimport { Viewer } from \"../../lib/type\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { PersonalInformation } from \"./components\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport LocalHospitalIcon from \"@material-ui/icons/LocalHospital\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport NoteIcon from \"@material-ui/icons/Note\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      \"@media (max-width:780px)\": {\n        display: \"none\",\n      },\n    },\n    personalInfoCard: {\n      margin: 5,\n      overflow: \"auto\",\n    },\n    personalInfoCardContent: {\n      \"&:last-child\": {\n        paddingBottom: 16,\n      },\n    },\n    personalInfoText: {\n      fontWeight: 400,\n      fontSize: \"1.25rem\",\n      marginBottom: 10,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    idChip: {\n      marginTop: 3,\n      marginBottom: 3,\n    },\n    adminMenu: {\n      padding: 0,\n    },\n    adminMenuHeader: {\n      height: 48,\n      display: \"flex\",\n      alignItems: \"center\",\n      fontWeight: 500,\n      fontSize: \"1.125rem\",\n      paddingLeft: 10,\n    },\n    link: {\n      color: \"#111\",\n    },\n  })\n);\n\ninterface Props {\n  viewer: Viewer;\n  type: \"doctor\" | \"user\";\n}\n\nexport const Sider = (props: Props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const goToHome = () => {\n    history.push(\"/user/home\");\n  };\n  const goToReportPage = () => {\n    history.push(\"/user/report\");\n  };\n  const goToDoctorPage = () => {\n    history.push(`/doctor/${viewer.userName}`);\n  };\n  const goToDoctorManagePage = () => {\n    history.push(`/doctor/${viewer.userName}/manage`);\n  };\n  const location = useLocation();\n  const { viewer, type } = props;\n\n  const [width, setWidth] = React.useState(window.innerWidth);\n\n  const updateWidth = () => {\n    if (window.innerWidth !== width) setWidth(window.innerWidth);\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateWidth);\n    return () => window.removeEventListener(\"resize\", updateWidth);\n  });\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      classes={{ paper: classes.drawerPaper }}\n      style={{\n        display:\n          type === \"doctor\" && window.innerWidth <= 1150 ? \"none\" : undefined,\n      }}\n    >\n      <Toolbar />\n      {type === \"doctor\" ? (\n        <>\n          <div className={classes.adminMenuHeader}>{viewer.name}医生已登入</div>\n          <Divider />\n          <List className={classes.adminMenu}>\n            <ListItem button key=\"patientInfo\" onClick={goToDoctorPage}>\n              <ListItemIcon>\n                <PeopleIcon\n                  color={\n                    location.pathname === `/doctor/${viewer.userName}`\n                      ? \"primary\"\n                      : \"inherit\"\n                  }\n                />\n              </ListItemIcon>\n              <ListItemText primary={\"病人信息\"} />\n            </ListItem>\n            <Divider />\n            <ListItem button key=\"doctorInfo\" onClick={goToDoctorManagePage}>\n              <ListItemIcon>\n                <LocalHospitalIcon\n                  color={\n                    location.pathname === `/doctor/${viewer.userName}/manage`\n                      ? \"primary\"\n                      : \"inherit\"\n                  }\n                />\n              </ListItemIcon>\n              <ListItemText primary={\"医生信息\"} />\n            </ListItem>\n            <Divider />\n            <a href=\"/user\" className={classes.link} target=\"_blank\">\n              <ListItem button key=\"doctorInfo\">\n                <ListItemIcon>\n                  <LinkIcon />\n                </ListItemIcon>\n                <ListItemText primary={\"患者端\"} />\n              </ListItem>\n            </a>\n            <Divider />\n          </List>\n        </>\n      ) : (\n        <>\n          <Card variant=\"outlined\" className={classes.personalInfoCard}>\n            <CardContent className={classes.personalInfoCardContent}>\n              <div className={classes.personalInfoText}>个人信息</div>\n              <div className={classes.idChip}>\n                <Chip\n                  size=\"small\"\n                  icon={<AssignmentIndIcon />}\n                  color=\"primary\"\n                  label={`门诊号：${viewer.userName}`}\n                  variant=\"outlined\"\n                />\n              </div>\n              <PersonalInformation viewer={viewer} />\n            </CardContent>\n          </Card>\n          <List>\n            <ListItem button key=\"form\" onClick={goToHome}>\n              <ListItemIcon>\n                <DescriptionIcon\n                  color={\n                    location.pathname === \"/user/home\" ? \"primary\" : \"inherit\"\n                  }\n                />\n              </ListItemIcon>\n              <ListItemText primary={\"量表\"} />\n            </ListItem>\n            <ListItem button key=\"report\" onClick={goToReportPage}>\n              <ListItemIcon>\n                <NoteIcon\n                  color={\n                    location.pathname === \"/user/report\" ? \"primary\" : \"inherit\"\n                  }\n                />\n              </ListItemIcon>\n              <ListItemText primary={\"报告\"} />\n            </ListItem>\n          </List>\n        </>\n      )}\n    </Drawer>\n  );\n};\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface Props {\n  totalNumber: number;\n  currentIndex: number;\n}\nconst PROGRESS_BAR_WIDTH = 100;\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: PROGRESS_BAR_WIDTH,\n      backgroundColor: \"rgba(0, 0, 0, 0.12)\",\n      display: \"flex\",\n      marginRight: 10,\n      height: 12,\n      borderRadius: 6,\n    },\n    finished: {\n      width: 0,\n      height: 12,\n      borderRadius: \"6px 0 0 6px\",\n      backgroundColor: \"#5eb8ff\",\n      maxWidth: PROGRESS_BAR_WIDTH - 6,\n    },\n    leftCircle: {\n      borderRadius: \"6px 0 0 6px\",\n    },\n    circle: {\n      height: 12,\n      width: 12,\n      backgroundColor: \"#5eb8ff\",\n    },\n    circlewrapper: {\n      overflow: \"hidden\",\n    },\n    rightCircle: {\n      borderRadius: 6,\n      backgroundColor: \"#5eb8ff\",\n    },\n    rightCircleWrapper: {\n      marginLeft: -6,\n    },\n  })\n);\n\nexport const ProgressBar = ({ totalNumber, currentIndex }: Props) => {\n  const classes = useStyles();\n  const widthOfFinishedPart =\n    (PROGRESS_BAR_WIDTH * (currentIndex + 1)) / totalNumber;\n  return (\n    <div className={classes.root}>\n      {widthOfFinishedPart > 12 ? (\n        <>\n          <div\n            className={classes.finished}\n            style={{\n              width: widthOfFinishedPart,\n            }}\n          />\n          {PROGRESS_BAR_WIDTH - widthOfFinishedPart <= 6 ? (\n            <div\n              className={\n                classes.rightCircleWrapper + \" \" + classes.circlewrapper\n              }\n              style={{ width: 12 - (PROGRESS_BAR_WIDTH - widthOfFinishedPart) }}\n            >\n              <div className={classes.rightCircle + \" \" + classes.circle} />\n            </div>\n          ) : null}\n        </>\n      ) : (\n        <div\n          className={classes.circlewrapper}\n          style={{\n            width: widthOfFinishedPart,\n          }}\n        >\n          <div className={classes.leftCircle + \" \" + classes.circle} />\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Timer as TimerIcon } from \"@material-ui/icons\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    timeNumber: {\n      marginLeft: 10,\n      userSelect: \"none\",\n      WebkitUserSelect: \"none\",\n      WebkitTouchCallout: \"none\",\n      KhtmlUserSelect: \"none\",\n      MozUserSelect: \"none\",\n      msUserSelect: \"none\",\n    },\n  })\n);\nexport const Timer = () => {\n  const classes = useStyles();\n  const [seconds, setSeconds] = useState(0);\n  useEffect(() => {\n    const interval = setTimeout(() => {\n      setSeconds(seconds + 1);\n    }, 1000);\n    return () => {\n      clearTimeout(interval);\n    };\n  }, [seconds]);\n  const hour = Math.floor(seconds / 3600);\n  const minute = Math.floor(seconds / 60);\n  const second = seconds % 60;\n  return (\n    <div className={classes.root}>\n      <TimerIcon />\n      <span className={classes.timeNumber}>{`${hour < 10 ? \"0\" + hour : hour}:${\n        minute < 10 ? \"0\" + minute : minute\n      }:${second < 10 ? \"0\" + second : second}`}</span>\n    </div>\n  );\n};\n","export const psqiValidation = (\n  currentQuestionIndex: number,\n  value: number | string,\n  setErrorMessage: (errorMessage: string) => void,\n  showError: () => void\n) => {\n  console.log(currentQuestionIndex, value);\n  if (value === undefined || value === null || value === \"\") {\n    setErrorMessage(\"未填写数值！\");\n    showError();\n    return false;\n  }\n  if (currentQuestionIndex === 0) {\n    if (value >= 24 || value < 0) {\n      setErrorMessage(\"数值不符合要求！\");\n      showError();\n      return false;\n    }\n  } else if (currentQuestionIndex === 1) {\n    if (value >= 1440 || value < 0) {\n      setErrorMessage(\"数值不符合要求！\");\n      showError();\n      return false;\n    }\n  } else if (currentQuestionIndex === 2) {\n    if (value >= 24 || value < 0) {\n      setErrorMessage(\"数值不符合要求！\");\n      showError();\n      return false;\n    }\n  } else if (currentQuestionIndex === 3) {\n    if (value < 0 || value >= 24) {\n      setErrorMessage(\"数值不符合要求！\");\n      showError();\n      return false;\n    }\n  }\n  return true;\n};\n","import { useMutation, useQuery } from \"@apollo/client\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  createStyles,\n  FormControl,\n  FormControlLabel,\n  makeStyles,\n  Radio,\n  Theme,\n  Link,\n  Fab,\n  useMediaQuery,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n} from \"@material-ui/core\";\nimport React, {\n  SyntheticEvent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { ErrorIndicator, LoadingIndicator } from \"../../lib/components\";\nimport {\n  SAVE_PARTIAL_ANSWER,\n  SAVE_USER_ANSWER,\n} from \"../../lib/graphql/mutations\";\nimport {\n  SaveUserAnswer as SaveUserAnswerData,\n  SaveUserAnswerVariables,\n} from \"../../lib/graphql/mutations/SaveUserAnswer/__generated__/SaveUserAnswer\";\nimport { QUESTIONNAIRE_CONTENT } from \"../../lib/graphql/queries\";\nimport {\n  QuestionnaireContent as QuestionnaireContentData,\n  QuestionnaireContentVariables,\n} from \"../../lib/graphql/queries/QuestionnaireContent/__generated__/QuestionnaireContent\";\nimport { ProgressBar } from \"./Components\";\nimport DirectionsRunIcon from \"@material-ui/icons/DirectionsRun\";\nimport {\n  SavePartialAnswer as SavePartialAnswerData,\n  SavePartialAnswerVariables,\n} from \"../../lib/graphql/mutations/SavePartialAnswer/__generated__/SavePartialAnswer\";\nimport { Timer } from \"./Components\";\nimport { PSQI_FORM_KEY, YAML_BROWN_FORM_KEY } from \"../../lib/utils/constants\";\nimport {\n  yaleBrownCustomization,\n  yaleBrownSkipQuestions,\n} from \"./Customization\";\nimport { PRIMARY_COLOR } from \"../..\";\nimport { psqiValidation } from \"./Customization/psqi\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formContainer: {\n      height: \"100%\",\n      width: \"100%\",\n      backgroundColor: \"#e8f1fd\",\n    },\n    form: {\n      width: 768,\n      maxWidth: \"90vw\",\n      margin: \"auto\",\n      paddingTop: 10,\n    },\n    titleCard: {\n      borderRadius: 8,\n      paddingBottom: 5,\n    },\n    titleCardColor: {\n      height: 10,\n      borderTopLeftRadius: 8,\n      borderTopRightRadius: 8,\n      backgroundColor: PRIMARY_COLOR,\n    },\n    titleCardContent: {\n      paddingTop: 5,\n      marginLeft: 5,\n      marginRight: 5,\n    },\n    titleCardMainText: {\n      fontSize: \"2rem\",\n      fontWeight: 400,\n      marginTop: 10,\n      marginBottom: 10,\n    },\n    questionCard: {\n      marginTop: 10,\n      borderRadius: 8,\n      marginBottom: 10,\n      paddingLeft: 5,\n      paddingRight: 5,\n    },\n    questionText: {\n      fontSize: \"1rem\",\n      fontWeight: 400,\n      marginBottom: 16,\n      marginTop: 10,\n      lineHeight: \"1.4rem\",\n    },\n    questionOptionText: {\n      fontSize: \"0.9rem\",\n      userSelect: \"none\",\n      WebkitUserSelect: \"none\",\n      WebkitTouchCallout: \"none\",\n      KhtmlUserSelect: \"none\",\n      MozUserSelect: \"none\",\n      msUserSelect: \"none\",\n    },\n    button: {\n      backgroundColor: \"#fff\",\n      color: PRIMARY_COLOR,\n      \"&:hover\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n    buttonWithRightMargin: {\n      marginRight: 10,\n    },\n    finishedText: {\n      fontSize: \"0.875rem\",\n      marginTop: 26,\n      marginBottom: 26,\n    },\n    homeLink: {\n      fontSize: \"0.875rem\",\n    },\n    exitButton: {\n      position: \"absolute\",\n      right: 20,\n      bottom: 20,\n      backgroundColor: \"#fff\",\n      \"&:hover\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n    timerContaner: {\n      position: \"absolute\",\n      left: 20,\n      bottom: 20,\n    },\n    footer: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n    },\n    progressWrapper: {\n      display: \"flex\",\n      alignItems: \"center\",\n      userSelect: \"none\",\n      WebkitUserSelect: \"none\",\n      WebkitTouchCallout: \"none\",\n      KhtmlUserSelect: \"none\",\n      MozUserSelect: \"none\",\n      msUserSelect: \"none\",\n    },\n    progressWrapperForSmallScreen: {\n      marginTop: 20,\n    },\n    questionParent: {\n      lineHeight: \"1.4rem\",\n      color: \"#757575\",\n    },\n    answerInput: {\n      marginRight: 10,\n      marginLeft: 10,\n    },\n  })\n);\n\nexport const Form = () => {\n  const isSmallScreen = useMediaQuery(\"(max-width:780px)\");\n  const classes = useStyles();\n  const query = new URLSearchParams(useLocation().search);\n  const id = query.get(\"id\");\n  const { loading, data } = useQuery<\n    QuestionnaireContentData,\n    QuestionnaireContentVariables\n  >(QUESTIONNAIRE_CONTENT, {\n    variables: {\n      id: id || \"\",\n    },\n    onCompleted: (data: QuestionnaireContentData) => {\n      const { partialAnswer } = data;\n      setChoiceDisabled(\n        data.questionnaire.questions.map((question) => {\n          return question.choices.map((choice) => false);\n        })\n      );\n\n      if (partialAnswer?.answers?.length) {\n        if (\n          partialAnswer.answers.length === data.questionnaire.questions.length\n        ) {\n          setIsAllowedToSubmit(true);\n        }\n        const newAnswers = {} as { [index: number]: number };\n        let unfinishedQuestionIndex: number | undefined = undefined;\n        partialAnswer.answers.forEach((answer, index) => {\n          if (answer !== -1) newAnswers[index] = answer;\n          else if (unfinishedQuestionIndex === undefined)\n            unfinishedQuestionIndex = index;\n        });\n        setAnswers(newAnswers);\n        if (unfinishedQuestionIndex === undefined)\n          setCurrentQuestionIndex(\n            Math.min(\n              partialAnswer.answers.length,\n              data.questionnaire.questions.length - 1\n            )\n          );\n        else setCurrentQuestionIndex(unfinishedQuestionIndex);\n      }\n    },\n    fetchPolicy: \"no-cache\",\n  });\n\n  const [saveUserAnswer] = useMutation<\n    SaveUserAnswerData,\n    SaveUserAnswerVariables\n  >(SAVE_USER_ANSWER, {\n    onCompleted: (data) => {\n      if (data.saveUserAnswer.didRequest) {\n        setIsDone(true);\n      }\n    },\n  });\n\n  const [savePartialAnswer] = useMutation<\n    SavePartialAnswerData,\n    SavePartialAnswerVariables\n  >(SAVE_PARTIAL_ANSWER);\n\n  const saveUserAnswerRef = useRef(saveUserAnswer);\n  const savePartialAnswerRef = useRef(savePartialAnswer);\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const autoSaveTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState<number>(0);\n  const [choiceDisabled, setChoiceDisabled] = useState<null | boolean[][]>();\n  const [answers, setAnswers] = useState<{ [index: number]: number }>({});\n  const [isDone, setIsDone] = useState(false);\n  const [isAllowedToSubmit, setIsAllowedToSubmit] = useState(false);\n  const [isNextButtonDisabled, setIsNextButtonDisabled] = useState(false);\n  const [confirmed, setConfirmed] = useState(false);\n  const history = useHistory();\n  const selectChoiceLockRef = useRef(false);\n  const [isErrorShown, setIsErrorShown] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const showError = () => {\n    setIsErrorShown(true);\n  };\n\n  const getAnswerArray = useCallback((): number[] => {\n    const questionnaire = data?.questionnaire;\n    if (!questionnaire) {\n      return [];\n    }\n    const answerArray = [];\n    for (let i = 0; i < questionnaire.questions.length; i++) {\n      if (answers[i] !== undefined) answerArray.push(answers[i]);\n      else answerArray.push(-1);\n    }\n    return answerArray;\n  }, [answers, data?.questionnaire]);\n  const savePartialAnswerToBackend = useCallback(() => {\n    const answerArray = getAnswerArray();\n    if (id && answerArray.length !== 0)\n      return savePartialAnswerRef.current({\n        variables: {\n          input: { questionnaireId: id, answers: answerArray },\n        },\n      });\n    return Promise.resolve();\n  }, [getAnswerArray, id]);\n  useEffect(() => {\n    autoSaveTimeoutRef.current = setInterval(() => {\n      savePartialAnswerToBackend();\n    }, 10000);\n    return () => {\n      if (autoSaveTimeoutRef.current) {\n        clearInterval(autoSaveTimeoutRef.current);\n        autoSaveTimeoutRef.current = null;\n      }\n    };\n  }, [savePartialAnswerToBackend]);\n\n  if (loading) {\n    return <LoadingIndicator />;\n  }\n  if (!data) {\n    return <div>Error</div>;\n  }\n\n  const { questionnaire } = data;\n\n  const closeConfirmDialog = () => {\n    setConfirmed(true);\n  };\n\n  const validation = async (all = false) => {\n    if (questionnaire.key === PSQI_FORM_KEY) {\n      if (all === true) {\n        for (let i = 0; i < questionnaire.questions.length; i++) {\n          if (!psqiValidation(i, answers[i], setErrorMessage, showError)) {\n            return false;\n          }\n        }\n        return true;\n      }\n      return psqiValidation(\n        currentQuestionIndex,\n        answers[currentQuestionIndex],\n        setErrorMessage,\n        showError\n      );\n    }\n    return true;\n  };\n  const onNextButtonClick = async () => {\n    const validationResult = await validation();\n    if (validationResult === false) {\n      return;\n    }\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n  };\n\n  const onSubmit = async () => {\n    const validationResult = await validation(true);\n    if (validationResult === false) {\n      return;\n    }\n    if (autoSaveTimeoutRef.current) {\n      clearTimeout(autoSaveTimeoutRef.current);\n      autoSaveTimeoutRef.current = null;\n    }\n    if (id) {\n      const answerArray = getAnswerArray();\n      saveUserAnswerRef.current({\n        variables: {\n          input: { questionnaireId: id, answers: answerArray },\n        },\n      });\n    }\n  };\n\n  const onBackButtonClick = async () => {\n    // const validationResult = await validation();\n    // if (validationResult === false) {\n    //   return;\n    // }\n    setCurrentQuestionIndex(currentQuestionIndex - 1);\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n  };\n\n  const goToHome = () => {\n    history.push(\"/user/home\");\n  };\n\n  const handleExitButtonClick = async () => {\n    if (autoSaveTimeoutRef.current) {\n      clearTimeout(autoSaveTimeoutRef.current);\n      autoSaveTimeoutRef.current = null;\n    }\n    await savePartialAnswerToBackend();\n    goToHome();\n  };\n\n  const goToHomeLinkOnClick = (e: SyntheticEvent) => {\n    e.preventDefault();\n    goToHome();\n  };\n  const onAnswerInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newAnswers = { ...answers };\n    console.log(e.target.value);\n    if (\n      e.target.value !== undefined &&\n      e.target.value !== null &&\n      e.target.value !== \"\"\n    )\n      newAnswers[currentQuestionIndex] = Number(e.target.value);\n    else delete newAnswers[currentQuestionIndex];\n    setAnswers(newAnswers);\n  };\n  const radioButtonOnClick = (\n    e: React.MouseEvent<HTMLLabelElement>,\n    index: number,\n    questionIndex: number\n  ) => {\n    if (\n      selectChoiceLockRef.current ||\n      (choiceDisabled && choiceDisabled[currentQuestionIndex][index])\n    ) {\n      return;\n    }\n    const newAnswers = { ...answers };\n    newAnswers[currentQuestionIndex] = index;\n    if (questionnaire.key === YAML_BROWN_FORM_KEY) {\n      yaleBrownCustomization(\n        setAnswers,\n        setChoiceDisabled,\n        choiceDisabled,\n        newAnswers,\n        currentQuestionIndex\n      );\n    } else {\n      setAnswers(newAnswers);\n    }\n    if (currentQuestionIndex !== questionnaire.questions.length - 1) {\n      setIsNextButtonDisabled(true);\n      selectChoiceLockRef.current = true;\n      const timeout = setTimeout(() => {\n        if (questionnaire.key === YAML_BROWN_FORM_KEY) {\n          yaleBrownSkipQuestions(\n            currentQuestionIndex,\n            setCurrentQuestionIndex,\n            index,\n            setIsAllowedToSubmit\n          );\n        } else {\n          setCurrentQuestionIndex(currentQuestionIndex + 1);\n          if (timeoutRef.current) {\n            clearTimeout(timeoutRef.current);\n          }\n        }\n        setIsNextButtonDisabled(false);\n        selectChoiceLockRef.current = false;\n      }, 190);\n      timeoutRef.current = timeout;\n    } else {\n      setIsAllowedToSubmit(true);\n    }\n  };\n\n  const currentQuestion = questionnaire.questions[currentQuestionIndex];\n  return (\n    <div className={classes.formContainer}>\n      <div className={classes.form}>\n        <Card className={classes.titleCard} variant=\"outlined\">\n          <div className={classes.titleCardColor} />\n          <CardContent className={classes.titleCardContent}>\n            <div className={classes.titleCardMainText}>\n              {questionnaire.name}\n            </div>\n            {isDone && (\n              <>\n                <div className={classes.finishedText}>\n                  您已完成此量表的填写。\n                </div>\n                <Link\n                  onClick={goToHomeLinkOnClick}\n                  className={classes.homeLink}\n                  href=\"/\"\n                >\n                  回到主页\n                </Link>\n              </>\n            )}\n          </CardContent>\n        </Card>\n        {!isDone && (\n          <>\n            <Card className={classes.questionCard} variant=\"outlined\">\n              <CardContent>\n                {currentQuestion.parent ? (\n                  <div className={classes.questionParent}>\n                    {currentQuestion.parent}\n                  </div>\n                ) : null}\n                <div className={classes.questionText}>\n                  {currentQuestion.choices.length === 0 &&\n                  currentQuestion.content &&\n                  currentQuestion.content.includes(\"{input}\") ? (\n                    <>\n                      {currentQuestion.content.split(\"{input}\")[0]}\n                      <TextField\n                        type=\"number\"\n                        className={classes.answerInput}\n                        value={\n                          answers[currentQuestionIndex] !== null &&\n                          answers[currentQuestionIndex] !== undefined\n                            ? answers[currentQuestionIndex]\n                            : \"\"\n                        }\n                        onChange={onAnswerInputChange}\n                      />\n                      {currentQuestion.content.split(\"{input}\")[1]}\n                    </>\n                  ) : (\n                    currentQuestion.content\n                  )}\n                </div>\n                <FormControl component=\"fieldset\">\n                  {currentQuestion.choices.map((choice, index) => (\n                    <FormControlLabel\n                      value={choice}\n                      control={<Radio color=\"primary\" />}\n                      key={`choice-${index}`}\n                      label={\n                        <span className={classes.questionOptionText}>\n                          {choice}\n                        </span>\n                      }\n                      disabled={\n                        choiceDisabled &&\n                        choiceDisabled[currentQuestionIndex][index]\n                          ? true\n                          : undefined\n                      }\n                      checked={answers[currentQuestionIndex] === index}\n                      onClick={(e: React.MouseEvent<HTMLLabelElement>) =>\n                        radioButtonOnClick(e, index, currentQuestionIndex)\n                      }\n                    />\n                  ))}\n                </FormControl>\n              </CardContent>\n            </Card>\n\n            <div className={isSmallScreen ? \"\" : classes.footer}>\n              <div>\n                <Button\n                  className={\n                    classes.buttonWithRightMargin + \" \" + classes.button\n                  }\n                  variant=\"contained\"\n                  onClick={onBackButtonClick}\n                  disabled={currentQuestionIndex !== 0 ? false : true}\n                >\n                  上一题\n                </Button>\n                <Button\n                  className={\n                    classes.buttonWithRightMargin + \" \" + classes.button\n                  }\n                  variant=\"contained\"\n                  onClick={onNextButtonClick}\n                  disabled={\n                    (currentQuestionIndex ===\n                      questionnaire.questions.length - 1 ||\n                      answers[currentQuestionIndex] === undefined ||\n                      isNextButtonDisabled) &&\n                    !(\n                      answers[currentQuestionIndex] !== undefined &&\n                      answers[currentQuestionIndex + 1] !== undefined\n                    )\n                      ? true\n                      : false\n                  }\n                >\n                  下一题\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={onSubmit}\n                  disabled={!isAllowedToSubmit}\n                >\n                  提交\n                </Button>\n              </div>\n              <div\n                className={\n                  classes.progressWrapper +\n                  \" \" +\n                  (isSmallScreen ? classes.progressWrapperForSmallScreen : \"\")\n                }\n              >\n                <ProgressBar\n                  totalNumber={questionnaire.questions.length}\n                  currentIndex={currentQuestionIndex}\n                />\n                {`第 ${currentQuestionIndex + 1} 题（共\n                 ${questionnaire.questions.length} 题）`}\n              </div>\n            </div>\n            <div className={classes.timerContaner}>\n              <Timer />\n            </div>\n            <Fab\n              className={classes.exitButton}\n              onClick={handleExitButtonClick}\n              variant=\"extended\"\n            >\n              <DirectionsRunIcon color=\"primary\" />\n              暂存并退出\n            </Fab>\n          </>\n        )}\n      </div>\n      <Dialog\n        open={!confirmed && !!questionnaire.instruction}\n        onClose={closeConfirmDialog}\n      >\n        <DialogTitle>指导语</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{questionnaire.instruction}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeConfirmDialog} color=\"primary\" autoFocus>\n            继续\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <ErrorIndicator\n        showError={isErrorShown}\n        setShowError={setIsErrorShown}\n        errorMessage={errorMessage}\n      />\n    </div>\n  );\n};\n","export const yaleBrownCustomization = (\n  setAnswers: (\n    value: React.SetStateAction<{\n      [index: number]: number;\n    }>\n  ) => void,\n  setChoiceDisabled: (\n    value: React.SetStateAction<boolean[][] | null | undefined>\n  ) => void,\n  choiceDisabled: boolean[][] | null | undefined,\n  newAnswers: {\n    [x: number]: number;\n  },\n  currentQuestionIndex: number\n) => {\n  if (currentQuestionIndex === 0) {\n    const autoChooseChoices = [1, 2, 3, 4];\n    if (newAnswers[currentQuestionIndex] === 0) {\n      for (const autoChooseChoiceIndex of autoChooseChoices) {\n        newAnswers[autoChooseChoiceIndex] = 0;\n      }\n      setAnswers(newAnswers);\n      if (choiceDisabled) {\n        const newChoiceDisabled = choiceDisabled.map((choices) => [...choices]);\n        for (const autoChooseChoiceIndex of autoChooseChoices) {\n          for (\n            let i = 0;\n            i < newChoiceDisabled[autoChooseChoiceIndex].length;\n            i++\n          ) {\n            if (i !== 0) {\n              newChoiceDisabled[autoChooseChoiceIndex][i] = true;\n            }\n          }\n        }\n        setChoiceDisabled(newChoiceDisabled);\n      }\n    } else {\n      setAnswers(newAnswers);\n      if (choiceDisabled) {\n        const newChoiceDisabled = choiceDisabled.map((choices) => [...choices]);\n        for (const autoChooseChoiceIndex of autoChooseChoices) {\n          for (\n            let i = 0;\n            i < newChoiceDisabled[autoChooseChoiceIndex].length;\n            i++\n          ) {\n            if (i !== 0) {\n              newChoiceDisabled[autoChooseChoiceIndex][i] = false;\n            }\n          }\n        }\n        setChoiceDisabled(newChoiceDisabled);\n      }\n    }\n  } else if (currentQuestionIndex === 5) {\n    const autoChooseChoices = [6, 7, 8, 9];\n    if (newAnswers[currentQuestionIndex] === 0) {\n      for (const autoChooseChoiceIndex of autoChooseChoices) {\n        newAnswers[autoChooseChoiceIndex] = 0;\n      }\n      setAnswers(newAnswers);\n      if (choiceDisabled) {\n        const newChoiceDisabled = choiceDisabled.map((choices) => [...choices]);\n        for (const autoChooseChoiceIndex of autoChooseChoices) {\n          for (\n            let i = 0;\n            i < newChoiceDisabled[autoChooseChoiceIndex].length;\n            i++\n          ) {\n            if (i !== 0) {\n              newChoiceDisabled[autoChooseChoiceIndex][i] = true;\n            }\n          }\n        }\n        setChoiceDisabled(newChoiceDisabled);\n      }\n    } else {\n      setAnswers(newAnswers);\n      if (choiceDisabled) {\n        const newChoiceDisabled = choiceDisabled.map((choices) => [...choices]);\n        for (const autoChooseChoiceIndex of autoChooseChoices) {\n          for (\n            let i = 0;\n            i < newChoiceDisabled[autoChooseChoiceIndex].length;\n            i++\n          ) {\n            if (i !== 0) {\n              newChoiceDisabled[autoChooseChoiceIndex][i] = false;\n            }\n          }\n        }\n        setChoiceDisabled(newChoiceDisabled);\n      }\n    }\n  } else {\n    setAnswers(newAnswers);\n  }\n};\n\nexport const yaleBrownSkipQuestions = (\n  currentQuestionnIndex: number,\n  setCurrentQuestionIndex: (value: React.SetStateAction<number>) => void,\n  choice: number,\n  setIsAllowedToSubmit: (value: React.SetStateAction<boolean>) => void\n) => {\n  if (currentQuestionnIndex === 0 && choice === 0) {\n    setCurrentQuestionIndex(5);\n  } else if (currentQuestionnIndex === 5 && choice === 0) {\n    setCurrentQuestionIndex(9);\n    setIsAllowedToSubmit(true);\n  } else {\n    setCurrentQuestionIndex(currentQuestionnIndex + 1);\n  }\n};\n","import { useMutation } from \"@apollo/client\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  createStyles,\n  FormControl,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Theme,\n  Toolbar,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { ErrorIndicator } from \"../../lib/components\";\nimport { CREATE_ACCOUNT } from \"../../lib/graphql/mutations\";\nimport {\n  CreateAccount as CreateAccountData,\n  CreateAccountVariables,\n} from \"../../lib/graphql/mutations/CreateAccount/__generated__/CreateAccount\";\nimport { Viewer } from \"../../lib/type\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    createAccountCard: {\n      borderRadius: 8,\n      width: 800,\n      margin: \"30px auto 0\",\n    },\n    createAccountText: {\n      fontSize: \"1.5rem\",\n      textAlign: \"left\",\n      marginBottom: 10,\n      marginTop: 15,\n      paddingLeft: 40,\n    },\n    promptText: {\n      marginBottom: 24,\n      marginLeft: 40,\n      fontSize: \"1rem\",\n    },\n    inputContainer: {\n      margin: \"0 40px\",\n    },\n    input: {\n      width: \"30%\",\n      paddingRight: 10,\n      marginBottom: 10,\n    },\n    buttonContainer: {\n      marginTop: 30,\n      marginLeft: 40,\n      marginRight: 40,\n      marginBottom: 30,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n    },\n    formClassifyText: {\n      color: \"#5f6368\",\n      fontSize: \"0.8em\",\n      marginBottom: 5,\n      marginTop: 10,\n    },\n  })\n);\n\ninterface Props {\n  isAuthorized: boolean;\n  setViewer: (viewer: Viewer) => void;\n}\n\ninterface UserInfo {\n  name: string;\n  userName: string;\n  gender: string;\n  password: string;\n  education: string;\n  marriageStatus: string;\n  jobStatus: string;\n  age: string;\n}\n\nconst initialUserInfo = {\n  name: \"\",\n  userName: \"\",\n  gender: \"\",\n  password: \"\",\n  education: \"\",\n  marriageStatus: \"\",\n  jobStatus: \"\",\n  age: \"\",\n};\n\nexport const CreateAccount = ({ isAuthorized, setViewer }: Props) => {\n  const classes = useStyles();\n  const [userInfo, setUserInfo] = useState<UserInfo>(initialUserInfo);\n  const [reenteredPassword, setReenteredPassword] = useState<string>(\"\");\n  const [createAccount] = useMutation<\n    CreateAccountData,\n    CreateAccountVariables\n  >(CREATE_ACCOUNT, {\n    onCompleted: (data) => {\n      if (data && data.createAccount && data.createAccount.token) {\n        setViewer(data.createAccount);\n      }\n    },\n    onError: (error) => {\n      if (\n        error.message.includes(\"One user with this userName already exists.\")\n      ) {\n        setErrorMessage(\"此门诊号已被注册！\");\n        setShowError(true);\n        setErrorField(\"userNameDuplicate\");\n      }\n    },\n  });\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\n  const [showError, setShowError] = useState(false);\n  const [errorField, setErrorField] = useState<string>();\n  const createAccountButtonOnClick = () => {\n    if (!userInfo.userName) {\n      setErrorMessage(\"请输入您的门诊号！\");\n      setShowError(true);\n      setErrorField(\"userName\");\n      return;\n    }\n    if (!userInfo.password) {\n      setErrorMessage(\"请输入您的密码！\");\n      setShowError(true);\n      setErrorField(\"password\");\n      return;\n    }\n    if (!reenteredPassword) {\n      setErrorMessage(\"请确认您输入的密码！\");\n      setShowError(true);\n      setErrorField(\"reenteredPassword\");\n      return;\n    }\n    if (userInfo.password !== reenteredPassword) {\n      setErrorMessage(\"两次输入的密码不一致！\");\n      setShowError(true);\n      setErrorField(\"reenteredPasswordNotSame\");\n      return;\n    }\n    if (!userInfo.name) {\n      setErrorMessage(\"请输入您的姓名！\");\n      setShowError(true);\n      setErrorField(\"name\");\n      return;\n    }\n    createAccount({\n      variables: {\n        input: {\n          ...userInfo,\n          age: userInfo.age === \"\" ? undefined : Number(userInfo.age),\n        },\n      },\n    });\n  };\n  const onUserNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserInfo({ ...userInfo, userName: e.target.value });\n    if (\n      errorField === \"userName\" ||\n      (errorField === \"userNameDuplicate\" && e.target.value)\n    ) {\n      setErrorField(undefined);\n    }\n  };\n  const onPasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserInfo({ ...userInfo, password: e.target.value });\n    if (errorField === \"password\" && e.target.value) {\n      setErrorField(undefined);\n    }\n  };\n  const onReenteredPasswordChange = (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setReenteredPassword(e.target.value);\n    if (errorField === \"reenteredPassword\" && e.target.value) {\n      setErrorField(undefined);\n    } else if (\n      errorField === \"reenteredPasswordNotSame\" &&\n      e.target.value === userInfo.password\n    ) {\n      setErrorField(undefined);\n    }\n  };\n  const onNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserInfo({ ...userInfo, name: e.target.value });\n    if (errorField === \"name\" && e.target.value) {\n      setErrorField(undefined);\n    }\n  };\n  const onGenderChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setUserInfo({ ...userInfo, gender: e.target.value as string });\n  };\n  const onAgeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserInfo({ ...userInfo, age: e.target.value });\n  };\n  const onEducationChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setUserInfo({ ...userInfo, education: e.target.value as string });\n  };\n  const onJobChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserInfo({ ...userInfo, jobStatus: e.target.value });\n  };\n  const onMarraigeChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setUserInfo({ ...userInfo, marriageStatus: e.target.value as string });\n  };\n  if (isAuthorized) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <>\n      <Toolbar />\n      <Card className={classes.createAccountCard} variant=\"outlined\">\n        <CardContent>\n          <div className={classes.createAccountText}>注册</div>\n          <div className={classes.promptText}>请输入您的个人信息</div>\n          <form>\n            <div className={classes.inputContainer}>\n              <div className={classes.formClassifyText}>登录信息</div>\n              <div>\n                <TextField\n                  required\n                  className={classes.input}\n                  color=\"primary\"\n                  label=\"门诊号\"\n                  size=\"small\"\n                  value={userInfo.userName}\n                  onChange={onUserNameChange}\n                  helperText={\n                    errorField === \"userName\"\n                      ? \"请输入您的门诊号！\"\n                      : errorField === \"userNameDuplicate\"\n                      ? \"此门诊号已被注册！\"\n                      : undefined\n                  }\n                  error={\n                    errorField === \"userName\" ||\n                    errorField === \"userNameDuplicate\"\n                      ? true\n                      : undefined\n                  }\n                />\n              </div>\n              <div>\n                <TextField\n                  required\n                  className={classes.input}\n                  color=\"primary\"\n                  type=\"password\"\n                  label=\"密码\"\n                  size=\"small\"\n                  value={userInfo.password}\n                  onChange={onPasswordChange}\n                  helperText={\n                    errorField === \"password\" ? \"请输入您的密码！\" : undefined\n                  }\n                  error={errorField === \"password\" ? true : undefined}\n                />\n                <TextField\n                  required\n                  type=\"password\"\n                  className={classes.input}\n                  color=\"primary\"\n                  label=\"确认密码\"\n                  size=\"small\"\n                  value={reenteredPassword}\n                  onChange={onReenteredPasswordChange}\n                  helperText={\n                    errorField === \"reenteredPassword\"\n                      ? \"请确认您的密码！\"\n                      : errorField === \"reenteredPasswordNotSame\"\n                      ? \"两次输入的密码不一致！\"\n                      : undefined\n                  }\n                  error={\n                    errorField === \"reenteredPassword\" ||\n                    errorField === \"reenteredPasswordNotSame\"\n                      ? true\n                      : undefined\n                  }\n                />\n              </div>\n              <div className={classes.formClassifyText}>个人信息</div>\n              <TextField\n                required\n                className={classes.input}\n                color=\"primary\"\n                label=\"姓名\"\n                size=\"small\"\n                value={userInfo.name}\n                onChange={onNameChange}\n                helperText={\n                  errorField === \"name\" ? \"请输入您的姓名!\" : undefined\n                }\n                error={errorField === \"name\" ? true : undefined}\n              />\n              <FormControl className={classes.input} size=\"small\">\n                <InputLabel>性别</InputLabel>\n                <Select\n                  color=\"primary\"\n                  label=\"性别\"\n                  value={userInfo.gender}\n                  onChange={onGenderChange}\n                >\n                  <MenuItem value=\"男\">男</MenuItem>\n                  <MenuItem value=\"女\">女</MenuItem>\n                </Select>\n              </FormControl>\n              <TextField\n                className={classes.input}\n                color=\"primary\"\n                label=\"年龄\"\n                size=\"small\"\n                value={userInfo.age}\n                onChange={onAgeChange}\n              />\n              <FormControl className={classes.input} size=\"small\">\n                <InputLabel>教育</InputLabel>\n                <Select\n                  color=\"primary\"\n                  value={userInfo.education}\n                  onChange={onEducationChange}\n                >\n                  <MenuItem value=\"高中以下\">高中以下</MenuItem>\n                  <MenuItem value=\"大中专科\">大中专科</MenuItem>\n                  <MenuItem value=\"本科\">本科</MenuItem>\n                  <MenuItem value=\"硕士\">硕士</MenuItem>\n                  <MenuItem value=\"博士\">博士</MenuItem>\n                </Select>\n              </FormControl>\n              <TextField\n                className={classes.input}\n                color=\"primary\"\n                label=\"职业\"\n                size=\"small\"\n                value={userInfo.jobStatus}\n                onChange={onJobChange}\n              />\n              <FormControl className={classes.input} size=\"small\">\n                <InputLabel>婚姻</InputLabel>\n                <Select\n                  color=\"primary\"\n                  value={userInfo.marriageStatus}\n                  onChange={onMarraigeChange}\n                >\n                  <MenuItem value=\"已婚\">已婚</MenuItem>\n                  <MenuItem value=\"未婚\">未婚</MenuItem>\n                </Select>\n              </FormControl>\n            </div>\n\n            <div className={classes.buttonContainer}>\n              <Link to=\"/login\">\n                <Button>我已有账号</Button>\n              </Link>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={createAccountButtonOnClick}\n              >\n                注册\n              </Button>\n            </div>\n          </form>\n        </CardContent>\n      </Card>\n      <ErrorIndicator\n        showError={showError}\n        setShowError={setShowError}\n        errorMessage={errorMessage}\n      />\n    </>\n  );\n};\n","import { useQuery } from \"@apollo/client\";\nimport {\n  Button,\n  Checkbox,\n  createStyles,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Theme,\n} from \"@material-ui/core\";\nimport { CheckCircleOutline } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\nimport { LoadingIndicator } from \"../../lib/components\";\nimport { QUESTIONNAIRE_LIST } from \"../../lib/graphql/queries\";\nimport {\n  QuestionnaireList as QuestionnaireListData,\n  QuestionnaireListVariables,\n} from \"../../lib/graphql/queries/QuestionnaireList/__generated__/QuestionnaireList\";\nimport { ReportPdf } from \"../../lib/components\";\nimport { withReportPdfData } from \"./components\";\n\nconst PdfViewer = withReportPdfData(ReportPdf);\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    content: {\n      padding: \"5px 10px\",\n    },\n    questionnaireTable: {\n      marginTop: 20,\n      marginBottom: 20,\n    },\n    doneIcon: {\n      color: \"#4caf50\",\n    },\n  })\n);\n\nexport const Report = () => {\n  const classes = useStyles();\n  const { loading, data } = useQuery<\n    QuestionnaireListData,\n    QuestionnaireListVariables\n  >(QUESTIONNAIRE_LIST, {\n    variables: { isReport: true },\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      const questionnaireList = data.questionnaireList;\n      let count = 0;\n      for (const questionnaire of questionnaireList) {\n        if (questionnaire.done) {\n          count += 1;\n        }\n      }\n      setNumberOfFinishedQuestionnaires(count);\n      const newselectedUserAnswers = new Set<string>();\n      for (const questionnaire of questionnaireList) {\n        if (questionnaire.done && questionnaire.userAnswerId)\n          newselectedUserAnswers.add(questionnaire.userAnswerId);\n      }\n      setSelectedUserAnswers(newselectedUserAnswers);\n    },\n  });\n  const [selectedUserAnswers, setSelectedUserAnswers] = useState<Set<string>>(\n    new Set<string>()\n  );\n  const [\n    numberOfFinishedQuestionnaires,\n    setNumberOfFinishedQuestionnaires,\n  ] = useState<number | null>(null);\n  const [isReportVisible, setIsReportVisible] = useState(false);\n\n  if (isReportVisible) {\n    return (\n      <PdfViewer\n        userAnswerIds={Array.from(selectedUserAnswers)}\n        closeReport={() => setIsReportVisible(false)}\n      />\n    );\n  }\n  if (loading || !data || numberOfFinishedQuestionnaires === null) {\n    return <LoadingIndicator />;\n  }\n  const questionnaireList = data.questionnaireList;\n\n  const selectQuestionnaire = (\n    event: React.ChangeEvent<HTMLInputElement>,\n    userAnswerId: string\n  ) => {\n    const checked = event.target.checked;\n    const newselectedUserAnswers = new Set(selectedUserAnswers);\n    if (checked) {\n      newselectedUserAnswers.add(userAnswerId);\n    } else {\n      newselectedUserAnswers.delete(userAnswerId);\n    }\n    setSelectedUserAnswers(newselectedUserAnswers);\n  };\n  const selectAllQuestionnaires = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const checked = event.target.checked;\n    const newselectedUserAnswers = new Set<string>();\n    if (checked) {\n      for (const questionnaire of questionnaireList) {\n        if (questionnaire.done && questionnaire.userAnswerId)\n          newselectedUserAnswers.add(questionnaire.userAnswerId);\n      }\n    }\n    setSelectedUserAnswers(newselectedUserAnswers);\n  };\n  const generateReport = () => {\n    setIsReportVisible(true);\n  };\n  return (\n    <div className={classes.content}>\n      <TableContainer component={Paper} className={classes.questionnaireTable}>\n        <Table size=\"small\" aira-label=\"选择已完成的量表，生成报告\">\n          <TableHead>\n            <TableRow>\n              <TableCell padding=\"checkbox\">\n                <Checkbox\n                  checked={\n                    selectedUserAnswers.size ===\n                      numberOfFinishedQuestionnaires &&\n                    selectedUserAnswers.size !== 0\n                  }\n                  disabled={numberOfFinishedQuestionnaires === 0}\n                  onChange={selectAllQuestionnaires}\n                />\n              </TableCell>\n              <TableCell>量表</TableCell>\n              <TableCell>完成状态</TableCell>\n              <TableCell>完成日期</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {questionnaireList.map((questionnaire, index) => (\n              <TableRow key={`questionnaire-${index}`}>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    disabled={!questionnaire.done}\n                    checked={\n                      !!questionnaire.userAnswerId &&\n                      selectedUserAnswers.has(questionnaire.userAnswerId)\n                    }\n                    onChange={(e) =>\n                      questionnaire.userAnswerId &&\n                      selectQuestionnaire(e, questionnaire.userAnswerId)\n                    }\n                  />\n                </TableCell>\n                <TableCell>{questionnaire.name}</TableCell>\n                <TableCell>\n                  {questionnaire.done ? (\n                    <CheckCircleOutline\n                      className={classes.doneIcon}\n                      fontSize=\"small\"\n                    />\n                  ) : null}\n                </TableCell>\n                <TableCell>\n                  {questionnaire.displayedFillInDate || null}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        disabled={selectedUserAnswers.size === 0}\n        onClick={generateReport}\n      >\n        生成报告\n      </Button>\n    </div>\n  );\n};\n","import { gql } from \"@apollo/client\";\n\nexport const QUERY_USER = gql`\n  query QueryUser(\n    $userName: String\n    $name: String\n    $gender: String\n    $ageRange: AgeRange\n    $minSignUpDate: SignUpDate\n    $maxSignUpDate: SignUpDate\n    $limit: Int!\n    $currentPageIndex: Int!\n    $filter: UsersFilter\n    $onlyMyPatient: Boolean\n    $additionalFields: [String!]\n  ) {\n    queryUser(\n      userName: $userName\n      name: $name\n      gender: $gender\n      ageRange: $ageRange\n      minSignUpDate: $minSignUpDate\n      maxSignUpDate: $maxSignUpDate\n      limit: $limit\n      currentPageIndex: $currentPageIndex\n      filter: $filter\n      onlyMyPatient: $onlyMyPatient\n      additionalFields: $additionalFields\n    ) {\n      total\n      users {\n        id\n        name\n        userName\n        gender\n        education\n        jobStatus\n        age\n        marriageStatus\n        signUpDate\n        doctorName\n        doctorUserName\n        doctorId\n        finishedForms {\n          name\n          id\n          displayedFillInDate\n          userAnswerId\n          result\n          doctorUserName\n          doctorName\n          doctorId\n          key\n        }\n        diagnosis\n      }\n    }\n  }\n`;\n","import {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface Props {\n  isDialogOpen: boolean;\n  handleDialogClose: () => void;\n  additionalFields: string[];\n  setAdditionalFields: (additionalFields: string[]) => void;\n}\n\nexport const ADDITIONAL_FIELD_KEYS = [\n  \"depressed\",\n  \"anxious\",\n  \"biphasic\",\n  \"schizophrenia\",\n] as const;\nexport const ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES = [\n  \"抑郁障碍\",\n  \"焦虑障碍\",\n  \"双相障碍\",\n  \"精神分裂症\",\n] as const;\n\nexport const removeElementFromArray = <T,>(array: T[], element: T) => {\n  const newArray: T[] = [];\n  for (let currentElement of array) {\n    if (currentElement !== element) {\n      newArray.push(currentElement);\n    }\n  }\n  return newArray;\n};\n\nexport const AdditionalFieldsModal = ({\n  isDialogOpen,\n  handleDialogClose,\n  additionalFields,\n  setAdditionalFields,\n}: Props) => {\n  const selectAdditionalField = (\n    fieldKey: typeof ADDITIONAL_FIELD_KEYS[number],\n    isSelected: boolean\n  ) => {\n    if (!isSelected) {\n      setAdditionalFields(removeElementFromArray(additionalFields, fieldKey));\n    } else if (!additionalFields.includes(fieldKey)) {\n      setAdditionalFields([...additionalFields, fieldKey]);\n    }\n  };\n  return (\n    <Dialog\n      open={isDialogOpen}\n      onClose={handleDialogClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">高级筛选</DialogTitle>\n      <DialogContent>\n        {ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES.map((displayName, index) => {\n          return (\n            <div key={displayName}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={additionalFields.includes(\n                      ADDITIONAL_FIELD_KEYS[index]\n                    )}\n                    onChange={(event) => {\n                      selectAdditionalField(\n                        ADDITIONAL_FIELD_KEYS[index],\n                        event.target.checked\n                      );\n                    }}\n                  />\n                }\n                label={displayName}\n              />\n            </div>\n          );\n        })}\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  Button,\n  Checkbox,\n  Chip,\n  createStyles,\n  FormControl,\n  FormControlLabel,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Theme,\n} from \"@material-ui/core\";\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport React, { forwardRef, useImperativeHandle, useState } from \"react\";\nimport \"moment/locale/zh-cn\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport SettingsBackupRestoreIcon from \"@material-ui/icons/SettingsBackupRestore\";\nimport cnLocale from \"date-fns/locale/zh-CN\";\nimport { ErrorIndicator } from \"../../../../lib/components\";\nimport { QueryUserVariables } from \"../../../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\nimport { UsersFilter } from \"../../../../lib/graphql/globalTypes\";\nimport { INITAL_ONLY_MY_PATIENT } from \"../..\";\nimport TuneIcon from \"@material-ui/icons/Tune\";\nimport {\n  AdditionalFieldsModal,\n  ADDITIONAL_FIELD_KEYS,\n  ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES,\n  removeElementFromArray,\n} from \"../AdditionalFieldsModal\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport { PRIMARY_COLOR } from \"../../../..\";\n\nconst AGE_RANGE_ERROR_MESSAGE_TEXT = \"最小年龄应小于最大年龄！\";\nconst AGE_NEGATIVE_ERROR_MESSAGE = \"年龄不能为负数！\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    promptText: {\n      color: \"#5f6368\",\n      fontSize: \"0.8em\",\n      paddingBottom: 5,\n      paddingTop: 5,\n    },\n    input: {\n      width: \"30%\",\n      paddingRight: 10,\n      paddingBottom: 5,\n    },\n    rangeWrapper: {\n      display: \"inline-block\",\n    },\n    ageRangeInput: {\n      width: \"40%\",\n    },\n    dateRangeWrapper: {\n      width: \"60%\",\n    },\n    ageRangeWrapper: {\n      width: \"30%\",\n      paddingRight: 10,\n    },\n    dateRangeInput: {\n      width: \"50%\",\n      paddingRight: 10,\n    },\n    ageInputIconWrapper: {\n      width: \"20%\",\n      display: \"inline-flex\",\n      justifyContent: \"center\",\n      paddingTop: 20,\n    },\n    buttonWrapper: {\n      paddingTop: 10,\n    },\n    extraFieldsWrapper: {\n      paddingTop: 10,\n    },\n    searchButton: {\n      marginRight: 10,\n    },\n    whiteButton: {\n      backgroundColor: \"#fff\",\n      color: PRIMARY_COLOR,\n      \"&:hover\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n    rangeFormWrapper: {\n      width: \"100%\",\n      alignItems: \"flex-start\",\n      display: \"flex\",\n    },\n    ageInputIcon: {\n      width: 16,\n      height: 16,\n      color: \"rgba(0, 0, 0, 0.54)\",\n    },\n    chip: {\n      marginRight: 5,\n    },\n    additionalFieldButton: {\n      marginRight: 5,\n    },\n  })\n);\n\nconst datePickerProps = {\n  format: \"yyyy/MM/dd\",\n  okLabel: \"确定\",\n  cancelLabel: \"取消\",\n  invalidLabel: \"输入的日期有误！\",\n  maxDateMessage: \"输入的日期太大！\",\n  minDateMessage: \"输入的日期太小！\",\n  invalidDateMessage: \"输入的日期有误！\",\n  size: \"small\" as const,\n};\n\ninterface Props {\n  searchPatients: (searchParams: QueryUserVariables) => void;\n  limit: number;\n  currentPageIndex: number;\n  setCurrentPageIndex: (currentPageIndex: number) => void;\n  filter: UsersFilter;\n}\n\nexport interface SearchPatientFormHandle {\n  search: () => void;\n}\n\nexport const SearchPatientForm = forwardRef<SearchPatientFormHandle, Props>(\n  (\n    { searchPatients, limit, currentPageIndex, setCurrentPageIndex, filter },\n    ref\n  ) => {\n    const classes = useStyles();\n    const [userName, setUserName] = useState(\"\");\n    const onUserNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setUserName(e.target.value);\n    };\n\n    const [name, setName] = useState(\"\");\n    const onNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setName(e.target.value);\n    };\n\n    const [gender, setGender] = useState<\"男\" | \"女\" | \"全部\" | \"\">(\"\");\n    const onGenderChange = (\n      e: React.ChangeEvent<{\n        name?: string | undefined;\n        value: unknown;\n      }>\n    ) => {\n      setGender(e.target.value as typeof gender);\n    };\n\n    const [ageRange, setAgeRange] = useState({\n      min: \"\",\n      max: \"\",\n    });\n    const onMinAgeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const newMinAge = Number(e.target.value);\n      if (errorField === \"ageRange\") {\n        if (newMinAge <= Number(ageRange.max) || newMinAge === 0) {\n          setErrorField(null);\n        }\n      }\n      if (errorField === \"minAge\") {\n        if (newMinAge >= 0) {\n          setErrorField(null);\n        }\n      }\n      setAgeRange({ ...ageRange, min: e.target.value });\n    };\n    const onMaxAgeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const newMaxAge = Number(e.target.value);\n      if (errorField === \"ageRange\") {\n        if (newMaxAge >= Number(ageRange.min) || newMaxAge === 0) {\n          setErrorField(null);\n        }\n      }\n      if (errorField === \"maxAge\") {\n        if (newMaxAge >= 0) {\n          setErrorField(null);\n        }\n      }\n      setAgeRange({ ...ageRange, max: e.target.value });\n    };\n\n    const [dateRange, setDateRange] = useState<{\n      min: Date | null;\n      max: Date | null;\n    }>({\n      min: null,\n      max: null,\n    });\n    const onMinDateChange = (date: Date | null, _value?: string | null) => {\n      if (errorField === \"dateRange\") {\n        if (date === null || (dateRange.max && +date <= +dateRange.max)) {\n          setErrorField(null);\n        }\n      }\n      setDateRange({\n        ...dateRange,\n        min: date,\n      });\n    };\n    const onMaxDateChange = (date: Date | null, _value?: string | null) => {\n      if (errorField === \"dateRange\") {\n        if (date === null || (dateRange.min && +date >= +dateRange.min)) {\n          setErrorField(null);\n        }\n      }\n      setDateRange({\n        ...dateRange,\n        max: date,\n      });\n    };\n\n    const [onlyMyPatient, setOnlyMyPatient] = useState(false);\n    const handleOnlyMyPatientCheckboxChange = (\n      event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n      setOnlyMyPatient(event.target.checked);\n    };\n\n    const [showError, setShowError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [errorField, setErrorField] = useState<null | string>(null);\n    const [\n      isAdditionalFieldsModalOpen,\n      setIsAdditionalFieldsModalOpen,\n    ] = useState(false);\n    const [additionalFields, setAdditionalFields] = useState<string[]>([]);\n\n    const handleAdditionalFieldsModalClose = () => {\n      setIsAdditionalFieldsModalOpen(false);\n    };\n\n    const handleAdditionalFieldsModalOpen = () => {\n      setIsAdditionalFieldsModalOpen(true);\n    };\n\n    const handleSearchButtonClick = () => {\n      if (ageRange.min && Number(ageRange.min) < 0) {\n        setErrorMessage(AGE_NEGATIVE_ERROR_MESSAGE);\n        setShowError(true);\n        setErrorField(\"minAge\");\n        return;\n      }\n      if (ageRange.max && Number(ageRange.max) < 0) {\n        setErrorMessage(AGE_NEGATIVE_ERROR_MESSAGE);\n        setShowError(true);\n        setErrorField(\"maxAge\");\n        return;\n      }\n      if (\n        ageRange.min &&\n        ageRange.max &&\n        Number(ageRange.min) > Number(ageRange.max)\n      ) {\n        setErrorMessage(AGE_RANGE_ERROR_MESSAGE_TEXT);\n        setShowError(true);\n        setErrorField(\"ageRange\");\n        return;\n      }\n\n      if (dateRange.min && dateRange.max && dateRange.min > dateRange.max) {\n        setErrorMessage(\"起始日期应在截止日期之前！\");\n        setShowError(true);\n        setErrorField(\"dateRange\");\n        return;\n      }\n\n      setCurrentPageIndex(0);\n      searchPatients({\n        userName,\n        name,\n        gender,\n        ageRange: {\n          min: ageRange.min ? Number(ageRange.min) : null,\n          max: ageRange.max ? Number(ageRange.max) : null,\n        },\n        minSignUpDate: dateRange.min\n          ? {\n              year: dateRange.min.getFullYear(),\n              month: dateRange.min.getMonth(),\n              day: dateRange.min.getDate(),\n            }\n          : null,\n        maxSignUpDate: dateRange.max\n          ? {\n              year: dateRange.max.getFullYear(),\n              month: dateRange.max.getMonth(),\n              day: dateRange.max.getDate(),\n            }\n          : null,\n        limit,\n        currentPageIndex: 0,\n        onlyMyPatient,\n        filter,\n        additionalFields,\n      });\n    };\n\n    useImperativeHandle(ref, () => ({\n      search: () => {\n        handleSearchButtonClick();\n      },\n    }));\n    const handleResetButtonClick = () => {\n      setUserName(\"\");\n      setName(\"\");\n      setGender(\"\");\n      setAgeRange({\n        min: \"\",\n        max: \"\",\n      });\n      setDateRange({\n        min: null,\n        max: null,\n      });\n      setErrorField(null);\n      setCurrentPageIndex(0);\n      setOnlyMyPatient(INITAL_ONLY_MY_PATIENT);\n      searchPatients({\n        limit,\n        currentPageIndex: 0,\n        filter,\n        onlyMyPatient: INITAL_ONLY_MY_PATIENT,\n      });\n      setAdditionalFields([]);\n    };\n    return (\n      <form noValidate autoComplete=\"off\">\n        <div className={classes.promptText}>个人信息</div>\n        <div>\n          <TextField\n            label=\"门诊号\"\n            size=\"small\"\n            className={classes.input}\n            value={userName}\n            onChange={onUserNameChange}\n          />\n          <TextField\n            label=\"姓名\"\n            size=\"small\"\n            className={classes.input}\n            value={name}\n            onChange={onNameChange}\n          />\n          <FormControl className={classes.input} size=\"small\">\n            <InputLabel>性别</InputLabel>\n            <Select\n              color=\"primary\"\n              label=\"性别\"\n              value={gender}\n              onChange={onGenderChange}\n            >\n              <MenuItem value=\"男\">男</MenuItem>\n              <MenuItem value=\"女\">女</MenuItem>\n              <MenuItem value=\"全部\">全部</MenuItem>\n            </Select>\n          </FormControl>\n          <div className={classes.rangeFormWrapper}>\n            <div\n              className={classes.ageRangeWrapper + \" \" + classes.rangeWrapper}\n            >\n              <div className={classes.promptText}>年龄</div>\n              <div>\n                <TextField\n                  label=\"最小年龄\"\n                  size=\"small\"\n                  type=\"number\"\n                  className={classes.ageRangeInput}\n                  value={ageRange.min}\n                  onChange={onMinAgeChange}\n                  error={\n                    errorField === \"ageRange\" || errorField === \"minAge\"\n                      ? true\n                      : undefined\n                  }\n                />\n                <span className={classes.ageInputIconWrapper}>\n                  <ArrowForwardIcon className={classes.ageInputIcon} />\n                </span>\n                <TextField\n                  label=\"最大年龄\"\n                  size=\"small\"\n                  type=\"number\"\n                  className={classes.ageRangeInput}\n                  value={ageRange.max}\n                  onChange={onMaxAgeChange}\n                  error={\n                    errorField === \"ageRange\" || errorField === \"maxAge\"\n                      ? true\n                      : undefined\n                  }\n                />\n              </div>\n            </div>\n            <div\n              className={classes.dateRangeWrapper + \" \" + classes.rangeWrapper}\n            >\n              <div className={classes.promptText}>注册时间</div>\n              <MuiPickersUtilsProvider utils={DateFnsUtils} locale={cnLocale}>\n                <DatePicker\n                  value={dateRange.min}\n                  onChange={onMinDateChange}\n                  label={\"起始日期\"}\n                  className={classes.dateRangeInput}\n                  {...datePickerProps}\n                  error={errorField === \"dateRange\" ? true : undefined}\n                />\n                <DatePicker\n                  value={dateRange.max}\n                  onChange={onMaxDateChange}\n                  label={\"截止日期\"}\n                  className={classes.dateRangeInput}\n                  {...datePickerProps}\n                  error={errorField === \"dateRange\" ? true : undefined}\n                />\n              </MuiPickersUtilsProvider>\n            </div>\n          </div>\n        </div>\n        <div className={classes.extraFieldsWrapper}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={onlyMyPatient}\n                onChange={handleOnlyMyPatientCheckboxChange}\n              />\n            }\n            label=\"只选择我的病人\"\n          />\n          <Button\n            startIcon={<TuneIcon />}\n            onClick={handleAdditionalFieldsModalOpen}\n            color=\"primary\"\n            className={classes.additionalFieldButton}\n          >\n            高级筛选\n          </Button>\n          {ADDITIONAL_FIELD_KEYS.map((fieldKey, index) => {\n            if (additionalFields.includes(fieldKey)) {\n              const onChipDelete = () => {\n                setAdditionalFields(\n                  removeElementFromArray(additionalFields, fieldKey)\n                );\n              };\n              return (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  onDelete={onChipDelete}\n                  icon={<InfoIcon />}\n                  color=\"primary\"\n                  label={ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES[index]}\n                  key={fieldKey}\n                  className={\n                    index !== additionalFields.length - 1 ? classes.chip : \"\"\n                  }\n                />\n              );\n            }\n            return null;\n          })}\n        </div>\n        <div className={classes.buttonWrapper}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<SearchIcon />}\n            className={classes.searchButton}\n            onClick={handleSearchButtonClick}\n          >\n            搜索\n          </Button>\n          <Button\n            variant=\"contained\"\n            startIcon={<SettingsBackupRestoreIcon />}\n            className={classes.whiteButton}\n            onClick={handleResetButtonClick}\n          >\n            重置\n          </Button>\n        </div>\n        <ErrorIndicator\n          showError={showError}\n          setShowError={setShowError}\n          errorMessage={errorMessage}\n        />\n        <AdditionalFieldsModal\n          isDialogOpen={isAdditionalFieldsModalOpen}\n          handleDialogClose={handleAdditionalFieldsModalClose}\n          additionalFields={additionalFields}\n          setAdditionalFields={setAdditionalFields}\n        />\n      </form>\n    );\n  }\n);\n","import { createStyles, Divider, makeStyles, Theme } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 48,\n      display: \"flex\",\n      alignItems: \"center\",\n      paddingLeft: 10,\n      fontWeight: 500,\n      fontSize: \"1.125rem\",\n    },\n  })\n);\n\ninterface Props {\n  text: string;\n}\n\nexport const Header = ({ text }: Props) => {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.root}>{text}</div>\n      <Divider />\n    </>\n  );\n};\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport React, { useMemo, useState } from \"react\";\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport { QueryUser_queryUser_users_finishedForms as FinishedForms } from \"../../../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\nimport { FormResult } from \"../../..\";\nimport { LineChartPopOver } from \"../../../../lib/components\";\n\ninterface Props {\n  finishedForms: FinishedForms[] | null;\n}\n\nexport const LineChartsButton = ({ finishedForms }: Props) => {\n  const isButtonDisabled =\n    finishedForms === null || finishedForms.length === 0 ? true : false;\n  const listData: {\n    uniqueFormList: FinishedForms[];\n    resultList: FormResult[][];\n  } = useMemo(() => {\n    if (!finishedForms)\n      return { uniqueFormList: [], resultList: [] as FormResult[][] };\n    const formList: FinishedForms[] = [];\n    const resultList: FormResult[][] = [];\n    const formSet: Set<string> = new Set();\n    finishedForms.forEach((questionnaire) => {\n      if (!formSet.has(questionnaire.id)) {\n        formSet.add(questionnaire.id);\n        formList.push(questionnaire);\n        if (questionnaire.result && questionnaire.displayedFillInDate) {\n          resultList.push([\n            {\n              result: questionnaire.result,\n              fillInDate: questionnaire.displayedFillInDate,\n            },\n          ]);\n        } else {\n          resultList.push([] as FormResult[]);\n        }\n      } else if (questionnaire.result && questionnaire.displayedFillInDate) {\n        let index = 0;\n        while (index <= formList.length) {\n          if (formList[index].id === questionnaire.id) {\n            resultList[index].push({\n              result: questionnaire.result,\n              fillInDate: questionnaire.displayedFillInDate,\n            });\n            break;\n          }\n          index += 1;\n        }\n      }\n    });\n    const newResultList = resultList.map((result) => [...result].reverse());\n    return { uniqueFormList: formList, resultList: newResultList };\n  }, [finishedForms]);\n  const { uniqueFormList, resultList } = listData;\n  const [isOpen, setIsOpen] = useState(false);\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n  const openModal = () => {\n    setIsOpen(true);\n  };\n  return (\n    <>\n      <Button\n        startIcon={<EqualizerIcon />}\n        color=\"primary\"\n        disabled={isButtonDisabled}\n        onClick={openModal}\n        size=\"small\"\n      >\n        趋势\n      </Button>\n      <Dialog open={isOpen} onClose={closeModal}>\n        <DialogTitle>查看趋势</DialogTitle>\n        <DialogContent>\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>量表</TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {uniqueFormList.map((form, index) => (\n                  <TableRow key={`questionnaire-${index}`}>\n                    <TableCell>{form.name}</TableCell>\n                    <TableCell>\n                      <LineChartPopOver\n                        formResultList={resultList[index]}\n                        formName={form.name}\n                        formKey={form.key}\n                      />\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <DialogActions>\n            <Button onClick={closeModal} color=\"primary\">\n              关闭\n            </Button>\n          </DialogActions>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n};\n","import { useMutation } from \"@apollo/client\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  DialogContentText,\n  createStyles,\n  makeStyles,\n  Theme,\n  Button,\n  DialogActions,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ADDITIONAL_FIELD_KEYS,\n  ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES,\n} from \"..\";\nimport { ADD_DIAGNOSIS } from \"../../../../lib/graphql/mutations\";\nimport {\n  AddDiagnosis,\n  AddDiagnosisVariables,\n} from \"../../../../lib/graphql/mutations/AddDiagnosis/__generated__/AddDiagnosis\";\n\ninterface Props {\n  isDialogOpen: boolean;\n  handleDialogClose: () => void;\n  patientName: string;\n  patientId: string;\n  refetch: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    diagnosisText: {\n      minWidth: 250,\n    },\n  })\n);\n\nexport const AddDiagnosisModal = ({\n  isDialogOpen,\n  handleDialogClose,\n  patientName,\n  patientId,\n  refetch,\n}: Props) => {\n  const [addDiagnosis] = useMutation<AddDiagnosis, AddDiagnosisVariables>(\n    ADD_DIAGNOSIS\n  );\n  useEffect(() => {\n    setDiagnosis(\"\");\n  }, [patientName]);\n  const classes = useStyles();\n  const [diagnosis, setDiagnosis] = useState(\"\");\n  const handleDiagnosisSelectChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setDiagnosis(e.target.value as string);\n  };\n  const handleComfirm = async () => {\n    if (diagnosis !== \"\") {\n      await addDiagnosis({\n        variables: {\n          input: {\n            patientId,\n            diagnosis:\n              ADDITIONAL_FIELD_KEYS[\n                ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES.indexOf(\n                  diagnosis as typeof ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES[number]\n                )\n              ],\n          },\n        },\n      });\n    } else {\n      await addDiagnosis({\n        variables: {\n          input: {\n            patientId,\n            diagnosis,\n          },\n        },\n      });\n    }\n    handleDialogClose();\n    refetch();\n  };\n  return (\n    <Dialog open={isDialogOpen} onClose={handleDialogClose}>\n      <DialogTitle>诊断</DialogTitle>\n      <DialogContent>\n        <DialogContentText className={classes.diagnosisText}>\n          给{patientName}添加诊断\n        </DialogContentText>\n        <FormControl fullWidth>\n          <InputLabel shrink>诊断</InputLabel>\n          <Select value={diagnosis} onChange={handleDiagnosisSelectChange}>\n            {ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES.map((option) => (\n              <MenuItem value={option} key={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleDialogClose}>取消</Button>\n        <Button onClick={handleComfirm} color=\"primary\">\n          确认\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import {\n  Button,\n  createStyles,\n  IconButton,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n  Theme,\n} from \"@material-ui/core\";\nimport React, { ChangeEvent, useEffect, useState, MouseEvent } from \"react\";\nimport { ErrorIndicator, LoadingIndicator } from \"../../../../lib/components\";\nimport {\n  QueryUser,\n  QueryUser_queryUser_users_finishedForms as QuestionnaireData,\n} from \"../../../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\nimport NoteIcon from \"@material-ui/icons/Note\";\n// import { HelpPopover } from \"../HelpPopover\";\nimport {\n  ADDITIONAL_FIELD_KEYS,\n  ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES,\n  ChooseFormModal,\n} from \"..\";\nimport { UsersFilter } from \"../../../../lib/graphql/globalTypes\";\nimport { LineChartsButton } from \"../LineChartsButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { AddDiagnosisModal } from \"../AddDiagnosisModal\";\nimport { PRIMARY_COLOR } from \"../../../..\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      marginTop: 20,\n      width: \"calc(100% - 20px)\",\n      minWidth: 1085,\n      fontSize: \"0.9rem\",\n    },\n    loadingIndicatorWrapper: {\n      width: \"100%\",\n      height: 200,\n    },\n    reportButton: {\n      backgroundColor: \"#fff\",\n      color: PRIMARY_COLOR,\n      \"&:hover\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n    lineChartsButtonContainer: {\n      marginRight: 5,\n    },\n    tableCell: {\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n    },\n    iconMargin: {\n      marginRight: 5,\n    },\n  })\n);\nconst tableColumnTexts = [\n  \"门诊号\",\n  \"姓名\",\n  \"性别\",\n  \"年龄\",\n  \"教育\",\n  \"职业\",\n  \"婚姻\",\n  \"注册时间\",\n  \"医生\",\n  \"诊断\",\n];\nconst tableColumns = [\n  \"userName\",\n  \"name\",\n  \"gender\",\n  \"age\",\n  \"education\",\n  \"jobStatus\",\n  \"marriageStatus\",\n  \"signUpDate\",\n  \"doctorName\",\n  \"diagnosis\",\n] as const;\n\nconst tableMinWidth = [70, 80, 60, 60, 90, 70, 60, 150, 80, 140] as const;\nconst tableMaxWidth = [140, 80, 60, 60, 90, 70, 60, 150, 80, 140] as const;\n\ninterface Props {\n  loading: boolean;\n  patientList?: QueryUser;\n  selectedUserAnswerIds: string[] | null;\n  setSelectedUserId: (userId: string | null) => void;\n  setSelectedUserAnswerIds: (selectedFormIds: string[] | null) => void;\n  setIsReportShown: (isReportShown: boolean) => void;\n  limit: number;\n  currentPageIndex: number;\n  handleLimitChange: (limit: number) => void;\n  handleCurrentPageIndexChange: (currentPageIndex: number) => void;\n  filter: UsersFilter;\n  setFilter: (filter: UsersFilter) => void;\n  handleSortChange: () => void;\n  refetch: () => void;\n}\nexport const PatientTable = (props: Props) => {\n  const classes = useStyles();\n  const {\n    loading,\n    patientList,\n    selectedUserAnswerIds,\n    setSelectedUserId,\n    setSelectedUserAnswerIds,\n    setIsReportShown,\n    limit,\n    currentPageIndex,\n    handleLimitChange,\n    handleCurrentPageIndexChange,\n    filter,\n    handleSortChange,\n    refetch,\n  } = props;\n  const [showError, setShowError] = useState(false);\n  const [isChooseFormModalShown, setIsChooseFormModalShown] = useState(false);\n  const [finishedFormList, setFinishedFormList] = useState<\n    QuestionnaireData[] | null\n  >(null);\n\n  const handleReportButtonClick = (\n    finishedForms: QuestionnaireData[],\n    userId: string\n  ) => {\n    setSelectedUserId(userId);\n    setFinishedFormList(finishedForms);\n    const selectedUserAnswerIds = finishedForms\n      .map((finishedForm) => finishedForm.userAnswerId)\n      .filter((finishedForm): finishedForm is string => finishedForm !== null);\n    setSelectedUserAnswerIds(selectedUserAnswerIds);\n    setIsChooseFormModalShown(true);\n  };\n  const closeModal = () => {\n    setIsChooseFormModalShown(false);\n  };\n  const onOkButtonClick = () => {\n    setIsReportShown(true);\n  };\n  const [isAddDiagnosisModalShown, setIsAddDiagnosisModalShown] = useState(\n    false\n  );\n  const [addDiagnosisPatientId, setAddDiagnosisPatientId] = useState<\n    string | null\n  >(null);\n  const handleAddDiagnosisModalClose = () => {\n    setIsAddDiagnosisModalShown(false);\n  };\n  const openAddDiagnosisModal = () => {\n    setIsAddDiagnosisModalShown(true);\n  };\n  const [addDiagnosisPatientName, setAddDiagnosisPatientName] = useState<\n    string | null\n  >(null);\n  const handleEditDiagnosisButtonClick = (\n    patientName: string,\n    patientId: string\n  ) => {\n    setAddDiagnosisPatientName(patientName);\n    setAddDiagnosisPatientId(patientId);\n    openAddDiagnosisModal();\n  };\n  useEffect(() => {\n    if (\n      loading === false &&\n      patientList !== undefined &&\n      patientList.queryUser.users.length === 0\n    ) {\n      setShowError(true);\n    }\n  }, [loading, patientList]);\n  if (loading) {\n    return (\n      <div className={classes.loadingIndicatorWrapper}>\n        <LoadingIndicator />\n      </div>\n    );\n  }\n  if (patientList === undefined) {\n    return null;\n  }\n  if (patientList.queryUser.users.length === 0) {\n    return (\n      <ErrorIndicator\n        showError={showError}\n        setShowError={setShowError}\n        errorMessage=\"未找到符合条件的病人！\"\n      />\n    );\n  }\n\n  const handleRowsPerPageChange = (\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    handleLimitChange(Number(event.target.value));\n  };\n\n  const handlePageChange = (\n    _event: MouseEvent<HTMLButtonElement> | null,\n    page: number\n  ) => {\n    handleCurrentPageIndexChange(page);\n  };\n\n  const labelDisplayedRows = ({\n    from,\n    to,\n    count,\n  }: {\n    from: number;\n    to: number;\n    count: number;\n  }): string => {\n    return `共计${count}条数据，当前为第${Math.ceil(from / limit)}页`;\n  };\n  return (\n    <>\n      <TableContainer component={Paper} className={classes.root}>\n        <TablePagination\n          rowsPerPage={limit}\n          rowsPerPageOptions={[5, 10, 25]}\n          page={currentPageIndex}\n          count={patientList.queryUser.total}\n          onChangePage={handlePageChange}\n          component=\"div\"\n          onChangeRowsPerPage={handleRowsPerPageChange}\n          labelDisplayedRows={labelDisplayedRows}\n        />\n        <Table size=\"small\" aria-label=\"病人列表\">\n          <TableHead>\n            <TableRow>\n              {tableColumnTexts.map((text, index) => (\n                <TableCell\n                  key={text}\n                  style={{\n                    minWidth: tableMinWidth[index],\n                    maxWidth: tableMaxWidth[index],\n                    padding: 5,\n                    paddingLeft: index === 0 ? 10 : undefined,\n                  }}\n                  className={classes.tableCell}\n                >\n                  {tableColumns[index] === \"signUpDate\" ? (\n                    <TableSortLabel\n                      active={tableColumns[index] === \"signUpDate\"}\n                      direction={\n                        filter === UsersFilter.DATE_LATEST ? \"desc\" : \"asc\"\n                      }\n                      onClick={handleSortChange}\n                    >\n                      {text}\n                    </TableSortLabel>\n                  ) : (\n                    text\n                  )}\n                </TableCell>\n              ))}\n              <TableCell\n                style={{\n                  padding: 5,\n                }}\n              />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {patientList.queryUser.users.map((patientInformation) => {\n              const isReportButtonDisabled =\n                !patientInformation.finishedForms ||\n                patientInformation.finishedForms.length === 0;\n\n              return (\n                <TableRow key={patientInformation.userName}>\n                  {tableColumns.map((column, index) => {\n                    const content =\n                      index === tableColumns.length - 1\n                        ? ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES[\n                            ADDITIONAL_FIELD_KEYS.indexOf(\n                              patientInformation[\n                                column\n                              ] as typeof ADDITIONAL_FIELD_KEYS[number]\n                            )\n                          ]\n                        : patientInformation[column];\n                    return (\n                      <TableCell\n                        key={column}\n                        style={{\n                          minWidth: tableMinWidth[index],\n                          maxWidth: tableMaxWidth[index],\n                          padding: 5,\n                          paddingLeft: index === 0 ? 10 : undefined,\n                        }}\n                        className={classes.tableCell}\n                        title={content || undefined}\n                      >\n                        {index === tableColumns.length - 1 ? (\n                          <>\n                            <IconButton\n                              aria-label=\"delete\"\n                              className={classes.iconMargin}\n                              size=\"small\"\n                              color=\"primary\"\n                              onClick={() =>\n                                patientInformation.name &&\n                                handleEditDiagnosisButtonClick(\n                                  patientInformation.name,\n                                  patientInformation.id\n                                )\n                              }\n                            >\n                              <EditIcon fontSize=\"inherit\" />\n                            </IconButton>\n                            {content}\n                          </>\n                        ) : (\n                          content\n                        )}\n                      </TableCell>\n                    );\n                  })}\n                  <TableCell style={{ minWidth: 180, padding: 0 }}>\n                    <div style={{ display: \"flex\" }}>\n                      <span className={classes.lineChartsButtonContainer}>\n                        <LineChartsButton\n                          finishedForms={patientInformation.finishedForms}\n                        />\n                      </span>\n                      <Button\n                        size=\"small\"\n                        // className={classes.reportButton}\n                        color=\"primary\"\n                        startIcon={<NoteIcon />}\n                        disabled={isReportButtonDisabled}\n                        onClick={() =>\n                          patientInformation.finishedForms &&\n                          handleReportButtonClick(\n                            patientInformation.finishedForms,\n                            patientInformation.id\n                          )\n                        }\n                      >\n                        报告\n                      </Button>\n                      {/* {isReportButtonDisabled && patientInformation.name && (\n                        <HelpPopover name={patientInformation.name} />\n                      )} */}\n                    </div>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {finishedFormList && selectedUserAnswerIds && (\n        <ChooseFormModal\n          isOpen={isChooseFormModalShown}\n          closeModal={closeModal}\n          finishedFormList={finishedFormList}\n          selectedUserAnswerIds={selectedUserAnswerIds}\n          setSelectedUserAnswerIds={setSelectedUserAnswerIds}\n          onOkButtonClick={onOkButtonClick}\n        />\n      )}\n      {addDiagnosisPatientName && addDiagnosisPatientId && (\n        <AddDiagnosisModal\n          isDialogOpen={isAddDiagnosisModalShown}\n          handleDialogClose={handleAddDiagnosisModalClose}\n          patientName={addDiagnosisPatientName}\n          patientId={addDiagnosisPatientId}\n          refetch={refetch}\n        />\n      )}\n    </>\n  );\n};\n","import {\n  Button,\n  Checkbox,\n  createStyles,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Theme,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { QueryUser_queryUser_users_finishedForms as QuestionnaireData } from \"../../../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\n\ninterface Props {\n  isOpen: boolean;\n  closeModal: () => void;\n  finishedFormList: QuestionnaireData[];\n  selectedUserAnswerIds: string[];\n  setSelectedUserAnswerIds: (selectedUserAnswerIds: string[]) => void;\n  onOkButtonClick: () => void;\n}\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formName: {\n      maxWidth: 300,\n      textOverflow: \"ellipsis\",\n      overflow: \"hidden\",\n      whiteSpace: \"nowrap\",\n    },\n  })\n);\n\nexport const ChooseFormModal = ({\n  isOpen,\n  closeModal,\n  finishedFormList,\n  selectedUserAnswerIds,\n  setSelectedUserAnswerIds,\n  onOkButtonClick,\n}: Props) => {\n  const classes = useStyles();\n  const handleSelectAllCheckBoxClick = () => {\n    if (selectedUserAnswerIds.length < finishedFormList.length) {\n      setSelectedUserAnswerIds(\n        finishedFormList\n          .map((form) => form.userAnswerId)\n          .filter(\n            (userAnswerId): userAnswerId is string => userAnswerId !== null\n          )\n      );\n    } else {\n      setSelectedUserAnswerIds([]);\n    }\n  };\n  const handleSelectCheckBoxClick = (formId: string) => {\n    if (selectedUserAnswerIds.indexOf(formId) !== -1) {\n      setSelectedUserAnswerIds(\n        selectedUserAnswerIds.filter(\n          (currentUserAnswerId) => currentUserAnswerId !== formId\n        )\n      );\n    } else {\n      setSelectedUserAnswerIds([...selectedUserAnswerIds, formId]);\n    }\n  };\n  const handleOkButtonClick = () => {\n    onOkButtonClick();\n    closeModal();\n  };\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={closeModal}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      maxWidth=\"md\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">请选择要生成报告的量表</DialogTitle>\n      <DialogContent>\n        <TableContainer>\n          <Table size=\"small\" aira-label=\"选择量表，生成报告\">\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={\n                      selectedUserAnswerIds.length ===\n                        finishedFormList.length &&\n                      selectedUserAnswerIds.length !== 0\n                    }\n                    onChange={handleSelectAllCheckBoxClick}\n                  />\n                </TableCell>\n                <TableCell>全部已完成量表</TableCell>\n                <TableCell>完成时间</TableCell>\n                <TableCell>医生</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {finishedFormList.map((form, index) => (\n                <TableRow key={`questionnaire-${index}`}>\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={\n                        !!form.userAnswerId &&\n                        selectedUserAnswerIds.indexOf(form.userAnswerId) !== -1\n                      }\n                      onChange={() =>\n                        form.userAnswerId &&\n                        handleSelectCheckBoxClick(form.userAnswerId)\n                      }\n                    />\n                  </TableCell>\n                  <TableCell className={classes.formName}>\n                    {form.name}\n                  </TableCell>\n                  <TableCell>{form.displayedFillInDate || null}</TableCell>\n                  <TableCell>{form.doctorName || null}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={closeModal}>取消</Button>\n        <Button\n          onClick={handleOkButtonClick}\n          color=\"primary\"\n          autoFocus\n          disabled={selectedUserAnswerIds.length === 0}\n        >\n          确定\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import {\n  createStyles,\n  IconButton,\n  makeStyles,\n  Popover,\n  Theme,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    popover: {\n      pointerEvents: \"none\",\n    },\n    paper: {\n      padding: theme.spacing(1),\n    },\n    icon: {\n      width: 22,\n      height: 22,\n    },\n  })\n);\n\ninterface Props {\n  name: string;\n}\nexport const HelpPopover = ({ name }: Props) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\n  const open = Boolean(anchorEl);\n  const handlePopoverOpen = (\n    event: React.MouseEvent<HTMLElement, MouseEvent>\n  ) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <>\n      <IconButton\n        color=\"primary\"\n        size=\"small\"\n        onMouseEnter={handlePopoverOpen}\n        onMouseLeave={handlePopoverClose}\n      >\n        <HelpOutlineIcon className={classes.icon} />\n      </IconButton>\n      <Popover\n        id=\"mouse-over-popover\"\n        className={classes.popover}\n        classes={{\n          paper: classes.paper,\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        onClose={handlePopoverClose}\n        disableRestoreFocus\n      >\n        {name}未填写任何量表！\n      </Popover>\n    </>\n  );\n};\n","import { useLazyQuery } from \"@apollo/client\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core\";\nimport React, { ElementRef, useEffect, useRef, useState } from \"react\";\nimport { ReportPdf } from \"../../lib/components\";\nimport { UsersFilter } from \"../../lib/graphql/globalTypes\";\nimport { QUERY_USER } from \"../../lib/graphql/queries/QueryUser\";\nimport {\n  QueryUser,\n  QueryUserVariables,\n} from \"../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\nimport {\n  Header,\n  PatientTable,\n  SearchPatientForm,\n  withReportPdfDataForAdmin,\n} from \"./components\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    content: {\n      padding: \"5px 10px\",\n    },\n  })\n);\nconst PdfViewer = withReportPdfDataForAdmin(ReportPdf);\n\nexport const INITIAL_LIMIT = 10;\nexport const INITIAL_CURRENT_PAGE_INDEX = 0;\nexport const INITAL_ONLY_MY_PATIENT = false;\n\nexport const PatientInformation = () => {\n  const [getQueryResult, { loading, data: userListData }] = useLazyQuery<\n    QueryUser,\n    QueryUserVariables\n  >(QUERY_USER, { fetchPolicy: \"no-cache\" });\n  const searchFormRef = useRef<ElementRef<typeof SearchPatientForm>>(null);\n  const [limit, setLimit] = useState(INITIAL_LIMIT);\n  const [currentPageIndex, setCurrentPageIndex] = useState(\n    INITIAL_CURRENT_PAGE_INDEX\n  );\n  const [filter, setFilter] = useState<UsersFilter>(UsersFilter.DATE_LATEST);\n  const classes = useStyles();\n  const [selectedUserAnswerIds, setSelectedUserAnswerIds] = useState<\n    string[] | null\n  >(null);\n  const [selectedUserId, setSelectedUserId] = useState<string | null>(null);\n  const [isReportShown, setIsReportShown] = useState(false);\n  const closeReport = () => {\n    setIsReportShown(false);\n  };\n  const searchPatients = (params: QueryUserVariables) => {\n    getQueryResult({ variables: params });\n    setSearchParams(params);\n  };\n  const getQueryResultRef = useRef(getQueryResult);\n  const [searchParams, setSearchParams] = useState<QueryUserVariables>({\n    limit: INITIAL_LIMIT,\n    currentPageIndex: INITIAL_CURRENT_PAGE_INDEX,\n  });\n  const handleLimitChange = (limit: number): void => {\n    setLimit(limit);\n    setCurrentPageIndex(0);\n    getQueryResult({\n      variables: { ...searchParams, limit, currentPageIndex: 0, filter },\n    });\n  };\n  const handleCurrentPageIndexChange = (currentPageIndex: number): void => {\n    setCurrentPageIndex(currentPageIndex);\n    getQueryResult({\n      variables: { ...searchParams, limit, currentPageIndex, filter },\n    });\n  };\n  const refetch = () => {\n    getQueryResult({\n      variables: { ...searchParams, limit, currentPageIndex, filter },\n    });\n  };\n  const handleSortChange = () => {\n    const newFilter =\n      filter === UsersFilter.DATE_LATEST\n        ? UsersFilter.DATE_OLDEST\n        : UsersFilter.DATE_LATEST;\n    setFilter(newFilter);\n    setCurrentPageIndex(0);\n    getQueryResult({\n      variables: {\n        ...searchParams,\n        limit,\n        currentPageIndex: 0,\n        filter: newFilter,\n      },\n    });\n  };\n  useEffect(() => {\n    getQueryResultRef.current({\n      variables: {\n        limit: INITIAL_LIMIT,\n        currentPageIndex: INITIAL_CURRENT_PAGE_INDEX,\n        filter: UsersFilter.DATE_LATEST,\n        onlyMyPatient: INITAL_ONLY_MY_PATIENT,\n      },\n    });\n  }, []);\n  if (isReportShown && selectedUserId && selectedUserAnswerIds) {\n    return (\n      <PdfViewer\n        userId={selectedUserId}\n        userAnswerIds={selectedUserAnswerIds}\n        closeReport={closeReport}\n      />\n    );\n  }\n  return (\n    <div>\n      <Header text={\"搜索病人信息\"} />\n      <div className={classes.content}>\n        <SearchPatientForm\n          searchPatients={searchPatients}\n          limit={limit}\n          currentPageIndex={currentPageIndex}\n          ref={searchFormRef}\n          setCurrentPageIndex={setCurrentPageIndex}\n          filter={filter}\n        />\n        <PatientTable\n          loading={loading}\n          patientList={userListData}\n          selectedUserAnswerIds={selectedUserAnswerIds}\n          setSelectedUserId={setSelectedUserId}\n          setSelectedUserAnswerIds={setSelectedUserAnswerIds}\n          setIsReportShown={setIsReportShown}\n          limit={limit}\n          currentPageIndex={currentPageIndex}\n          handleLimitChange={handleLimitChange}\n          handleCurrentPageIndexChange={handleCurrentPageIndexChange}\n          filter={filter}\n          setFilter={setFilter}\n          handleSortChange={handleSortChange}\n          refetch={refetch}\n        />\n      </div>\n    </div>\n  );\n};\n","import { useQuery } from \"@apollo/client\";\nimport React, { ComponentType, PropsWithChildren } from \"react\";\nimport { LoadingIndicator } from \"../../../../lib/components\";\nimport { REPORT_FOR_ADMIN } from \"../../../../lib/graphql/queries\";\nimport {\n  ReportForAdmin as ReportData,\n  ReportForAdminVariables,\n} from \"../../../../lib/graphql/queries/ReportForAdmin/__generated__/ReportForAdmin\";\n\nexport const withReportPdfDataForAdmin = (\n  WrappedComponent: ComponentType<\n    PropsWithChildren<{ pdfData: string; closeReport: () => void }>\n  >\n) => {\n  return ({\n    children,\n    userAnswerIds,\n    closeReport,\n    userId,\n  }: PropsWithChildren<{\n    userAnswerIds: string[];\n    closeReport: () => void;\n    userId: string;\n  }>) => {\n    // Get PDF data.\n    const { data, loading } = useQuery<ReportData, ReportForAdminVariables>(\n      REPORT_FOR_ADMIN,\n      {\n        variables: {\n          userAnswerIds,\n          userId,\n        },\n        fetchPolicy: \"no-cache\",\n      }\n    );\n\n    if (loading || !data) {\n      return <LoadingIndicator />;\n    }\n\n    if (data.reportForAdmin && data.reportForAdmin.pdf) {\n      return (\n        <WrappedComponent\n          pdfData={data.reportForAdmin.pdf}\n          closeReport={closeReport}\n        >\n          {children}\n        </WrappedComponent>\n      );\n    }\n\n    return null;\n  };\n};\n","import {\n  makeStyles,\n  Theme,\n  createStyles,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { Doctor } from \"../../../../lib/type\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      overflow: \"hidden\",\n    },\n    actionContainer: {\n      float: \"right\",\n      paddingRight: 10,\n      paddingTop: 10,\n      fontSize: \"0.875rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    welcomeMessage: {\n      paddingRight: 10,\n      paddingBottom: 1,\n    },\n  })\n);\n\ninterface Props {\n  handleDoctorLogOut: () => void;\n  doctor: Doctor;\n}\n\nexport const Header = ({ handleDoctorLogOut, doctor }: Props) => {\n  const classes = useStyles();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const handleCloseDialog = () => {\n    setIsDialogOpen(false);\n  };\n  const openDialog = () => {\n    setIsDialogOpen(true);\n  };\n  const logOutDoctor = () => {\n    setIsDialogOpen(false);\n    handleDoctorLogOut();\n  };\n  return (\n    <div className={classes.root}>\n      <span className={classes.actionContainer}>\n        <span className={classes.welcomeMessage}>{doctor.name}医生已登入</span>\n        <Button\n          color=\"secondary\"\n          startIcon={<ExitToAppIcon />}\n          onClick={openDialog}\n        >\n          退出\n        </Button>\n      </span>\n      <Dialog\n        open={isDialogOpen}\n        onClose={handleCloseDialog}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"确认退出？\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            退出后需要输入医生的账号和密码才能重新登入\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog}>取消</Button>\n          <Button onClick={logOutDoctor} color=\"secondary\">\n            退出\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import {\n  Button,\n  createStyles,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n  makeStyles,\n  TextField,\n  Theme,\n} from \"@material-ui/core\";\nimport React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useState,\n} from \"react\";\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\n\ninterface Props {\n  isDialogOpen: boolean;\n  setIsDialogOpen: (isDialogOpen: boolean) => void;\n  doctorName: string;\n  handleDoctorLogIn: (password: string) => void;\n  hideErrorIndicator: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    passwordInput: {\n      minWidth: 300,\n    },\n  })\n);\n\nexport interface DoctorLogInDialogHandle {\n  showError: () => void;\n  hideError: () => void;\n}\n\nexport const DoctorLogInDialog = forwardRef<DoctorLogInDialogHandle, Props>(\n  (props: Props, ref) => {\n    const handleKeyPress = (event: KeyboardEvent) => {\n      if (event.key === \"Enter\") {\n        handleClickLogIn();\n      }\n    };\n    useEffect(() => {\n      window.addEventListener(\"keydown\", handleKeyPress);\n\n      return () => {\n        window.removeEventListener(\"keydown\", handleKeyPress);\n      };\n    });\n    const classes = useStyles();\n    const {\n      isDialogOpen,\n      setIsDialogOpen,\n      doctorName,\n      handleDoctorLogIn,\n      hideErrorIndicator,\n    } = props;\n    const [password, setPassword] = useState(\"\");\n    const [isErrorShown, setIsErrorShown] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n      showError: () => {\n        setIsErrorShown(true);\n      },\n      hideError: () => {\n        setIsErrorShown(false);\n      },\n    }));\n    const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      hideErrorIndicator();\n      setPassword(e.target.value);\n    };\n    const handleClickLogIn = () => {\n      handleDoctorLogIn(password);\n    };\n    const handleClickCancel = () => {\n      setIsDialogOpen(false);\n    };\n    return (\n      <Dialog open={isDialogOpen} onClose={handleClickCancel}>\n        <DialogTitle>请确认您的密码</DialogTitle>\n        <DialogContent>\n          <DialogContentText>当前登入的医生为{doctorName}</DialogContentText>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item>\n              <VpnKeyIcon />\n            </Grid>\n            <Grid item>\n              <TextField\n                autoFocus\n                className={classes.passwordInput}\n                label=\"密码\"\n                type=\"password\"\n                value={password}\n                onChange={handlePasswordChange}\n                helperText={\n                  isErrorShown && !password ? \"请输入您的密码\" : undefined\n                }\n                error={isErrorShown && !password ? true : undefined}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClickCancel} color=\"primary\">\n            取消\n          </Button>\n          <Button onClick={handleClickLogIn} color=\"primary\">\n            确认\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n);\n","import { Button, createStyles, makeStyles, Theme } from \"@material-ui/core\";\nimport React, { ElementRef, useRef, useState } from \"react\";\nimport { DoctorLogInDialog } from \"./components\";\nimport logo from \"../AppHeader/assets/logo.png\";\nimport PlayArrowRoundedIcon from \"@material-ui/icons/PlayArrowRounded\";\nimport { FetchResult } from \"@apollo/client\";\n// import { DOCTOR_LOG_OUT } from \"../../lib/graphql/mutations\";\nimport { Doctor } from \"../../lib/type\";\n// import { DoctorLogOut } from \"../../lib/graphql/mutations/DoctorLogOut/__generated__/doctorLogOut\";\nimport { useHistory } from \"react-router-dom\";\nimport { ErrorIndicator } from \"../../lib/components\";\nimport {\n  DoctorLogIn,\n  DoctorLogInVariables,\n} from \"../../lib/graphql/mutations/DoctorLogIn/__generated__/DoctorLogIn\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: \"100%\",\n      width: \"100%\",\n      background: \"#e3f2fd\",\n    },\n    logoContainer: {\n      display: \"flex\",\n      minHeight: 92,\n      maxHeight: 290,\n      height: \"calc(100% - 560px)\",\n      justifyContent: \"center\",\n    },\n    logo: {\n      maxHeight: 92,\n      height: \"100%\",\n      marginTop: \"auto\",\n    },\n    actionContainer: {\n      maxHeight: 160,\n      padding: 20,\n      display: \"flex\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      fontSize: \"1.5rem\",\n    },\n    enterSystemButtonContainer: {\n      marginTop: 18,\n    },\n    extendedIcon: {\n      position: \"absolute\",\n      right: 20,\n      bottom: 20,\n      backgroundColor: \"#fff\",\n    },\n    seuText: {\n      margin: \"10px 0 15px\",\n    },\n    header: {\n      height: 52,\n    },\n  })\n);\n\ninterface Props {\n  doctor: Doctor;\n  setDoctor: (doctor: Doctor) => void;\n  logIn: (variables?: {\n    variables: DoctorLogInVariables;\n  }) => Promise<FetchResult<DoctorLogIn>>;\n}\n\nexport const Welcome = ({ setDoctor, doctor, logIn }: Props) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const doctorLogInDialogRef = useRef<ElementRef<typeof DoctorLogInDialog>>(\n    null\n  );\n  // const [logOut] = useMutation<DoctorLogOut>(DOCTOR_LOG_OUT, {\n  //   onCompleted: (data) => {\n  //     if (data && data.doctorLogOut) {\n  //       setDoctor(data.doctorLogOut);\n  //       sessionStorage.removeItem(\"token\");\n  //       console.log(\"log out successfully\");\n  //     }\n  //   },\n  //   onError: (error) => {\n  //     console.log(error);\n  //     console.log(\"log out failed\");\n  //   },\n  // });\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  // const openDoctorLoginDialog = () => {\n  //   doctorLogInDialogRef.current?.hideError();\n  //   setIsDialogOpen(true);\n  // };\n  // const handleDoctorLogOut = () => {\n  //   logOut();\n  // };\n  const [isLogInErrorShown, setIsLogInErrorShown] = useState(false);\n  const handleDoctorLogIn = async (password: string) => {\n    if (doctor.userName) {\n      if (!password) {\n        doctorLogInDialogRef.current?.showError();\n        return;\n      }\n      try {\n        const logInResult = await logIn({\n          variables: {\n            input: {\n              userName: doctor.userName,\n              password,\n            },\n          },\n        });\n        if (logInResult.data && logInResult.data.doctorLogIn.userName) {\n          console.log(\"Second login succeeds.\");\n          history.push(\"/doctor\");\n        }\n      } catch {\n        setIsLogInErrorShown(true);\n      }\n    }\n  };\n  const hideErrorIndicator = () => {\n    setIsLogInErrorShown(false);\n  };\n  const goToPromptPage = () => {\n    history.push(\"/user/prompt\");\n  };\n  return (\n    <div className={classes.root}>\n      <div className={classes.header} />\n      {/* <Header handleDoctorLogOut={handleDoctorLogOut} doctor={doctor} /> */}\n      <div className={classes.logoContainer}>\n        <img src={logo} alt=\"中大医院\" className={classes.logo} />\n      </div>\n      <div className={classes.actionContainer}>\n        <div className={classes.seuText}>东南大学附属中大医院</div>\n        <div>心理健康评估系统</div>\n        <div className={classes.enterSystemButtonContainer}>\n          <Button\n            startIcon={<PlayArrowRoundedIcon />}\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={goToPromptPage}\n          >\n            进入系统\n          </Button>\n        </div>\n      </div>\n      {/* <Fab\n        variant=\"extended\"\n        className={classes.extendedIcon}\n        onClick={openDoctorLoginDialog}\n      >\n        <SupervisorAccountIcon />\n        医生端\n      </Fab> */}\n      {doctor.name && (\n        <DoctorLogInDialog\n          isDialogOpen={isDialogOpen}\n          setIsDialogOpen={setIsDialogOpen}\n          doctorName={doctor.name}\n          handleDoctorLogIn={handleDoctorLogIn}\n          hideErrorIndicator={hideErrorIndicator}\n          ref={doctorLogInDialogRef}\n        />\n      )}\n      <ErrorIndicator\n        showError={isLogInErrorShown}\n        setShowError={setIsLogInErrorShown}\n        errorMessage={\"密码不正确！\"}\n      />\n    </div>\n  );\n};\n","import { makeStyles, Theme, createStyles, Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport { ReturnToHomeHeader } from \"../../lib/components\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      background: \"#e3f2fd\",\n      height: \"100%\",\n      width: \"100%\",\n    },\n    titleWrapper: {\n      height: \"100%\",\n    },\n    title: {\n      fontSize: \"1.5rem\",\n      textAlign: \"center\",\n    },\n    promptTextContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      paddingTop: 50,\n      background: \"#e3f2fd\",\n    },\n    promptText: {\n      width: \"50%\",\n      minWidth: \"min(85%, 400px)\",\n      lineHeight: \"1.5rem\",\n    },\n    buttonContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      paddingTop: 50,\n      background: \"#e3f2fd\",\n      paddingBottom: 20,\n    },\n    titleContainer: {\n      minHeight: 75,\n      maxHeight: 290,\n      height: \"calc(100% - 610px)\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"flex-end\",\n      background: \"#e3f2fd\",\n    },\n  })\n);\nexport const PromptMessage = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <ReturnToHomeHeader />\n      <div className={classes.titleContainer}>\n        <div className={classes.title}>指导语</div>\n      </div>\n      <div className={classes.promptTextContainer}>\n        <div className={classes.promptText}>\n          在接下来大约20分钟的时间里您将进行一系列的量表评估，目的是对您的心理状况及个性特征进行评估，下面的问题并不存在所谓正确或者错误的答案，您只需要按照自己真实的状况完成就可以了。也许您会觉得自己并不完全如题目所描述的那样，这时候您可以根据选项选择最接近您的状况。请记住，这里并没有正确或错误，您只要如实回答问题就可以了。\n        </div>\n      </div>\n      <div className={classes.buttonContainer}>\n        <Link to=\"/user/login\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            endIcon={<NavigateNextIcon />}\n          >\n            下一步\n          </Button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import { gql } from \"@apollo/client\";\n\nexport const PATIENT_LOG_IN = gql`\n  mutation PatientLogIn($input: UserLoginInput) {\n    patientLogIn(input: $input) {\n      name\n      userName\n      education\n      jobStatus\n      gender\n      marriageStatus\n      age\n      didRequest\n    }\n  }\n`;\n","import {\n  makeStyles,\n  Theme,\n  createStyles,\n  Button,\n  TextField,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Snackbar,\n  Grid,\n} from \"@material-ui/core\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport { LoadingIndicator, ReturnToHomeHeader } from \"../../lib/components\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\nimport { QUERY_USER } from \"../../lib/graphql/queries/QueryUser\";\nimport {\n  QueryUser,\n  QueryUserVariables,\n} from \"../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport WcIcon from \"@material-ui/icons/Wc\";\nimport AccessibilityIcon from \"@material-ui/icons/Accessibility\";\nimport ChildCareIcon from \"@material-ui/icons/ChildCare\";\nimport SchoolIcon from \"@material-ui/icons/School\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport {\n  PatientLogIn,\n  PatientLogInVariables,\n} from \"../../lib/graphql/mutations/PatientLogIn/__generated__/PatientLogIn\";\nimport { Patient } from \"../../lib/type\";\nimport { PATIENT_LOG_IN } from \"../../lib/graphql/mutations/PatientLogIn\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      background: \"#e3f2fd\",\n      height: \"100%\",\n      width: \"100%\",\n    },\n    titleWrapper: {\n      height: \"100%\",\n    },\n    title: {\n      fontSize: \"1.5rem\",\n      textAlign: \"center\",\n    },\n    buttonContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      paddingTop: 50,\n      background: \"#e3f2fd\",\n      paddingBottom: 20,\n    },\n    titleContainer: {\n      minHeight: 75,\n      maxHeight: 290,\n      height: \"calc(100% - 630px)\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"flex-end\",\n      background: \"#e3f2fd\",\n    },\n    inputContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      paddingTop: 50,\n    },\n    personalInformationContainer: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      paddingTop: 20,\n      background: \"#e3f2fd\",\n    },\n    input: {\n      width: 250,\n      paddingTop: 5,\n      paddingBottom: 5,\n    },\n    actionsWrapper: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      background: \"#e3f2fd\",\n    },\n    actionsContainer: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      paddingTop: 50,\n      background: \"#e3f2fd\",\n      paddingBottom: 20,\n      width: 300,\n    },\n  })\n);\n\ninterface Props {\n  setPatient: (patient: Patient) => void;\n  patient: Patient;\n}\n\nfunction useQueryParams() {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport const PatientLogin = ({ setPatient, patient }: Props) => {\n  const queryParams = useQueryParams();\n  const initRef = useRef(() => {\n    const userName = queryParams.get(\"userName\");\n    if (userName) {\n      setUserName(userName);\n      handleNextButtonClick(userName);\n    }\n  });\n  useEffect(() => {\n    initRef.current();\n  }, []);\n  const handleKeyPress = (event: KeyboardEvent) => {\n    if (event.key === \"Enter\") {\n      if (isBasicInformationShown) {\n        handleLogInButtonClick();\n      } else {\n        handleNextButtonClick(undefined);\n      }\n    }\n  };\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyPress);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  });\n\n  const [patientLogIn] = useMutation<PatientLogIn, PatientLogInVariables>(\n    PATIENT_LOG_IN,\n    {\n      onCompleted: (data) => {\n        if (data && data.patientLogIn) {\n          setPatient(data.patientLogIn);\n        }\n      },\n    }\n  );\n  const classes = useStyles();\n  const [isUserNameValidated, setIsUserNameValidated] = useState(false);\n  const [isNameValidated, setIsNameValidated] = useState(false);\n  const [getQueryResult, { loading, data: userListData }] = useLazyQuery<\n    QueryUser,\n    QueryUserVariables\n  >(QUERY_USER, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      if (data.queryUser.total > 0) {\n        const userInfo = data.queryUser.users[0];\n        userInfo.name && setName(userInfo.name);\n        userInfo.gender && setGender(userInfo.gender);\n        userInfo.age && setAge(userInfo.age);\n        userInfo.education && setEducation(userInfo.education);\n        userInfo.jobStatus && setJobStatus(userInfo.jobStatus);\n        userInfo.marriageStatus && setMarriageStatus(userInfo.marriageStatus);\n        setShowLoadSuccess(true);\n      } else {\n        setName(\"\");\n        setGender(\"\");\n        setAge(\"\");\n        setEducation(\"\");\n        setJobStatus(\"\");\n        setMarriageStatus(\"\");\n      }\n    },\n  });\n  const [isBasicInformationShown, setIsBasicInformationShown] = useState(false);\n  const [userName, setUserName] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [education, setEducation] = useState(\"\");\n  const [jobStatus, setJobStatus] = useState(\"\");\n  const [marriageStatus, setMarriageStatus] = useState(\"\");\n  const onNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n  };\n  const onGenderChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setGender(e.target.value as string);\n  };\n  const onAgeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setAge(e.target.value);\n  };\n  const [showLoadSuccess, setShowLoadSuccess] = useState(false);\n  const handleCloseLoadSuccess = () => {\n    setShowLoadSuccess(false);\n  };\n  const handleUserNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserName(e.target.value);\n  };\n  const [showNameErrorMessage, setShowNameErrorMessage] = useState(false);\n  const handleCloseNameErrorMessage = () => {\n    setShowNameErrorMessage(false);\n  };\n  const onEducationChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setEducation(e.target.value as string);\n  };\n  const onMarriageStatusChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setMarriageStatus(e.target.value as string);\n  };\n  const onJobChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setJobStatus(e.target.value);\n  };\n  const handleNextButtonClick = async (\n    userNameFromQueryParams: string | undefined\n  ) => {\n    if (!isBasicInformationShown) {\n      if (userName || userNameFromQueryParams) {\n        await getQueryResult({\n          variables: {\n            userName: userNameFromQueryParams\n              ? userNameFromQueryParams\n              : userName,\n            limit: 1,\n            currentPageIndex: 0,\n          },\n        });\n        setIsBasicInformationShown(true);\n      } else {\n        // Show the userName cannot be empty error.\n        setIsUserNameValidated(true);\n      }\n    }\n  };\n  const handleCancel = () => {\n    setIsBasicInformationShown(false);\n  };\n  const history = useHistory();\n  const handleLogInButtonClick = async () => {\n    if (name) {\n      await patientLogIn({\n        variables: {\n          input: {\n            userName,\n            education,\n            name,\n            age: age !== \"\" ? Number(age) : undefined,\n            gender,\n            jobStatus,\n            marriageStatus,\n          },\n        },\n      });\n      history.push(\"/user/home\");\n    } else {\n      setIsNameValidated(true);\n      setShowNameErrorMessage(true);\n    }\n  };\n  return (\n    <div className={classes.root}>\n      <ReturnToHomeHeader />\n      {isBasicInformationShown ? (\n        loading ? (\n          <LoadingIndicator />\n        ) : (\n          <>\n            {userListData && userListData.queryUser.total > 0 ? (\n              <div className={classes.titleContainer}>\n                <div className={classes.title}>请核实您的个人信息</div>\n              </div>\n            ) : (\n              <div className={classes.titleContainer}>\n                <div className={classes.title}>请输入您的个人信息</div>\n              </div>\n            )}\n            <div className={classes.personalInformationContainer}>\n              <div>\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                  <Grid item>\n                    <AccountCircle />\n                  </Grid>\n                  <Grid item>\n                    <TextField\n                      label=\"姓名\"\n                      className={classes.input}\n                      required\n                      value={name}\n                      onChange={onNameChange}\n                      error={isNameValidated && !name ? true : false}\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n              <div>\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                  <Grid item>\n                    <WcIcon />\n                  </Grid>\n                  <Grid item>\n                    <FormControl size=\"small\" className={classes.input}>\n                      <InputLabel>性别</InputLabel>\n                      <Select\n                        color=\"primary\"\n                        label=\"性别\"\n                        onChange={onGenderChange}\n                        value={gender}\n                      >\n                        <MenuItem value=\"男\">男</MenuItem>\n                        <MenuItem value=\"女\">女</MenuItem>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </div>\n              <div>\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                  <Grid item>\n                    <AccessibilityIcon />\n                  </Grid>\n                  <Grid item>\n                    <TextField\n                      className={classes.input}\n                      color=\"primary\"\n                      label=\"年龄\"\n                      size=\"small\"\n                      type=\"number\"\n                      value={age}\n                      onChange={onAgeChange}\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n              <div>\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                  <Grid item>\n                    <ChildCareIcon />\n                  </Grid>\n                  <Grid item>\n                    <FormControl size=\"small\" className={classes.input}>\n                      <InputLabel>婚姻</InputLabel>\n                      <Select\n                        color=\"primary\"\n                        value={marriageStatus}\n                        onChange={onMarriageStatusChange}\n                      >\n                        <MenuItem value=\"已婚\">已婚</MenuItem>\n                        <MenuItem value=\"未婚\">未婚</MenuItem>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </div>\n              <div>\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                  <Grid item>\n                    <SchoolIcon />\n                  </Grid>\n                  <Grid item>\n                    <FormControl size=\"small\" className={classes.input}>\n                      <InputLabel>教育</InputLabel>\n                      <Select\n                        color=\"primary\"\n                        value={education}\n                        onChange={onEducationChange}\n                      >\n                        <MenuItem value=\"高中以下\">高中以下</MenuItem>\n                        <MenuItem value=\"大中专科\">大中专科</MenuItem>\n                        <MenuItem value=\"本科\">本科</MenuItem>\n                        <MenuItem value=\"硕士\">硕士</MenuItem>\n                        <MenuItem value=\"博士\">博士</MenuItem>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </div>\n              <div>\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                  <Grid item>\n                    <WorkIcon />\n                  </Grid>\n                  <Grid item>\n                    <TextField\n                      color=\"primary\"\n                      label=\"职业\"\n                      size=\"small\"\n                      className={classes.input}\n                      value={jobStatus}\n                      onChange={onJobChange}\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n            </div>\n          </>\n        )\n      ) : (\n        <>\n          <div className={classes.titleContainer}>\n            <div className={classes.title}>请输入您的门诊号</div>\n          </div>\n          <div className={classes.inputContainer}>\n            <TextField\n              label=\"门诊号\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <AssignmentIndIcon />\n                  </InputAdornment>\n                ),\n              }}\n              value={userName}\n              onChange={handleUserNameChange}\n              autoFocus\n              error={isUserNameValidated && !userName ? true : undefined}\n              helperText={\n                isUserNameValidated && !userName\n                  ? \"请输入您的门诊号\"\n                  : undefined\n              }\n            />\n          </div>\n        </>\n      )}\n      {isBasicInformationShown ? (\n        loading ? null : (\n          <div className={classes.actionsWrapper}>\n            <div className={classes.actionsContainer}>\n              <Button onClick={handleCancel}>取消</Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleLogInButtonClick}\n              >\n                确定\n              </Button>\n            </div>\n          </div>\n        )\n      ) : (\n        <div className={classes.buttonContainer}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            endIcon={<NavigateNextIcon />}\n            onClick={() => handleNextButtonClick(undefined)}\n          >\n            下一步\n          </Button>\n        </div>\n      )}\n      <Snackbar\n        open={showLoadSuccess}\n        autoHideDuration={6000}\n        onClose={handleCloseLoadSuccess}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n      >\n        <Alert\n          onClose={handleCloseLoadSuccess}\n          severity=\"success\"\n          variant=\"filled\"\n        >\n          成功载入您的个人信息\n        </Alert>\n      </Snackbar>\n      <Snackbar\n        open={showNameErrorMessage}\n        autoHideDuration={6000}\n        onClose={handleCloseNameErrorMessage}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n      >\n        <Alert\n          onClose={handleCloseNameErrorMessage}\n          severity=\"error\"\n          variant=\"filled\"\n        >\n          姓名为必填项！\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n","import { gql } from \"@apollo/client\";\n\nexport const CHECK_IF_DOCTOR_USER_NAME_UNIQUE = gql`\n  query CheckIfDoctorNameUnique($userName: String!) {\n    checkIfDoctorUserNameUnique(userName: $userName) {\n      result\n    }\n  }\n`;\n","import { Snackbar } from \"@material-ui/core\";\nimport React from \"react\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\ninterface Props {\n  showSuccess: boolean;\n  setShowSuccess: (showError: boolean) => void;\n  successMessage: string;\n}\n\nexport const SuccessIndicator = (props: Props) => {\n  const { showSuccess, setShowSuccess, successMessage } = props;\n  return (\n    <Snackbar\n      open={showSuccess}\n      onClose={() => setShowSuccess(false)}\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n    >\n      <MuiAlert\n        elevation={6}\n        variant=\"filled\"\n        severity=\"success\"\n        onClose={() => setShowSuccess(false)}\n      >\n        {successMessage}\n      </MuiAlert>\n    </Snackbar>\n  );\n};\n","import {\n  FetchResult,\n  MutationFunctionOptions,\n  QueryLazyOptions,\n} from \"@apollo/client\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions,\n  Button,\n  createStyles,\n  makeStyles,\n  Theme,\n  debounce,\n} from \"@material-ui/core\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { ErrorIndicator } from \"../../../../lib/components\";\nimport { SuccessIndicator } from \"../../../../lib/components/SuccessIndicator\";\nimport {\n  AddDoctor,\n  AddDoctorVariables,\n} from \"../../../../lib/graphql/mutations/AddDoctor/__generated__/AddDoctor\";\nimport {\n  CheckIfDoctorNameUnique,\n  CheckIfDoctorNameUniqueVariables,\n} from \"../../../../lib/graphql/queries/CheckIfDoctorNameUnique/__generated__/CheckIfDoctorNameUnique\";\n\ninterface Props {\n  isOpen: boolean;\n  closeDialog: () => void;\n  checkDoctorUserName: (\n    options: QueryLazyOptions<CheckIfDoctorNameUniqueVariables>\n  ) => void;\n  checkResult: CheckIfDoctorNameUnique | undefined;\n  addDoctor: (\n    options?: MutationFunctionOptions<AddDoctor, AddDoctorVariables>\n  ) => Promise<FetchResult<AddDoctor>>;\n  refetchListData: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    input: {\n      display: \"block\",\n      margin: 5,\n      paddingRight: 5,\n    },\n    inputContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n  })\n);\n\nexport const AddDoctorDialog = (props: Props) => {\n  const classes = useStyles();\n  const {\n    isOpen,\n    closeDialog,\n    checkDoctorUserName,\n    checkResult,\n    addDoctor,\n    refetchListData,\n  } = props;\n  const [userNameInput, setUserNameInput] = useState(\"\");\n  const [nameInput, setNameInput] = useState(\"\");\n  const [passwordInput, setPasswordInput] = useState(\"\");\n  const [secondPasswordInput, setSecondPasswordInput] = useState(\"\");\n  const [userNameDuplicate, setUserNameDubplicate] = useState(false);\n  const [isErrorShown, setIsErrorShown] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isSuccessShown, setIsSuccessShown] = useState(false);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debouncedCheckDoctorUserName = useCallback(\n    debounce(checkDoctorUserName, 300),\n    [checkDoctorUserName]\n  );\n  useEffect(() => {\n    setUserNameInput(\"\");\n    setNameInput(\"\");\n    setPasswordInput(\"\");\n    setSecondPasswordInput(\"\");\n    setUserNameDubplicate(false);\n    setIsSuccessShown(false);\n  }, [isOpen]);\n  useEffect(() => {\n    checkResult &&\n      setUserNameDubplicate(!checkResult.checkIfDoctorUserNameUnique.result);\n  }, [checkResult]);\n  const handleUserNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserNameInput(e.target.value);\n    setUserNameDubplicate(false);\n    debouncedCheckDoctorUserName({\n      variables: {\n        userName: e.target.value,\n      },\n    });\n  };\n  const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setNameInput(e.target.value);\n  };\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setPasswordInput(e.target.value);\n  };\n\n  const handleSecondPasswordInput = (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setSecondPasswordInput(e.target.value);\n  };\n\n  const handleAddButtonClick = async () => {\n    if (passwordInput !== secondPasswordInput) {\n      setErrorMessage(\"两次输入的密码不相同！\");\n      setIsErrorShown(true);\n      return;\n    }\n    const result = await addDoctor({\n      variables: {\n        input: {\n          userName: userNameInput,\n          name: nameInput,\n          password: passwordInput,\n        },\n      },\n    });\n    if (result.data?.addDoctor.result) {\n      closeDialog();\n      refetchListData();\n      setIsSuccessShown(true);\n    }\n  };\n  return (\n    <>\n      <Dialog\n        open={isOpen}\n        onClose={closeDialog}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">添加医生</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            请输入医生的用户名、姓名和密码。\n          </DialogContentText>\n          <TextField\n            autoFocus\n            label=\"用户名\"\n            className={classes.input}\n            fullWidth\n            required\n            value={userNameInput}\n            onChange={handleUserNameChange}\n            error={userNameDuplicate || undefined}\n            helperText={userNameDuplicate ? \"此用户名已经被注册！\" : undefined}\n          />\n          <TextField\n            label=\"姓名\"\n            className={classes.input}\n            fullWidth\n            required\n            value={nameInput}\n            onChange={handleNameChange}\n          />\n          <TextField\n            label=\"密码\"\n            className={classes.input}\n            fullWidth\n            required\n            type=\"password\"\n            value={passwordInput}\n            onChange={handlePasswordChange}\n          />\n          <TextField\n            label=\"确认密码\"\n            className={classes.input}\n            fullWidth\n            required\n            type=\"password\"\n            value={secondPasswordInput}\n            onChange={handleSecondPasswordInput}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog}>取消</Button>\n          <Button\n            onClick={handleAddButtonClick}\n            color=\"primary\"\n            disabled={\n              userNameDuplicate ||\n              !nameInput ||\n              !userNameInput ||\n              !passwordInput ||\n              !secondPasswordInput\n                ? true\n                : undefined\n            }\n          >\n            添加\n          </Button>\n        </DialogActions>\n        <ErrorIndicator\n          showError={isErrorShown}\n          setShowError={setIsErrorShown}\n          errorMessage={errorMessage}\n        />\n      </Dialog>\n      <SuccessIndicator\n        showSuccess={isSuccessShown}\n        setShowSuccess={setIsSuccessShown}\n        successMessage=\"成功创建账号\"\n      />\n    </>\n  );\n};\n","import { useLazyQuery, useMutation, useQuery } from \"@apollo/client\";\nimport {\n  Avatar,\n  Button,\n  createStyles,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles,\n  Paper,\n  Theme,\n} from \"@material-ui/core\";\nimport { Pagination } from \"@material-ui/lab\";\nimport React, { useState } from \"react\";\nimport { LoadingIndicator } from \"../../lib/components\";\nimport { ADD_DOCTOR } from \"../../lib/graphql/mutations/AddDoctor\";\nimport {\n  AddDoctor,\n  AddDoctorVariables,\n} from \"../../lib/graphql/mutations/AddDoctor/__generated__/AddDoctor\";\nimport { DOCTOR_LIST } from \"../../lib/graphql/queries\";\nimport { CHECK_IF_DOCTOR_USER_NAME_UNIQUE } from \"../../lib/graphql/queries/CheckIfDoctorNameUnique\";\nimport {\n  CheckIfDoctorNameUnique,\n  CheckIfDoctorNameUniqueVariables,\n} from \"../../lib/graphql/queries/CheckIfDoctorNameUnique/__generated__/CheckIfDoctorNameUnique\";\nimport {\n  DoctorList,\n  DoctorListVariables,\n} from \"../../lib/graphql/queries/DoctorList/__generated__/DoctorList\";\nimport { Header } from \"../PatientInformation/components\";\nimport { AddDoctorDialog } from \"./components\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport { blue } from \"@material-ui/core/colors\";\n\nconst DEFAULT_LIMIT = 5;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    list: {\n      margin: \"20px 10px\",\n    },\n    actionContainer: {\n      margin: 10,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n    },\n    paginationContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    totalNumberText: {\n      marginRight: 5,\n    },\n    avatar: {\n      backgroundColor: blue[100],\n      color: blue[600],\n    },\n  })\n);\nexport const CreateDoctor = () => {\n  const classes = useStyles();\n  const { loading, data, refetch } = useQuery<DoctorList, DoctorListVariables>(\n    DOCTOR_LIST,\n    {\n      variables: {\n        limit: DEFAULT_LIMIT,\n        currentPageIndex: 0,\n      },\n      fetchPolicy: \"network-only\",\n    }\n  );\n  const [checkDoctorName, { data: checkNameData }] = useLazyQuery<\n    CheckIfDoctorNameUnique,\n    CheckIfDoctorNameUniqueVariables\n  >(CHECK_IF_DOCTOR_USER_NAME_UNIQUE, {\n    fetchPolicy: \"no-cache\",\n  });\n  const [addDoctor] = useMutation<AddDoctor, AddDoctorVariables>(ADD_DOCTOR);\n  const [currentPageIndex, setCurrentPageIndex] = useState(0);\n  const [isAddDoctorDialogOpen, setIsAddDoctorDialogOpen] = useState(false);\n  const closeDialog = () => {\n    setIsAddDoctorDialogOpen(false);\n  };\n  const openDialog = () => {\n    setIsAddDoctorDialogOpen(true);\n  };\n  const handlePaginationChange = (\n    _event: React.ChangeEvent<unknown>,\n    pageIndex: number\n  ) => {\n    setCurrentPageIndex(pageIndex - 1);\n    refetch({ limit: DEFAULT_LIMIT, currentPageIndex: pageIndex - 1 });\n  };\n  const refetchListData = () => {\n    refetch({ limit: DEFAULT_LIMIT, currentPageIndex });\n  };\n  if (loading || !data) {\n    return <LoadingIndicator />;\n  }\n  return (\n    <>\n      <Header text={\"医生账号信息\"} />\n      <div className={classes.actionContainer}>\n        <Button variant=\"contained\" color=\"primary\" onClick={openDialog}>\n          添加医生\n        </Button>\n        <div className={classes.paginationContainer}>\n          <span className={classes.totalNumberText}>\n            共计{data.doctorList.total}个账号\n          </span>\n          <Pagination\n            count={Math.ceil(data.doctorList.total / DEFAULT_LIMIT)}\n            variant=\"outlined\"\n            color=\"primary\"\n            page={currentPageIndex + 1}\n            onChange={handlePaginationChange}\n          />\n        </div>\n      </div>\n      <List component={Paper} className={classes.list}>\n        {data.doctorList.admins.map((admin, index) => (\n          <React.Fragment key={admin.userName}>\n            <ListItem alignItems=\"flex-start\" key={admin.userName}>\n              <ListItemAvatar>\n                <Avatar className={classes.avatar}>\n                  <PersonIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                primary={`账号名：${admin.userName}`}\n                secondary={`姓名：${admin.name}`}\n              />\n            </ListItem>\n            {index !== data.doctorList.admins.length - 1 && <Divider />}\n          </React.Fragment>\n        ))}\n      </List>\n      <AddDoctorDialog\n        isOpen={isAddDoctorDialogOpen}\n        closeDialog={closeDialog}\n        checkDoctorUserName={checkDoctorName}\n        checkResult={checkNameData}\n        addDoctor={addDoctor}\n        refetchListData={refetchListData}\n      />\n    </>\n  );\n};\n","import \"@fontsource/noto-sans-sc/400.css\";\nimport {\n  ApolloClient,\n  ApolloProvider,\n  InMemoryCache,\n  useMutation,\n} from \"@apollo/client\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { DOCTOR_LOG_IN } from \"./lib/graphql/mutations\";\nimport { Doctor, Patient, Viewer } from \"./lib/type\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport {\n  AppHeader,\n  Sider,\n  Home,\n  Login,\n  Form,\n  Report,\n  PatientInformation,\n  Welcome,\n  PromptMessage,\n  PatientLogin,\n  CreateDoctor,\n} from \"./sections\";\nimport {\n  createMuiTheme,\n  createStyles,\n  makeStyles,\n  Theme,\n  ThemeProvider,\n  Toolbar,\n} from \"@material-ui/core\";\nimport { PrivateRoute } from \"./lib/components/PrivateRoute\";\nimport { LoadingIndicator } from \"./lib/components\";\nimport { zhCN } from \"@material-ui/core/locale\";\nimport {\n  DoctorLogIn,\n  DoctorLogInVariables,\n} from \"./lib/graphql/mutations/DoctorLogIn/__generated__/DoctorLogIn\";\nimport {\n  PatientLogIn,\n  PatientLogInVariables,\n} from \"./lib/graphql/mutations/PatientLogIn/__generated__/PatientLogIn\";\nimport { PATIENT_LOG_IN } from \"./lib/graphql/mutations/PatientLogIn\";\nimport \"fontsource-roboto\";\n\nconst client = new ApolloClient({\n  uri: \"/api\",\n  cache: new InMemoryCache(),\n  headers: { \"X-CSRF_TOKEN\": sessionStorage.getItem(\"token\") || \"\" },\n});\n\nconst initialViewer: Viewer = {\n  userName: null,\n  token: null,\n  didRequest: false,\n  catelogy: null,\n};\n\nconst initialDoctor: Doctor = {\n  name: null,\n  userName: null,\n  didRequest: false,\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      height: \"100%\",\n    },\n    contentContainer: {\n      flexGrow: 1,\n      height: \"100%\",\n    },\n  })\n);\n\nexport const PRIMARY_COLOR = \"#1a73e8\";\nconst App = () => {\n  const classes = useStyles();\n\n  // const [viewer, setViewer] = useState<Viewer>(initialViewer);\n  const [doctor, setDoctor] = useState<Doctor>(initialDoctor);\n  const [patient, setPatient] = useState<Patient>(initialViewer);\n  // const [logIn] = useMutation<LogInData, LogInVariables>(LOG_IN, {\n  //   onCompleted: (data) => {\n  //     if (data && data.logIn) {\n  //       setViewer(data.logIn);\n  //       if (data.logIn.token) {\n  //         sessionStorage.setItem(\"token\", data.logIn.token);\n  //       } else {\n  //         sessionStorage.removeItem(\"token\");\n  //       }\n  //     }\n  //   },\n  // });\n\n  // const logInRef = useRef(logIn);\n  const [doctorLogIn, { loading: doctorLogInLoading }] = useMutation<\n    DoctorLogIn,\n    DoctorLogInVariables\n  >(DOCTOR_LOG_IN, {\n    onCompleted: (data) => {\n      if (data && data.doctorLogIn) {\n        const { name, userName, didRequest } = data.doctorLogIn;\n        setDoctor({\n          name,\n          userName,\n          didRequest,\n        });\n      }\n    },\n  });\n  const doctorLogInRef = useRef(doctorLogIn);\n\n  const [patientLogIn, { loading: patientLogInLoading }] = useMutation<\n    PatientLogIn,\n    PatientLogInVariables\n  >(PATIENT_LOG_IN, {\n    onCompleted: (data) => {\n      if (data && data.patientLogIn) {\n        setPatient(data.patientLogIn);\n      }\n    },\n  });\n\n  const patientLogInRef = useRef(patientLogIn);\n  useEffect(() => {\n    doctorLogInRef.current();\n    // logInRef.current();\n    patientLogInRef.current();\n  }, []);\n  if (\n    doctorLogInLoading ||\n    !doctor.didRequest ||\n    patientLogInLoading ||\n    !patient.didRequest\n  ) {\n    return <LoadingIndicator />;\n  }\n  const isAuthorized = !!doctor.userName;\n  return (\n    <Router>\n      {/** App Header */}\n      <Switch>\n        <Route exact path=\"/\" />\n        <Route exact path=\"/user/prompt\" />\n        <Route exact path=\"/user/login\" />\n        <Route path=\"/user/home\" />\n        <Route path=\"/doctor\">\n          <AppHeader viewer={doctor} setViewer={setDoctor} type=\"doctor\" />\n          <Switch>\n            <Route exact path=\"/\" />\n          </Switch>\n        </Route>\n      </Switch>\n\n      <Switch>\n        <Route exact path=\"/login\">\n          <Login\n            isAuthorized={isAuthorized}\n            setViewer={setDoctor}\n            setDoctor={setDoctor}\n            doctor={doctor}\n          />\n        </Route>\n        <Route\n          exact\n          path=\"/doctor\"\n          render={({ location }) => (\n            <Redirect to={{ pathname: \"/login\", state: { from: location } }} />\n          )}\n        />\n\n        <PrivateRoute isAuthorized={isAuthorized} path=\"/user\" exact>\n          <Welcome\n            setDoctor={setDoctor}\n            doctor={doctor}\n            logIn={doctorLogInRef.current}\n          />\n        </PrivateRoute>\n        <PrivateRoute isAuthorized={isAuthorized} path=\"/user/prompt\" exact>\n          <PromptMessage />\n        </PrivateRoute>\n        <PrivateRoute isAuthorized={isAuthorized} path=\"/user/login\" exact>\n          <PatientLogin setPatient={setPatient} patient={patient} />\n        </PrivateRoute>\n        {doctor.userName && (\n          <PrivateRoute\n            isAuthorized={isAuthorized}\n            path={`/doctor/${doctor.userName}`}\n          >\n            <div className={classes.root}>\n              <Sider viewer={doctor} type=\"doctor\" />\n              <div className={classes.contentContainer}>\n                <Toolbar />\n                <Switch>\n                  <Route\n                    exact\n                    path={`/doctor/${doctor.userName}`}\n                    component={PatientInformation}\n                  />\n                  <Route\n                    exact\n                    path={`/doctor/${doctor.userName}/manage`}\n                    component={CreateDoctor}\n                  />\n                </Switch>\n              </div>\n            </div>\n          </PrivateRoute>\n        )}\n        {patient.userName && (\n          <PrivateRoute isAuthorized={isAuthorized} path=\"/user\">\n            <AppHeader viewer={patient} setViewer={setPatient} type=\"user\" />\n            <Switch>\n              <PrivateRoute isAuthorized={isAuthorized} path=\"/user/form\" exact>\n                <Form />\n              </PrivateRoute>\n\n              <PrivateRoute isAuthorized={isAuthorized} path=\"/user\">\n                <div className={classes.root}>\n                  <Sider viewer={patient} type=\"user\" />\n                  <div className={classes.contentContainer}>\n                    <Toolbar />\n                    <Switch>\n                      <Route exact path=\"/user/home\">\n                        <Home patient={patient} />\n                      </Route>\n                      <Route exact path=\"/user/report\" component={Report} />\n                    </Switch>\n                  </div>\n                </div>\n              </PrivateRoute>\n            </Switch>\n          </PrivateRoute>\n        )}\n        <PrivateRoute isAuthorized={isAuthorized} path=\"/user\">\n          <></>\n        </PrivateRoute>\n        <PrivateRoute isAuthorized={isAuthorized} path=\"/doctor\">\n          <></>\n        </PrivateRoute>\n        <Route exact path=\"/\">\n          <Redirect to=\"/user\" />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nconst theme = createMuiTheme(\n  {\n    palette: {\n      primary: {\n        light: \"#6a9dff\",\n        main: PRIMARY_COLOR,\n        dark: \"#0045b5\",\n        contrastText: \"#fff\",\n      },\n    },\n  },\n  zhCN\n);\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}