{"version":3,"sources":["lib/graphql/mutations/Login/index.ts","lib/graphql/mutations/LogOut/index.ts","lib/graphql/mutations/CreateAccount/index.ts","lib/graphql/mutations/SaveUserAnswer/index.ts","lib/graphql/mutations/SavePartialAnswer/index.ts","lib/graphql/mutations/DoctorLogOut/index.ts","lib/graphql/mutations/DoctorLogIn/index.ts","lib/graphql/mutations/AddDiagnosis/index.ts","lib/graphql/mutations/AddDoctor/index.ts","lib/graphql/mutations/AddDoctorConfig/index.ts","lib/graphql/mutations/SelectConfig/index.ts","reportWebVitals.ts","lib/components/PrivateRoute/index.tsx","lib/components/LoadingIndicator/index.tsx","lib/components/ErrorIndicator/index.tsx","lib/components/ReportPdf/index.tsx","lib/components/ReturnToHomeHeader/index.tsx","lib/components/LineChart/index.tsx","lib/utils/constants.ts","lib/components/LineChartPopOver/index.tsx","sections/AppHeader/assets/logo.png","sections/Login/index.tsx","sections/Home/assets/cardIcon.png","lib/graphql/queries/QuestionnaireList/index.ts","lib/graphql/queries/QuestionnaireContent/index.ts","lib/graphql/queries/Report/index.ts","lib/graphql/queries/ReportForAdmin/index.ts","lib/graphql/queries/DoctorList/index.ts","lib/graphql/queries/CheckIfDoctorConfigNameUnique/index.ts","lib/graphql/queries/CheckIfDoctorNameUnique/index.ts","lib/graphql/queries/UserAnswer/index.ts","lib/graphql/queries/QueryUser/index.ts","lib/graphql/queries/DoctorConfigList/index.ts","sections/Home/components/EnterGenderAndAgeDialog/index.tsx","sections/Home/components/ChildrenEnterGenderAndAgeDialog/index.tsx","sections/Home/components/PhcssGenderAndAgeDialog/index.tsx","sections/Home/components/PsssGenderDialog/index.tsx","lib/components/SuccessIndicator/index.tsx","sections/Home/index.tsx","lib/graphql/mutations/PatientLogOut/index.ts","sections/Report/components/withReportPdfData/index.tsx","lib/graphql/globalTypes.ts","sections/AppHeader/index.tsx","sections/Sider/components/PersonalInfomation/index.tsx","sections/Sider/index.tsx","sections/Form/Components/ProgressBar/index.tsx","sections/Form/Components/Timer/index.tsx","sections/Form/Components/QuestionIndexText/index.tsx","sections/Form/Customization/yaleBrown/index.ts","sections/Form/Customization/embu/index.ts","sections/Form/Customization/psqi/index.tsx","sections/Form/index.tsx","sections/CreateAccount/index.tsx","sections/Report/index.tsx","sections/PatientInformation/components/AdditionalFieldsModal/index.tsx","sections/PatientInformation/components/SearchPatientForm/index.tsx","sections/PatientInformation/components/Header/index.tsx","sections/PatientInformation/components/LineChartsButton/index.tsx","sections/PatientInformation/components/AddDiagnosisModal/index.tsx","sections/PatientInformation/components/PatientTable/index.tsx","sections/PatientInformation/components/ChooseFormModal/index.tsx","sections/PatientInformation/components/HelpPopover/index.tsx","sections/PatientInformation/index.tsx","sections/PatientInformation/components/withReportPdfDataForAdmin/index.tsx","sections/Welcome/components/Header/index.tsx","sections/Welcome/components/DoctorLogInDialog/index.tsx","sections/Welcome/index.tsx","sections/PromptMessage/index.tsx","lib/graphql/mutations/PatientLogIn/index.ts","sections/PatientLogin/index.tsx","sections/CreateDoctor/components/AddDoctorDialog/index.tsx","sections/CreateDoctor/index.tsx","sections/DoctorConfig/components/AddConfigurationDialog/index.tsx","lib/utils/index.ts","sections/DoctorConfig/components/ConfigrationDetailDialog/index.tsx","lib/graphql/mutations/DeleteConfig/index.ts","sections/DoctorConfig/index.tsx","sections/SecondLogin/index.tsx","index.tsx"],"names":["gql","SAVE_USER_ANSWER","SAVE_PARTIAL_ANSWER","DOCTOR_LOG_OUT","DOCTOR_LOG_IN","ADD_DIAGNOSIS","ADD_DOCTOR","ADD_DOCTOR_CONFIG","SELECT_CONFIG","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","PrivateRoute","props","isAuthorized","children","rest","render","location","to","pathname","state","from","useStyles","makeStyles","theme","root","display","width","height","justifyContent","alignItems","LoadingIndicator","styles","className","CircularProgress","ErrorIndicator","showError","setShowError","errorMessage","Snackbar","open","onClose","elevation","variant","severity","pdfjs","GlobalWorkerOptions","workerSrc","createStyles","marginTop","paper","marginBottom","pdfViewer","topbar","returnButton","marginLeft","downloadButton","marginRight","printIcon","page","padding","ReportPdf","pdfData","closeReport","patientName","classes","React","useState","window","innerWidth","setWidth","updateWidth","useEffect","addEventListener","removeEventListener","numPages","setNumPages","IconButton","onClick","printJS","printable","type","base64","out","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","length","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","push","blob","Blob","b64toBlob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","remove","Divider","file","loading","onLoadSuccess","nextNumPages","el","index","Paper","pageNumber","renderMode","getElementById","offsetWidth","header","overflow","actionContainer","float","paddingRight","paddingTop","fontSize","ReturnToHomeHeader","Button","color","startIcon","canvasContainer","LineChart","labelList","dataList","multipleDataList","showLabel","chartRef","useRef","initRef","current","lineChart","getContext","Chart","data","labels","datasets","label","borderColor","backgroundColor","fill","lineTension","options","tooltips","mode","intersect","hover","maintainAspectRatio","responsive","scales","yAxes","ticks","beginAtZero","plugins","datalabels","anchor","align","formatter","Math","round","id","ref","EYSCENCK_FORM_NAME","EYSCENCK_CHILDREN_FORM_NAME","YAML_BROWN_FORM_KEY","PSSS_FORM_KEY","PSQI_FORM_KEY","PHCSS_FORM_KEY","EMBU_FORM_KEY","HIDE_LABEL_FORMS","HIDE_LABEL_KEYS","LineChartPopOver","formResultList","formName","formKey","fillInDateList","useMemo","map","formResult","fillInDate","resultList","Number","JSON","parse","result","total","resultObject","eTScore","pTScore","nTScore","lTScore","yaleBrownMind","yaleBrownBehavior","yaleBrownTotal","psssP","psssS","psssTotal","mdqTotal","psqiTotal","phcssTotal","listToReturn","fatherLabels","fatherColors","fatherFactorsData","embuIsFatherAnswerCompleted","embuFatherComponents","motherLabel","motherColors","motherFactorsData","embuIsMotherAnswerCompleted","embuMotherComponents","includes","isDialogOpen","setIsDialogOpen","size","disabled","Dialog","DialogTitle","DialogContent","logInCard","borderRadius","margin","logInText","textAlign","promptText","input","inputContainer","userNameInput","passwordInput","buttonContainer","logo","logoContainer","pageContainer","topPadding","initialAccountInfo","userName","password","Login","setDoctor","setViewer","doctor","useMutation","onCompleted","doctorLogIn","name","didRequest","setIsRedo","onError","error","setIsLogInErrorShown","doctorLoginRef","accountInfo","setAccountInfo","isNameAndPasswordValidated","setIsNameAndPasswordValidated","isLogInErrorShown","handleKeyPress","event","key","logInButtonOnClick","isRedo","detectRedoRef","history","variables","useHistory","isDoctor","console","log","Card","CardContent","src","alt","TextField","autoFocus","value","onChange","e","target","helperText","undefined","inputProps","QUESTIONNAIRE_LIST","QUESTIONNAIRE_CONTENT","REPORT","REPORT_FOR_ADMIN","DOCTOR_LIST","CHECK_IF_DOCTOR_CONFIG_USER_NAME_UNIQUE","CHECK_IF_DOCTOR_USER_NAME_UNIQUE","QUERY_USER","DOCTOR_CONFIG_LIST","EnterGenderAndAgeDialog","isOpen","handleClose","goToLogInPage","age","gender","DialogContentText","DialogActions","ChildrenEnterGenderAndAgeDialog","PhcssGenderAndAgeDialog","PsssGenderDialog","SuccessIndicator","showSuccess","setShowSuccess","successMessage","anchorOrigin","vertical","horizontal","content","listName","gridTemplateColumns","rowGap","columnGap","card","cardActionArea","cursor","indigo","cardIcon","unfinishedText","finishedText","questionnaireName","lineHeight","cardActionContainer","paddingLeft","noOverflow","textOverflow","whiteSpace","pageHeader","refreshButtonContainer","cardContent","Home","patient","isSmallScreen","useMediaQuery","useQuery","fetchPolicy","isReport","refetch","listData","uniqueFormList","formList","formSet","Set","questionnaireList","forEach","questionnaire","has","displayedFillInDate","add","isGenderAndAgeDialogOpen","setIsGenderAndAgeDialogOpen","isChildrenGenderAndAgeDialogOpen","setIsChildrenGenderAndAgeDialogOpen","isPhcssDialogOpen","setIsPhcssDialogOpen","isPsssDialogOpen","setIsPsssDialogOpen","closeGenderAndAgeDialog","closeChildrenGenderAndAgeDialog","closePhcssDialog","isSuccessShown","setIsSuccessShown","setSuccessMessage","reloadButtonOnClick","defaultReturn","test","nameMatchFormResult","match","abbreviationMatchFormResult","substring","abbreviation","replace","goToFormPage","formId","finishStatus","done","List","subheader","ListSubheader","ListItem","button","ListItemAvatar","CardIcon","ListItemText","primary","secondary","CardActionArea","CardActions","WrappedComponent","UsersFilter","PATIENT_LOG_OUT","flexGrow","zIndex","drawer","spacing","maxWidth","maxHeight","title","timerHeader","AppHeader","viewer","doctorLogOut","sessionStorage","removeItem","logOut","patientLogOut","handleLogout","isSiderPermanent","path","exact","AppBar","position","Toolbar","edge","aria-label","setIsSiderOpen","propertyName","propertyDivider","fields","displayNames","PersonalInformation","field","validIndexes","validIndex","flexShrink","patientDrawer","personalInfoCard","personalInfoCardContent","paddingBottom","personalInfoText","fontWeight","drawerPaper","idChip","adminMenu","adminMenuHeader","link","Sider","useLocation","isPermanent","Drawer","ListItemIcon","Chip","icon","PROGRESS_BAR_WIDTH","finished","leftCircle","circle","circlewrapper","rightCircle","rightCircleWrapper","ProgressBar","totalNumber","currentIndex","widthOfFinishedPart","style","timeNumber","userSelect","WebkitUserSelect","WebkitTouchCallout","KhtmlUserSelect","MozUserSelect","msUserSelect","Timer","seconds","setSeconds","interval","setTimeout","clearTimeout","hour","floor","minute","second","CHINESE_INDEXES","QuestionIndexText","text","totalSize","String","yaleBrownCustomization","setAnswers","setChoiceDisabled","choiceDisabled","newAnswers","currentQuestionIndex","autoChooseChoices","newChoiceDisabled","choices","autoChooseChoiceIndex","yaleBrownSkipQuestions","currentQuestionnIndex","setCurrentQuestionIndex","choice","setIsAllowedToSubmit","embuRadioButtonOnClick","selectChoiceLockRef","answers","setIsNextButtonDisabled","timeoutRef","needAddOne","questions","timeout","embuValidationAll","questionNumber","setIsErrorDialogShown","setErrorDialogMessage","setErrorDialogQuestionIndex","isAllEvenQuestionAnswered","isAllOddQuestionAnswered","isAllEvenQuestionNotAnswered","isAllOddQuestionNotAnswered","firstUndefinedIndex","psqiValidation","setErrorMessage","formContainer","form","titleCard","titleCardColor","borderTopLeftRadius","borderTopRightRadius","PRIMARY_COLOR","titleCardContent","titleCardMainText","questionCard","questionText","questionOptionText","buttonWithRightMargin","homeLink","exitButton","right","bottom","timerContaner","left","footer","progressWrapper","progressWrapperForSmallScreen","questionParent","answerInput","embuRadioContainer","Form","URLSearchParams","search","get","partialAnswer","initChoiceDisabled","question","_choice","yaleBrownInitialLoad","localPartialAnswer","localStorage","getItem","answerObject","Date","date","time","answerArray","unfinishedQuestionIndex","answer","min","embuLoadPartialAnswers","saveUserAnswer","setIsDone","saveUserAnswerLoading","savePartialAnswer","savePartialAnswerLoading","saveUserAnswerRef","savePartialAnswerRef","autoSaveTimeoutRef","isDone","isAllowedToSubmit","isNextButtonDisabled","confirmed","setConfirmed","isErrorShown","setIsErrorShown","isErrorDialogShown","errorDialogMessage","errorDialogQuestionIndex","getAnswerArray","useCallback","numberOfQuestions","savePartialAnswerToBackend","questionnaireId","Promise","resolve","savePartialAnswerToLocalStorage","setItem","stringify","closeConfirmDialog","validation","all","onNextButtonClick","onSubmit","onBackButtonClick","goToHome","handleExitButtonClick","checkNextButtonShouldDisable","embuShouldDisableNextButton","currentQuestion","Link","preventDefault","parent","split","RadioGroup","selectedChoice","indexOf","FormControl","component","FormControlLabel","control","Radio","questionIndex","radioButtonOnClick","FormLabel","checked","Fab","instruction","createAccountCard","createAccountText","formClassifyText","PdfViewer","userAnswerIds","pageSize","report","pdf","questionnaireTable","doneIcon","pageSizeSelect","minWidth","Report","count","setNumberOfFinishedQuestionnaires","newselectedUserAnswers","userAnswerId","setSelectedUserAnswers","selectedUserAnswers","setPageSize","numberOfFinishedQuestionnaires","isReportVisible","setIsReportVisible","selectedQuestionnaireArray","TableContainer","Table","aira-label","TableHead","TableRow","TableCell","Checkbox","TableBody","delete","selectQuestionnaire","CheckCircleOutline","InputLabel","Select","labelId","MenuItem","fieldsContainer","ADDITIONAL_FIELD_KEYS","ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES","removeElementFromArray","array","element","newArray","currentElement","AdditionalFieldsModal","handleDialogClose","additionalFields","setAdditionalFields","handleAdditionalFieldsSearch","selectedFields","setSelectedFields","aria-labelledby","fullWidth","displayName","fieldKey","AGE_NEGATIVE_ERROR_MESSAGE","rangeWrapper","ageRangeInput","dateRangeWrapper","ageRangeWrapper","dateRangeInput","ageInputIconWrapper","buttonWrapper","extraFieldsWrapper","searchButton","whiteButton","rangeFormWrapper","ageInputIcon","chip","additionalFieldButton","datePickerProps","format","okLabel","cancelLabel","invalidLabel","maxDateMessage","minDateMessage","invalidDateMessage","SearchPatientForm","forwardRef","searchPatients","limit","setCurrentPageIndex","currentPageIndex","filter","searchMyPatients","setUserName","setName","setGender","max","ageRange","setAgeRange","dateRange","setDateRange","onlyMyPatient","setOnlyMyPatient","errorField","setErrorField","isAdditionalFieldsModalOpen","setIsAdditionalFieldsModalOpen","handleSearchButtonClick","minSignUpDate","year","getFullYear","month","getMonth","day","getDate","maxSignUpDate","useImperativeHandle","noValidate","autoComplete","newMinAge","newMaxAge","utils","DateFnsUtils","locale","cnLocale","DatePicker","_value","onDelete","newAdditionalFields","INITAL_ONLY_MY_PATIENT","Header","LineChartsButton","finishedForms","isButtonDisabled","newResultList","reverse","setIsOpen","closeModal","diagnosisText","AddDiagnosisModal","patientId","addDiagnosis","setDiagnosis","diagnosis","handleComfirm","shrink","option","loadingIndicatorWrapper","reportButton","lineChartsButtonContainer","tableCell","iconMargin","tableColumnTexts","tableColumns","tableMinWidth","tableMaxWidth","PatientTable","patientList","selectedUserAnswerIds","setSelectedUserId","setSelectedUserAnswerIds","setIsReportShown","handleLimitChange","handleCurrentPageIndexChange","handleSortChange","setPrintPageSize","setPrintPatientName","isChooseFormModalShown","setIsChooseFormModalShown","finishedFormList","setFinishedFormList","isAddDiagnosisModalShown","setIsAddDiagnosisModalShown","addDiagnosisPatientId","setAddDiagnosisPatientId","addDiagnosisPatientName","setAddDiagnosisPatientName","handleEditDiagnosisButtonClick","queryUser","users","TablePagination","rowsPerPage","rowsPerPageOptions","onChangePage","_event","onChangeRowsPerPage","labelDisplayedRows","ceil","TableSortLabel","active","direction","DATE_LATEST","patientInformation","isReportButtonDisabled","column","userId","finishedForm","handleReportButtonClick","onOkButtonClick","popover","pointerEvents","ChooseFormModal","aria-describedby","currentUserAnswerId","doctorName","hiddenContent","reportForAdmin","withReportPdfDataForAdmin","PatientInformation","useLazyQuery","getQueryResult","userListData","searchFormRef","setLimit","setFilter","selectedUserId","isReportShown","getQueryResultRef","searchParams","setSearchParams","isPdfViewerShown","Boolean","printPageSize","printPatientName","params","newFilter","DATE_OLDEST","welcomeMessage","DoctorLogInDialog","handleClickLogIn","handleDoctorLogIn","hideErrorIndicator","setPassword","hideError","handleClickCancel","Grid","container","item","background","minHeight","flexDirection","enterSystemButtonContainer","extendedIcon","seuText","Welcome","logIn","doctorLogInDialogRef","logInResult","titleWrapper","promptTextContainer","titleContainer","PromptMessage","endIcon","PATIENT_LOG_IN","personalInformationContainer","actionsWrapper","actionsContainer","PatientLogin","setPatient","queryParams","handleNextButtonClick","isBasicInformationShown","handleLogInButtonClick","patientLogIn","isUserNameValidated","setIsUserNameValidated","isNameValidated","setIsNameValidated","userInfo","setAge","education","setEducation","jobStatus","setJobStatus","marriageStatus","setMarriageStatus","setShowLoadSuccess","setIsBasicInformationShown","showLoadSuccess","handleCloseLoadSuccess","showNameErrorMessage","setShowNameErrorMessage","handleCloseNameErrorMessage","userNameFromQueryParams","trim","required","InputProps","startAdornment","InputAdornment","autoHideDuration","Alert","AddDoctorDialog","closeDialog","checkDoctorUserName","checkResult","addDoctor","refetchListData","setUserNameInput","nameInput","setNameInput","setPasswordInput","secondPasswordInput","setSecondPasswordInput","userNameDuplicate","setUserNameDubplicate","debouncedCheckDoctorUserName","debounce","checkIfDoctorUserNameUnique","handleAddButtonClick","list","paginationContainer","totalNumberText","avatar","blue","CreateDoctor","checkDoctorName","checkNameData","isAddDoctorDialogOpen","setIsAddDoctorDialogOpen","doctorList","Pagination","pageIndex","admins","admin","Fragment","Avatar","AddConfigurationDialog","checkConfigName","checkConfigNameResult","addDoctorConfig","debouncedCheckConfigName","func","waitTime","args","later","checkedFormIds","setCheckedFormIds","checkIfDoctorConfigNameUnique","doctorConfigName","ListItemSecondaryAction","Switch","currentId","configName","selected","formIds","addResult","ConfirationDetailDialog","config","DELETE_CONFIG","configCard","configNameContainer","settingIcon","configPromptMessage","inUseText","resetButton","cardDescription","deleteButton","DoctorConfig","isAddConfigDialogOpen","setIsAddConfigDialogOpen","selectedConfig","setSelectedConfig","isConfigrationDetailDialogOpen","setIsConfigrationDetailDialogOpen","configList","configListLoading","showAll","formListData","selectConfig","deleteConfig","currentlyUsedConfig","configInUseList","doctorConfigList","configs","configId","disableRipple","SecondLogin","cookie","httpLink","HttpLink","uri","logoutLink","errorHandler","graphQLErrors","message","reload","client","ApolloClient","cache","InMemoryCache","concat","headers","initialViewer","token","catelogy","initialDoctor","contentContainer","App","isSiderOpen","doctorLogInLoading","doctorLogInRef","patientLogInLoading","patientLogInRef","createMuiTheme","palette","light","main","dark","contrastText","zhCN","ReactDOM","ThemeProvider"],"mappings":"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","file":"static/js/main.a1da61fd.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\r\n\r\nexport const LOG_IN = gql`\r\n  mutation LogIn($input: LogInInput) {\r\n    logIn(input: $input) {\r\n      ... on UserViewer {\r\n        token\r\n        name\r\n        userName\r\n        gender\r\n        education\r\n        jobStatus\r\n        age\r\n        marriageStatus\r\n        didRequest\r\n        catelogy\r\n      }\r\n      ... on AdminViewer {\r\n        name\r\n        userName\r\n        didRequest\r\n        token\r\n        catelogy\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const LOG_OUT = gql`\r\n  mutation Logout {\r\n    logOut {\r\n      ... on UserViewer {\r\n        id\r\n        token\r\n        didRequest\r\n        catelogy\r\n      }\r\n      ... on AdminViewer {\r\n        id\r\n        token\r\n        didRequest\r\n        catelogy\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_ACCOUNT = gql`\r\n  mutation CreateAccount($input: CreateAccountInput) {\r\n    createAccount(input: $input) {\r\n      token\r\n      name\r\n      userName\r\n      gender\r\n      education\r\n      jobStatus\r\n      marriageStatus\r\n      didRequest\r\n      age\r\n      catelogy\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const SAVE_USER_ANSWER = gql`\r\n  mutation SaveUserAnswer($input: UserAnswerInput) {\r\n    saveUserAnswer(input: $input) {\r\n      didRequest\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const SAVE_PARTIAL_ANSWER = gql`\r\n  mutation SavePartialAnswer($input: UserAnswerInput) {\r\n    savePartialAnswer(input: $input) {\r\n      didRequest\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const DOCTOR_LOG_OUT = gql`\r\n  mutation DoctorLogOut {\r\n    doctorLogOut {\r\n      didRequest\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const DOCTOR_LOG_IN = gql`\r\n  mutation DoctorLogIn($input: DoctorLoginInput) {\r\n    doctorLogIn(input: $input) {\r\n      name\r\n      userName\r\n      didRequest\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const ADD_DIAGNOSIS = gql`\r\n  mutation AddDiagnosis($input: AddDiagnosisInput) {\r\n    addDiagnosis(input: $input) {\r\n      result\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const ADD_DOCTOR = gql`\r\n  mutation AddDoctor($input: AddDoctorInput) {\r\n    addDoctor(input: $input) {\r\n      result\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const ADD_DOCTOR_CONFIG = gql`\r\n  mutation AddDoctorConfig($input: DoctorConfigInput) {\r\n    addDoctorConfig(input: $input) {\r\n      result\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const SELECT_CONFIG = gql`\r\n  mutation SelectConfig($input: SelectConfigInput) {\r\n    selectConfig(input: $input) {\r\n      result\r\n    }\r\n  }\r\n`;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { ReactNode } from \"react\";\r\nimport { Redirect, Route, RouteProps } from \"react-router-dom\";\r\n\r\ninterface Props extends RouteProps {\r\n  isAuthorized: boolean;\r\n  children: ReactNode;\r\n}\r\n\r\nexport const PrivateRoute = (props: Props) => {\r\n  const { isAuthorized, children, ...rest } = props;\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        isAuthorized ? (\r\n          children\r\n        ) : (\r\n          <Redirect to={{ pathname: \"/login\", state: { from: location } }} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import { CircularProgress, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\nexport const LoadingIndicator = () => {\r\n  const styles = useStyles();\r\n  return (\r\n    <div className={styles.root}>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n};\r\n","import { Snackbar } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\ninterface Props {\r\n  showError: boolean;\r\n  setShowError: (showError: boolean) => void;\r\n  errorMessage: string;\r\n}\r\n\r\nexport const ErrorIndicator = (props: Props) => {\r\n  const { showError, setShowError, errorMessage } = props;\r\n  return (\r\n    <Snackbar open={showError} onClose={() => setShowError(false)}>\r\n      <MuiAlert\r\n        elevation={6}\r\n        variant=\"filled\"\r\n        severity=\"error\"\r\n        onClose={() => setShowError(false)}\r\n      >\r\n        {errorMessage}\r\n      </MuiAlert>\r\n    </Snackbar>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Document, Page } from \"react-pdf\";\r\nimport { pdfjs } from \"react-pdf\";\r\nimport {\r\n  createStyles,\r\n  Divider,\r\n  IconButton,\r\n  makeStyles,\r\n  Paper,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\r\nimport printJS from \"print-js\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = \"/pdf.worker.js\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      marginTop: 10,\r\n    },\r\n    paper: {\r\n      marginBottom: 10,\r\n    },\r\n    pdfViewer: {},\r\n    topbar: {\r\n      height: 48,\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n    returnButton: {\r\n      marginLeft: 5,\r\n    },\r\n    downloadButton: {\r\n      marginRight: 5,\r\n    },\r\n    printIcon: {},\r\n    page: {\r\n      padding: 3,\r\n    },\r\n  })\r\n);\r\n\r\ninterface Props {\r\n  pdfData: string;\r\n  closeReport: () => void;\r\n  patientName?: string;\r\n}\r\n\r\nexport const ReportPdf = ({ pdfData, closeReport, patientName }: Props) => {\r\n  const classes = useStyles();\r\n\r\n  const [width, setWidth] = React.useState(window.innerWidth);\r\n\r\n  const updateWidth = () => {\r\n    if (window.innerWidth !== width) setWidth(window.innerWidth);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener(\"resize\", updateWidth);\r\n    return () => window.removeEventListener(\"resize\", updateWidth);\r\n  });\r\n  const printReport = () => {\r\n    printJS({\r\n      printable: `${pdfData}`,\r\n      type: \"pdf\",\r\n      base64: true,\r\n    });\r\n  };\r\n  const [numPages, setNumPages] = useState<number>(0);\r\n  const onDocumentLoadSuccess = ({\r\n    numPages: nextNumPages,\r\n  }: {\r\n    numPages: number;\r\n  }) => {\r\n    setNumPages(nextNumPages);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className={classes.topbar}>\r\n          <IconButton onClick={closeReport} className={classes.returnButton}>\r\n            <ArrowBackIcon />\r\n          </IconButton>\r\n          <div>\r\n            <IconButton className={classes.printIcon} onClick={printReport}>\r\n              <PrintIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              className={classes.downloadButton}\r\n              onClick={() => {\r\n                const b64toBlob = (\r\n                  b64Data: string,\r\n                  contentType = \"\",\r\n                  sliceSize = 512\r\n                ) => {\r\n                  const byteCharacters = atob(b64Data);\r\n                  const byteArrays = [];\r\n\r\n                  for (\r\n                    let offset = 0;\r\n                    offset < byteCharacters.length;\r\n                    offset += sliceSize\r\n                  ) {\r\n                    const slice = byteCharacters.slice(\r\n                      offset,\r\n                      offset + sliceSize\r\n                    );\r\n\r\n                    const byteNumbers = new Array(slice.length);\r\n                    for (let i = 0; i < slice.length; i++) {\r\n                      byteNumbers[i] = slice.charCodeAt(i);\r\n                    }\r\n\r\n                    const byteArray = new Uint8Array(byteNumbers);\r\n                    byteArrays.push(byteArray);\r\n                  }\r\n\r\n                  const blob = new Blob(byteArrays, { type: contentType });\r\n                  return blob;\r\n                };\r\n                const out = b64toBlob(pdfData, \"application/pdf\");\r\n                const a = document.createElement(\"a\");\r\n                const url = window.URL.createObjectURL(out);\r\n                a.href = url;\r\n                a.download = patientName\r\n                  ? `${patientName}-心理评估报告单.pdf`\r\n                  : \"心理评估报告单.pdf\";\r\n                document.body.appendChild(a);\r\n                a.click();\r\n                a.remove();\r\n              }}\r\n            >\r\n              <CloudDownloadIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n      </div>\r\n      <div className={classes.root}>\r\n        <Document\r\n          file={`data:application/pdf;base64,${pdfData}`}\r\n          loading={<div></div>}\r\n          className={classes.pdfViewer}\r\n          onLoadSuccess={onDocumentLoadSuccess}\r\n        >\r\n          {Array.from(new Array(numPages), (el, index) => (\r\n            <Paper elevation={3} className={classes.paper} key={index}>\r\n              <Page\r\n                pageNumber={index + 1}\r\n                loading={<></>}\r\n                renderMode=\"svg\"\r\n                width={\r\n                  document.getElementById(\"root\")\r\n                    ? (document.getElementById(\"root\")!.offsetWidth > 750\r\n                        ? document.getElementById(\"root\")!.offsetWidth - 240\r\n                        : document.getElementById(\"root\")!.offsetWidth) * 0.8\r\n                    : 1000\r\n                }\r\n              />\r\n            </Paper>\r\n          ))}\r\n        </Document>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { makeStyles, Theme, createStyles, Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    header: {\r\n      overflow: \"hidden\",\r\n    },\r\n    actionContainer: {\r\n      float: \"right\",\r\n      paddingRight: 10,\r\n      paddingTop: 10,\r\n      fontSize: \"0.875rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n  })\r\n);\r\nexport const ReturnToHomeHeader = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.header}>\r\n      <span className={classes.actionContainer}>\r\n        <Link to=\"/\">\r\n          <Button color=\"secondary\" startIcon={<HomeIcon />}>\r\n            返回主页\r\n          </Button>\r\n        </Link>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport Chart, { ChartDataSets } from \"chart.js\";\r\nimport \"chartjs-plugin-datalabels\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\n\r\ninterface Props {\r\n  labelList: string[];\r\n  dataList?: number[];\r\n  multipleDataList?: ChartDataSets[];\r\n  showLabel: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    canvasContainer: {\r\n      width: 550,\r\n      height: 400,\r\n    },\r\n  })\r\n);\r\n\r\nexport const LineChart = ({\r\n  labelList,\r\n  dataList,\r\n  multipleDataList,\r\n  showLabel,\r\n}: Props) => {\r\n  const classes = useStyles();\r\n  const chartRef = useRef<HTMLCanvasElement>(null);\r\n  const init = () => {\r\n    if (chartRef.current) {\r\n      const lineChart = chartRef.current.getContext(\"2d\");\r\n      if (lineChart)\r\n        new Chart(lineChart, {\r\n          type: \"line\",\r\n          data: {\r\n            //Bring in data\r\n            labels: labelList,\r\n            datasets: multipleDataList\r\n              ? multipleDataList\r\n              : [\r\n                  {\r\n                    label: \"得分\",\r\n                    data: dataList,\r\n                    borderColor: \"#0d47a1\",\r\n                    backgroundColor: \"#bbdefb\",\r\n                    fill: false,\r\n                    lineTension: 0,\r\n                  },\r\n                ],\r\n          },\r\n          options: {\r\n            tooltips: {\r\n              mode: \"index\",\r\n              intersect: false,\r\n            },\r\n            hover: {\r\n              mode: \"nearest\",\r\n              intersect: true,\r\n            },\r\n            maintainAspectRatio: false,\r\n            responsive: true,\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n            plugins: {\r\n              datalabels: {\r\n                anchor: \"start\",\r\n                align: \"top\",\r\n                formatter: Math.round,\r\n                display: showLabel ? true : false,\r\n              },\r\n            },\r\n          },\r\n        });\r\n    }\r\n  };\r\n  const initRef = useRef(init);\r\n  useEffect(() => {\r\n    initRef.current();\r\n  }, []);\r\n  return (\r\n    <div className={classes.canvasContainer}>\r\n      <canvas id=\"line-chart\" ref={chartRef} />\r\n    </div>\r\n  );\r\n};\r\n","export const EYSCENCK_FORM_NAME = \"艾森克个性测试（EPQ）\";\r\nexport const EYSCENCK_CHILDREN_FORM_NAME = \"艾森克个性测试儿童版（EPQ）\";\r\nexport const SCL_90_NAME = \"90项症状清单（SCL-90）\";\r\nexport const YAML_BROWN_FORM_KEY = \"yale-brown\";\r\nexport const PSSS_FORM_KEY = \"psss\";\r\nexport const MDQ_FORM_KEY = \"mdq\";\r\nexport const PSQI_FORM_KEY = \"psqi\";\r\nexport const PHCSS_FORM_KEY = \"phcss\";\r\nexport const EMBU_FORM_KEY = \"embu\";\r\nexport const NO_DOCTOR_LOGIN_ERROR_MESSAGE = \"No doctor login!\";\r\nexport const NO_PATIENT_LOGIN_ERROR_MESSAGE = \"No patient login!\";\r\n","import {\r\n  Button,\r\n  // createStyles,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  // makeStyles,\r\n  // Theme,\r\n} from \"@material-ui/core\";\r\nimport React, { useMemo, useState } from \"react\";\r\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\r\nimport {\r\n  EysenckFormResult,\r\n  MdqResult,\r\n  PsqiResult,\r\n  PsssResult,\r\n  YamlBrownResult,\r\n  PhcssResult,\r\n  EmbuResult,\r\n} from \"./type\";\r\nimport { ChartDataSets } from \"chart.js\";\r\nimport {\r\n  EMBU_FORM_KEY,\r\n  EYSCENCK_CHILDREN_FORM_NAME,\r\n  EYSCENCK_FORM_NAME,\r\n  MDQ_FORM_KEY,\r\n  PHCSS_FORM_KEY,\r\n  PSQI_FORM_KEY,\r\n  PSSS_FORM_KEY,\r\n  SCL_90_NAME,\r\n  YAML_BROWN_FORM_KEY,\r\n} from \"../../utils/constants\";\r\nimport { FormResult } from \"../../../sections\";\r\nimport { LineChart } from \"..\";\r\n\r\n// const useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\ninterface Props {\r\n  formResultList: FormResult[];\r\n  formName: string;\r\n  formKey: string;\r\n}\r\n\r\nconst HIDE_LABEL_FORMS = [EYSCENCK_FORM_NAME, EYSCENCK_CHILDREN_FORM_NAME];\r\nconst HIDE_LABEL_KEYS: string[] = [EMBU_FORM_KEY];\r\n\r\nexport const LineChartPopOver = (props: Props) => {\r\n  const { formResultList, formName, formKey } = props;\r\n  const fillInDateList = useMemo(\r\n    () => formResultList.map((formResult) => formResult.fillInDate),\r\n    [formResultList]\r\n  );\r\n  const resultList = useMemo(() => {\r\n    if (formName === SCL_90_NAME) {\r\n      return formResultList.map((formResult) =>\r\n        Number(JSON.parse(formResult.result).total)\r\n      );\r\n    }\r\n    return formResultList.map((formResult) => Number(formResult.result));\r\n  }, [formResultList, formName]);\r\n  const multipleDataList: undefined | ChartDataSets[] = useMemo(() => {\r\n    if (\r\n      formName === EYSCENCK_FORM_NAME ||\r\n      formName === EYSCENCK_CHILDREN_FORM_NAME\r\n    ) {\r\n      const eArray = formResultList.map((formResult) => {\r\n        const resultObject: EysenckFormResult = JSON.parse(formResult.result);\r\n        return Number(resultObject.eTScore);\r\n      });\r\n      const pArray = formResultList.map((formResult) => {\r\n        const resultObject: EysenckFormResult = JSON.parse(formResult.result);\r\n        return Number(resultObject.pTScore);\r\n      });\r\n      const nArray = formResultList.map((formResult) => {\r\n        const resultObject: EysenckFormResult = JSON.parse(formResult.result);\r\n        return Number(resultObject.nTScore);\r\n      });\r\n      const lArray = formResultList.map((formResult) => {\r\n        const resultObject: EysenckFormResult = JSON.parse(formResult.result);\r\n        return Number(resultObject.lTScore);\r\n      });\r\n      return [\r\n        {\r\n          label: \"E量表得分\",\r\n          data: eArray,\r\n          borderColor: \"#0d47a1\",\r\n          backgroundColor: \"#0d47a1\",\r\n          lineTension: 0,\r\n          fill: false,\r\n        },\r\n        {\r\n          label: \"P量表得分\",\r\n          data: pArray,\r\n          borderColor: \"#4caf50\",\r\n          backgroundColor: \"#4caf50\",\r\n          fill: false,\r\n          lineTension: 0,\r\n        },\r\n        {\r\n          label: \"N量表得分\",\r\n          data: nArray,\r\n          borderColor: \"#ffeb3b\",\r\n          backgroundColor: \"#ffeb3b\",\r\n          fill: false,\r\n          lineTension: 0,\r\n        },\r\n        {\r\n          label: \"L量表得分\",\r\n          data: lArray,\r\n          borderColor: \"#d32f2f\",\r\n          backgroundColor: \"#d32f2f\",\r\n          fill: false,\r\n          lineTension: 0,\r\n        },\r\n      ];\r\n    } else if (formKey === YAML_BROWN_FORM_KEY) {\r\n      const mindArray = formResultList.map((formResult) => {\r\n        const resultObject: YamlBrownResult = JSON.parse(formResult.result);\r\n        return resultObject.yaleBrownMind;\r\n      });\r\n      const behaviorArray = formResultList.map((formResult) => {\r\n        const resultObject: YamlBrownResult = JSON.parse(formResult.result);\r\n        return resultObject.yaleBrownBehavior;\r\n      });\r\n      const totalArray = formResultList.map((formResult) => {\r\n        const resultObject: YamlBrownResult = JSON.parse(formResult.result);\r\n        return resultObject.yaleBrownTotal;\r\n      });\r\n      return [\r\n        {\r\n          label: \"强迫思维部分分数\",\r\n          data: mindArray,\r\n          borderColor: \"#0d47a1\",\r\n          backgroundColor: \"#0d47a1\",\r\n          lineTension: 0,\r\n          fill: false,\r\n        },\r\n        {\r\n          label: \"强迫行为部分分数\",\r\n          data: behaviorArray,\r\n          borderColor: \"#4caf50\",\r\n          backgroundColor: \"#4caf50\",\r\n          fill: false,\r\n          lineTension: 0,\r\n        },\r\n        {\r\n          label: \"两部分总分\",\r\n          data: totalArray,\r\n          borderColor: \"#d32f2f\",\r\n          backgroundColor: \"#d32f2f\",\r\n          fill: false,\r\n          lineTension: 0,\r\n        },\r\n      ];\r\n    } else if (formKey === PSSS_FORM_KEY) {\r\n      const pArray = formResultList.map((formResult) => {\r\n        const resultObject: PsssResult = JSON.parse(formResult.result);\r\n        return resultObject.psssP;\r\n      });\r\n      const sArray = formResultList.map((formResult) => {\r\n        const resultObject: PsssResult = JSON.parse(formResult.result);\r\n        return resultObject.psssS;\r\n      });\r\n      const totalArray = formResultList.map((formResult) => {\r\n        const resultObject: PsssResult = JSON.parse(formResult.result);\r\n        return resultObject.psssTotal;\r\n      });\r\n      return [\r\n        {\r\n          label: \"心理（P）因子分数\",\r\n          data: pArray,\r\n          borderColor: \"#0d47a1\",\r\n          backgroundColor: \"#0d47a1\",\r\n          lineTension: 0,\r\n          fill: false,\r\n        },\r\n        {\r\n          label: \"躯体（S）因子分数\",\r\n          data: sArray,\r\n          borderColor: \"#4caf50\",\r\n          backgroundColor: \"#4caf50\",\r\n          fill: false,\r\n          lineTension: 0,\r\n        },\r\n        {\r\n          label: \"总分\",\r\n          data: totalArray,\r\n          borderColor: \"#d32f2f\",\r\n          backgroundColor: \"#d32f2f\",\r\n          fill: false,\r\n          lineTension: 0,\r\n        },\r\n      ];\r\n    } else if (formKey === MDQ_FORM_KEY) {\r\n      const totalArray = formResultList.map((formResult) => {\r\n        const resultObject: MdqResult = JSON.parse(formResult.result);\r\n        return resultObject.mdqTotal;\r\n      });\r\n      return [\r\n        {\r\n          label: \"总分\",\r\n          data: totalArray,\r\n          borderColor: \"#d32f2f\",\r\n          backgroundColor: \"#d32f2f\",\r\n          fill: false,\r\n          lineTension: 0,\r\n        },\r\n      ];\r\n    } else if (formKey === PSQI_FORM_KEY) {\r\n      const totalArray = formResultList.map((formResult) => {\r\n        const resultObject: PsqiResult = JSON.parse(formResult.result);\r\n        return resultObject.psqiTotal;\r\n      });\r\n      // const aArray = formResultList.map((formResult) => {\r\n      //   const resultObject: PsqiResult = JSON.parse(formResult.result);\r\n      //   return resultObject.psqiA;\r\n      // });\r\n      // const bArray = formResultList.map((formResult) => {\r\n      //   const resultObject: PsqiResult = JSON.parse(formResult.result);\r\n      //   return resultObject.psqiB;\r\n      // });\r\n      // const cArray = formResultList.map((formResult) => {\r\n      //   const resultObject: PsqiResult = JSON.parse(formResult.result);\r\n      //   return resultObject.psqiC;\r\n      // });\r\n      // const dArray = formResultList.map((formResult) => {\r\n      //   const resultObject: PsqiResult = JSON.parse(formResult.result);\r\n      //   return resultObject.psqiD;\r\n      // });\r\n      // const eArray = formResultList.map((formResult) => {\r\n      //   const resultObject: PsqiResult = JSON.parse(formResult.result);\r\n      //   return resultObject.psqiE;\r\n      // });\r\n      // const fArray = formResultList.map((formResult) => {\r\n      //   const resultObject: PsqiResult = JSON.parse(formResult.result);\r\n      //   return resultObject.psqiF;\r\n      // });\r\n      // const gArray = formResultList.map((formResult) => {\r\n      //   const resultObject: PsqiResult = JSON.parse(formResult.result);\r\n      //   return resultObject.psqiG;\r\n      // });\r\n      return [\r\n        {\r\n          label: \"总分\",\r\n          data: totalArray,\r\n          borderColor: \"#d32f2f\",\r\n          backgroundColor: \"#d32f2f\",\r\n          fill: false,\r\n          lineTension: 0,\r\n        },\r\n        // {\r\n        //   label: \"因子A（主观睡眠质量）\",\r\n        //   data: aArray,\r\n        //   borderColor: \"#ffeb3b\",\r\n        //   backgroundColor: \"#ffeb3b\",\r\n        //   fill: false,\r\n        //   lineTension: 0,\r\n        // },\r\n        // {\r\n        //   label: \"因子B（睡眠潜伏期）\",\r\n        //   data: bArray,\r\n        //   borderColor: \"#4caf50\",\r\n        //   backgroundColor: \"#4caf50\",\r\n        //   fill: false,\r\n        //   lineTension: 0,\r\n        // },\r\n        // {\r\n        //   label: \"因子C（睡眠持续性）\",\r\n        //   data: cArray,\r\n        //   borderColor: \"#0d47a1\",\r\n        //   backgroundColor: \"#0d47a1\",\r\n        //   fill: false,\r\n        //   lineTension: 0,\r\n        // },\r\n        // {\r\n        //   label: \"因子D（习惯性睡眠效率）\",\r\n        //   data: dArray,\r\n        //   borderColor: \"#9E9E9E\",\r\n        //   backgroundColor: \"#9E9E9E\",\r\n        //   fill: false,\r\n        //   lineTension: 0,\r\n        // },\r\n        // {\r\n        //   label: \"因子E（睡眠紊乱\",\r\n        //   data: eArray,\r\n        //   borderColor: \"#FF5722\",\r\n        //   backgroundColor: \"#FF5722\",\r\n        //   fill: false,\r\n        //   lineTension: 0,\r\n        // },\r\n        // {\r\n        //   label: \"因子F（使用睡眠药物）\",\r\n        //   data: fArray,\r\n        //   borderColor: \"#26A69A\",\r\n        //   backgroundColor: \"#26A69A\",\r\n        //   fill: false,\r\n        //   lineTension: 0,\r\n        // },\r\n        // {\r\n        //   label: \"因子G（白天功能紊乱）\",\r\n        //   data: gArray,\r\n        //   borderColor: \"#4DD0E1\",\r\n        //   backgroundColor: \"#4DD0E1\",\r\n        //   fill: false,\r\n        //   lineTension: 0,\r\n        // },\r\n      ];\r\n    } else if (formKey === PHCSS_FORM_KEY) {\r\n      const totalArray = formResultList.map((formResult) => {\r\n        const resultObject: PhcssResult = JSON.parse(formResult.result);\r\n        return resultObject.phcssTotal;\r\n      });\r\n      return [\r\n        {\r\n          label: \"总分\",\r\n          data: totalArray,\r\n          borderColor: \"#d32f2f\",\r\n          backgroundColor: \"#d32f2f\",\r\n          fill: false,\r\n          lineTension: 0,\r\n        },\r\n      ];\r\n    } else if (formKey === EMBU_FORM_KEY) {\r\n      const listToReturn = [];\r\n\r\n      // const fatherLabels = [\r\n      //   \"父亲 因子I（情感温暖、理解）\",\r\n      //   \"父亲 因子II（惩罚、严厉）\",\r\n      //   \"父亲 因子III（过分干涉）\",\r\n      //   \"父亲 因子IV（偏爱被试）\",\r\n      //   \"父亲 因子V（拒绝、否认）\",\r\n      //   \"父亲 因子VI（过度保护）\",\r\n      // ];\r\n      const fatherLabels = [\r\n        \"父亲 因子I\",\r\n        \"父亲 因子II\",\r\n        \"父亲 因子III\",\r\n        \"父亲 因子IV\",\r\n        \"父亲 因子V\",\r\n        \"父亲 因子VI\",\r\n      ];\r\n      const fatherColors = [\r\n        \"#B71C1C\",\r\n        \"#880E4F\",\r\n        \"#4A148C\",\r\n        \"#757575\",\r\n        \"#FF8F00\",\r\n        \"#0D47A1\",\r\n      ];\r\n      const fatherFactorsData = formResultList.map((formResult) => {\r\n        const resultObject: EmbuResult = JSON.parse(formResult.result);\r\n        if (resultObject.embuIsFatherAnswerCompleted)\r\n          return resultObject.embuFatherComponents;\r\n        else return [];\r\n      });\r\n\r\n      for (let i = 0; i < fatherLabels.length; i++) {\r\n        listToReturn.push({\r\n          label: fatherLabels[i],\r\n          data: fatherFactorsData.map((data) => data[i]),\r\n          backgroundColor: fatherColors[i],\r\n          borderColor: fatherColors[i],\r\n          fill: false,\r\n          lineTension: 0,\r\n        });\r\n      }\r\n      // const motherLabel = [\r\n      //   \"母亲 因子I（情感温暖、理解）\",\r\n      //   \"母亲 因子II（过干涉、过保护）\",\r\n      //   \"母亲 因子III（拒绝、否认）\",\r\n      //   \"母亲 因子IV（惩罚、严厉）\",\r\n      //   \"母亲 因子V（偏爱被试）\",\r\n      // ];\r\n      const motherLabel = [\r\n        \"母亲 因子I\",\r\n        \"母亲 因子II\",\r\n        \"母亲 因子III\",\r\n        \"母亲 因子IV\",\r\n        \"母亲 因子V\",\r\n      ];\r\n      const motherColors = [\r\n        \"#B3E5FC\",\r\n        \"#B2EBF2\",\r\n        \"#B2DFDB\",\r\n        \"#C8E6C9\",\r\n        \"#FFCC80\",\r\n      ];\r\n      const motherFactorsData = formResultList.map((formResult) => {\r\n        const resultObject: EmbuResult = JSON.parse(formResult.result);\r\n        if (resultObject.embuIsMotherAnswerCompleted)\r\n          return resultObject.embuMotherComponents;\r\n        else return [];\r\n      });\r\n\r\n      for (let i = 0; i < motherLabel.length; i++) {\r\n        listToReturn.push({\r\n          label: motherLabel[i],\r\n          data: motherFactorsData.map((data) => data[i]),\r\n          backgroundColor: motherColors[i],\r\n          borderColor: motherColors[i],\r\n          fill: false,\r\n          lineTension: 0,\r\n        });\r\n      }\r\n      return listToReturn;\r\n    }\r\n    return undefined;\r\n  }, [formKey, formName, formResultList]);\r\n  let showLabel = true;\r\n  if (\r\n    HIDE_LABEL_FORMS.includes(formName) ||\r\n    HIDE_LABEL_KEYS.includes(formKey)\r\n  ) {\r\n    showLabel = false;\r\n  }\r\n  // const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const handleCloseDialog = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n  const openDialog = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Button\r\n          startIcon={<EqualizerIcon />}\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          disabled={formResultList.length <= 1}\r\n          onClick={openDialog}\r\n        >\r\n          趋势\r\n        </Button>\r\n      </div>\r\n      <Dialog onClose={handleCloseDialog} open={isDialogOpen}>\r\n        <DialogTitle>{formName}分数趋势</DialogTitle>\r\n        <DialogContent>\r\n          <LineChart\r\n            labelList={fillInDateList}\r\n            dataList={resultList}\r\n            multipleDataList={multipleDataList}\r\n            showLabel={showLabel}\r\n          />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.bcf589ff.png\";","import { useMutation } from \"@apollo/client\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  createStyles,\r\n  makeStyles,\r\n  TextField,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { ErrorIndicator, LoadingIndicator } from \"../../lib/components\";\r\nimport { DOCTOR_LOG_IN } from \"../../lib/graphql/mutations\";\r\nimport {\r\n  DoctorLogIn,\r\n  DoctorLogInVariables,\r\n} from \"../../lib/graphql/mutations/DoctorLogIn/__generated__/DoctorLogIn\";\r\n// import {\r\n//   LogIn as LogInData,\r\n//   LogInVariables,\r\n// } from \"../../lib/graphql/mutations/Login/__generated__/LogIn\";\r\nimport { Doctor, Viewer } from \"../../lib/type\";\r\nimport logo from \"../AppHeader/assets/logo.png\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    logInCard: {\r\n      borderRadius: 8,\r\n      width: \"min(450px, 90%)\",\r\n      margin: \"0 auto 0\",\r\n    },\r\n    logInText: {\r\n      fontSize: \"1.5rem\",\r\n      textAlign: \"center\",\r\n      marginBottom: 20,\r\n      marginTop: 25,\r\n    },\r\n    promptText: {\r\n      marginBottom: 24,\r\n      fontSize: \"1rem\",\r\n      textAlign: \"center\",\r\n    },\r\n    input: {\r\n      width: \"100%\",\r\n    },\r\n    inputContainer: {\r\n      margin: \"0 40px\",\r\n    },\r\n    userNameInput: {\r\n      marginBottom: 15,\r\n    },\r\n    passwordInput: {\r\n      marginBottom: 30,\r\n    },\r\n    buttonContainer: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    },\r\n    logo: {\r\n      height: 92,\r\n    },\r\n    logoContainer: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    },\r\n    pageContainer: {\r\n      backgroundColor: \"#f5f5f5\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    },\r\n    topPadding: {\r\n      height: \"min(100px, 30%)\",\r\n    },\r\n  })\r\n);\r\n\r\ninterface AccountInfo {\r\n  userName: string;\r\n  password: string;\r\n}\r\n\r\nconst initialAccountInfo = {\r\n  userName: \"\",\r\n  password: \"\",\r\n};\r\n\r\ninterface Props {\r\n  isAuthorized: boolean;\r\n  setViewer: (viewer: Viewer) => void;\r\n  setDoctor: (doctor: Doctor) => void;\r\n  doctor: Doctor;\r\n}\r\n\r\nexport const Login = ({\r\n  isAuthorized,\r\n  setViewer,\r\n  setDoctor,\r\n  doctor,\r\n}: Props) => {\r\n  const classes = useStyles();\r\n  // const [logIn] = useMutation<LogInData, LogInVariables>(LOG_IN, {\r\n  //   onCompleted: (data) => {\r\n  //     if (data && data.logIn && data.logIn.token) {\r\n  //       setViewer(data.logIn);\r\n  //     }\r\n  //   },\r\n  //   onError: (error) => {\r\n  //     setIsLogInErrorShown(true);\r\n  //   },\r\n  // });\r\n  // const logInRef = useRef(logIn);\r\n  const [doctorLogIn] = useMutation<DoctorLogIn, DoctorLogInVariables>(\r\n    DOCTOR_LOG_IN,\r\n    {\r\n      onCompleted: (data) => {\r\n        if (data && data.doctorLogIn) {\r\n          const { name, userName, didRequest } = data.doctorLogIn;\r\n          setDoctor({\r\n            name,\r\n            userName,\r\n            didRequest,\r\n          });\r\n          setIsRedo(false);\r\n        }\r\n      },\r\n      onError: (error) => {\r\n        setIsLogInErrorShown(true);\r\n      },\r\n    }\r\n  );\r\n  const doctorLoginRef = useRef(doctorLogIn);\r\n  const [accountInfo, setAccountInfo] = useState<AccountInfo>(\r\n    initialAccountInfo\r\n  );\r\n  const [isNameAndPasswordValidated, setIsNameAndPasswordValidated] = useState(\r\n    false\r\n  );\r\n  const [isLogInErrorShown, setIsLogInErrorShown] = useState(false);\r\n  const handleKeyPress = (event: KeyboardEvent) => {\r\n    if (event.key === \"Enter\") {\r\n      logInButtonOnClick();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyPress);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyPress);\r\n    };\r\n  });\r\n  const [isRedo, setIsRedo] = useState(true);\r\n  const detectRedoRef = useRef(() => {\r\n    if (\r\n      history.location.state &&\r\n      history.location.state.from.pathname === \"/doctor\"\r\n    ) {\r\n      setIsRedo(true);\r\n    } else {\r\n      setIsRedo(false);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    detectRedoRef.current();\r\n  }, []);\r\n  const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAccountInfo({ ...accountInfo, userName: e.target.value });\r\n  };\r\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAccountInfo({ ...accountInfo, password: e.target.value });\r\n  };\r\n  const logInButtonOnClick = () => {\r\n    setIsNameAndPasswordValidated(true);\r\n    if (accountInfo.userName && accountInfo.password)\r\n      doctorLoginRef.current({\r\n        variables: {\r\n          input: {\r\n            userName: accountInfo.userName,\r\n            password: accountInfo.password,\r\n          },\r\n        },\r\n      });\r\n  };\r\n  const history = useHistory<\r\n    { from: Location; redo: boolean | undefined } | undefined\r\n  >();\r\n  const isDoctor =\r\n    history.location.state &&\r\n    history.location.state.from.pathname.includes(\"doctor\")\r\n      ? true\r\n      : false;\r\n  if (isAuthorized) {\r\n    // let redirectUrl = \"/user\";\r\n    // if (history.location.state) {\r\n    //   redirectUrl = history.location.state.from.pathname;\r\n    // }\r\n    if (!isRedo) {\r\n      if (isDoctor) {\r\n      \t\r\n        if (!doctor.userName) {\r\n          return <LoadingIndicator />;\r\n        } else {\r\n          return <Redirect to={`/doctor/${doctor.userName}`} />;\r\n        }\r\n      }\r\n      return <Redirect to=\"/user\" />;\r\n    }\r\n  }\r\n  console.log(\"aa\\n\\n\\n\\n\\n\\nbbb\");\r\n  return (\r\n    <div className={classes.pageContainer}>\r\n      <div className={classes.topPadding} />\r\n      <Card className={classes.logInCard}>\r\n        <CardContent>\r\n          <div className={classes.logoContainer}>\r\n            <img src={logo} className={classes.logo} alt=\"医院标志\" />\r\n          </div>\r\n          <div className={classes.logInText}>\r\n            {isDoctor ? \"医生端\" : \"用户端\"}\r\n          </div>\r\n          <div className={classes.promptText}>请输入医生的用户名和密码</div>\r\n          <form>\r\n            <div className={classes.inputContainer}>\r\n              <TextField\r\n                autoFocus\r\n                className={classes.input + \" \" + classes.userNameInput}\r\n                color=\"primary\"\r\n                value={accountInfo.userName}\r\n                label=\"用户名\"\r\n                onChange={handleNameChange}\r\n                helperText={\r\n                  isNameAndPasswordValidated && !accountInfo.userName\r\n                    ? \"请输入您的用户名\"\r\n                    : undefined\r\n                }\r\n                error={\r\n                  isNameAndPasswordValidated && !accountInfo.userName\r\n                    ? true\r\n                    : undefined\r\n                }\r\n                inputProps={{ \"aira-label\": \"用户名\" }}\r\n              />\r\n              <TextField\r\n                className={classes.input + \" \" + classes.passwordInput}\r\n                color=\"primary\"\r\n                value={accountInfo.password}\r\n                label=\"密码\"\r\n                helperText={\r\n                  isNameAndPasswordValidated && !accountInfo.password\r\n                    ? \"请输入您的密码\"\r\n                    : undefined\r\n                }\r\n                error={\r\n                  isNameAndPasswordValidated && !accountInfo.password\r\n                    ? true\r\n                    : undefined\r\n                }\r\n                onChange={handlePasswordChange}\r\n                type=\"password\"\r\n                inputProps={{ \"aira-label\": \"密码\" }}\r\n              />\r\n            </div>\r\n            <div className={classes.buttonContainer}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={logInButtonOnClick}\r\n              >\r\n                登录\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n      <ErrorIndicator\r\n        showError={isLogInErrorShown}\r\n        setShowError={setIsLogInErrorShown}\r\n        errorMessage={\"用户名或密码不正确！\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/cardIcon.2b436e10.png\";","import { gql } from \"@apollo/client\";\r\n\r\nexport const QUESTIONNAIRE_LIST = gql`\r\n  query QuestionnaireList($isReport: Boolean!, $showAll: Boolean) {\r\n    questionnaireList(isReport: $isReport, showAll: $showAll) {\r\n      name\r\n      description\r\n      id\r\n      done\r\n      displayedFillInDate\r\n      userAnswerId\r\n      result\r\n      key\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const QUESTIONNAIRE_CONTENT = gql`\r\n  query QuestionnaireContent($id: String!) {\r\n    questionnaire(id: $id) {\r\n      instruction\r\n      name\r\n      questions {\r\n        choices\r\n        content\r\n        parent\r\n      }\r\n      key\r\n    }\r\n    partialAnswer(questionnaireId: $id) {\r\n      answers\r\n      date\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const REPORT = gql`\r\n  query Report($userAnswerIds: [String!]!, $pageSize: String) {\r\n    report(userAnswerIds: $userAnswerIds, pageSize: $pageSize) {\r\n      pdf\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const REPORT_FOR_ADMIN = gql`\r\n  query ReportForAdmin($userId: String, $userAnswerIds: [String!]!, $pageSize: String) {\r\n    reportForAdmin(userId: $userId, userAnswerIds: $userAnswerIds, pageSize: $pageSize) {\r\n      pdf\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const DOCTOR_LIST = gql`\r\n  query DoctorList($limit: Int!, $currentPageIndex: Int!) {\r\n    doctorList(limit: $limit, currentPageIndex: $currentPageIndex) {\r\n      total\r\n      admins {\r\n        name\r\n        userName\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const CHECK_IF_DOCTOR_CONFIG_USER_NAME_UNIQUE = gql`\r\n  query CheckIfDoctorConfigNameUnique($doctorConfigName: String!) {\r\n    checkIfDoctorConfigNameUnique(doctorConfigName: $doctorConfigName) {\r\n      result\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const CHECK_IF_DOCTOR_USER_NAME_UNIQUE = gql`\r\n  query CheckIfDoctorNameUnique($userName: String!) {\r\n    checkIfDoctorUserNameUnique(userName: $userName) {\r\n      result\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const USER_ANSWER = gql`\r\n  query UserAnsewr($questionnaireId: String!) {\r\n    userAnswer(questionnaireId: $questionnaireId) {\r\n      answers\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const QUERY_USER = gql`\r\n  query QueryUser(\r\n    $userName: String\r\n    $name: String\r\n    $gender: String\r\n    $ageRange: AgeRange\r\n    $minSignUpDate: SignUpDate\r\n    $maxSignUpDate: SignUpDate\r\n    $limit: Int!\r\n    $currentPageIndex: Int!\r\n    $filter: UsersFilter\r\n    $onlyMyPatient: Boolean\r\n    $additionalFields: [String!]\r\n  ) {\r\n    queryUser(\r\n      userName: $userName\r\n      name: $name\r\n      gender: $gender\r\n      ageRange: $ageRange\r\n      minSignUpDate: $minSignUpDate\r\n      maxSignUpDate: $maxSignUpDate\r\n      limit: $limit\r\n      currentPageIndex: $currentPageIndex\r\n      filter: $filter\r\n      onlyMyPatient: $onlyMyPatient\r\n      additionalFields: $additionalFields\r\n    ) {\r\n      total\r\n      users {\r\n        id\r\n        name\r\n        userName\r\n        gender\r\n        education\r\n        jobStatus\r\n        age\r\n        marriageStatus\r\n        signUpDate\r\n        doctorName\r\n        doctorUserName\r\n        doctorId\r\n        finishedForms {\r\n          name\r\n          id\r\n          displayedFillInDate\r\n          userAnswerId\r\n          result\r\n          doctorUserName\r\n          doctorName\r\n          doctorId\r\n          key\r\n        }\r\n        diagnosis\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const DOCTOR_CONFIG_LIST = gql`\r\n  query DoctorConfigList {\r\n    doctorConfigList {\r\n      configs {\r\n        selected\r\n        formIds\r\n        configName\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n","// Error dialog for EPQ (adult version).\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\ninterface Props {\r\n  isOpen: boolean;\r\n  handleClose: () => void;\r\n  goToLogInPage: () => void;\r\n  age?: null | number;\r\n  gender?: null | string;\r\n}\r\n\r\nexport const EnterGenderAndAgeDialog = ({\r\n  isOpen,\r\n  handleClose,\r\n  goToLogInPage,\r\n  age,\r\n  gender,\r\n}: Props) => {\r\n  return (\r\n    <Dialog open={isOpen} onClose={handleClose}>\r\n      <DialogTitle>\r\n        {!age || (age >= 16 && !gender)\r\n          ? \"请您完善信息\"\r\n          : age >= 7 && age < 16\r\n          ? \"请使用儿童版量表\"\r\n          : \"年龄不符合条件\"}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          {(!age || !gender) && \"请您填写性别和年龄信息。\"}\r\n          {age !== undefined && age !== null && age < 16\r\n            ? \"填写该量表最小年龄为16岁。\"\r\n            : null}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={!age || age >= 16 ? goToLogInPage : handleClose}\r\n          color=\"primary\"\r\n          autoFocus\r\n        >\r\n          确定\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","// Error dialog for EPQ (children version).\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\ninterface Props {\r\n  isOpen: boolean;\r\n  handleClose: () => void;\r\n  goToLogInPage: () => void;\r\n  age?: null | number;\r\n  gender?: null | string;\r\n}\r\n\r\nexport const ChildrenEnterGenderAndAgeDialog = ({\r\n  isOpen,\r\n  handleClose,\r\n  goToLogInPage,\r\n  age,\r\n  gender,\r\n}: Props) => {\r\n  return (\r\n    <Dialog open={isOpen} onClose={handleClose}>\r\n      <DialogTitle>\r\n        {!age || (age < 16 && age > 7 && !gender)\r\n          ? \"请您完善信息\"\r\n          : age >= 16\r\n          ? \"请使用成人版量表\"\r\n          : \"年龄不符合条件\"}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          {(!age || !gender) && \"请您填写性别和年龄信息。\"}\r\n          {age !== undefined && age !== null && (age >= 16 || age < 7)\r\n            ? \"填写该量表年龄应在7岁到15岁之间。\"\r\n            : null}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={\r\n            !age || !(age >= 16 || age < 7) ? goToLogInPage : handleClose\r\n          }\r\n          color=\"primary\"\r\n          autoFocus\r\n        >\r\n          确定\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","// Error dialog for EPQ (children version).\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\ninterface Props {\r\n  isOpen: boolean;\r\n  handleClose: () => void;\r\n  goToLogInPage: () => void;\r\n  age?: null | number;\r\n  gender?: null | string;\r\n}\r\n\r\nexport const PhcssGenderAndAgeDialog = ({\r\n  isOpen,\r\n  handleClose,\r\n  goToLogInPage,\r\n  age,\r\n  gender,\r\n}: Props) => {\r\n  return (\r\n    <Dialog open={isOpen} onClose={handleClose}>\r\n      <DialogTitle>\r\n        {!age || (age < 17 && age > 7 && !gender)\r\n          ? \"请您完善信息\"\r\n          : \"年龄不符合条件\"}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          {(!age || !gender) && \"请您填写性别和年龄信息。\"}\r\n          {age !== undefined && age !== null && (age >= 17 || age <= 7)\r\n            ? \"填写该量表年龄应在8岁到16岁之间。\"\r\n            : null}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={\r\n            !age || !(age >= 17 || age <= 7) ? goToLogInPage : handleClose\r\n          }\r\n          color=\"primary\"\r\n          autoFocus\r\n        >\r\n          确定\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","// Error dialog for EPQ (children version).\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\ninterface Props {\r\n  isOpen: boolean;\r\n  handleClose: () => void;\r\n  goToLogInPage: () => void;\r\n  gender?: null | string;\r\n}\r\n\r\nexport const PsssGenderDialog = ({\r\n  isOpen,\r\n  handleClose,\r\n  goToLogInPage,\r\n  gender,\r\n}: Props) => {\r\n  return (\r\n    <Dialog open={isOpen} onClose={handleClose}>\r\n      <DialogTitle>请您完善信息</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>请您填写性别信息。</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={goToLogInPage} color=\"primary\" autoFocus>\r\n          确定\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import { Snackbar } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\ninterface Props {\r\n  showSuccess: boolean;\r\n  setShowSuccess: (showError: boolean) => void;\r\n  successMessage: string;\r\n}\r\n\r\nexport const SuccessIndicator = (props: Props) => {\r\n  const { showSuccess, setShowSuccess, successMessage } = props;\r\n  return (\r\n    <Snackbar\r\n      open={showSuccess}\r\n      onClose={() => setShowSuccess(false)}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n    >\r\n      <MuiAlert\r\n        elevation={6}\r\n        variant=\"filled\"\r\n        severity=\"success\"\r\n        onClose={() => setShowSuccess(false)}\r\n      >\r\n        {successMessage}\r\n      </MuiAlert>\r\n    </Snackbar>\r\n  );\r\n};\r\n","import { useQuery } from \"@apollo/client\";\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  createStyles,\r\n  Divider,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  ListSubheader,\r\n  makeStyles,\r\n  Theme,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport indigo from \"@material-ui/core/colors/indigo\";\r\nimport React, { useMemo, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CardIcon from \"./assets/cardIcon.png\";\r\nimport {\r\n  QuestionnaireList as QuestionnaireListData,\r\n  QuestionnaireListVariables,\r\n  QuestionnaireList_questionnaireList as QuestionnaireData,\r\n} from \"../../lib/graphql/queries/QuestionnaireList/__generated__/QuestionnaireList\";\r\nimport { QUESTIONNAIRE_LIST } from \"../../lib/graphql/queries\";\r\nimport { LineChartPopOver, LoadingIndicator } from \"../../lib/components\";\r\nimport { Patient } from \"../../lib/type\";\r\nimport {\r\n  EYSCENCK_CHILDREN_FORM_NAME,\r\n  EYSCENCK_FORM_NAME,\r\n  PHCSS_FORM_KEY,\r\n  PSSS_FORM_KEY,\r\n} from \"../../lib/utils/constants\";\r\nimport {\r\n  EnterGenderAndAgeDialog,\r\n  PhcssGenderAndAgeDialog,\r\n  PsssGenderDialog,\r\n} from \"./components\";\r\nimport { ChildrenEnterGenderAndAgeDialog } from \"./components/ChildrenEnterGenderAndAgeDialog\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport { SuccessIndicator } from \"../../lib/components/SuccessIndicator\";\r\n\r\nconst CARD_WIDTH = 250;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    content: {\r\n      padding: \"5px 10px\",\r\n    },\r\n    listName: {\r\n      fontSize: \"1rem\",\r\n      color: \"rgba(0, 0, 0, .654)\",\r\n      marginTop: 20,\r\n      marginBottom: 20,\r\n    },\r\n    root: {\r\n      display: \"grid\",\r\n      gridTemplateColumns: `repeat(auto-fill, ${CARD_WIDTH}px)`,\r\n      rowGap: \"20px\",\r\n      columnGap: \"8px\",\r\n    },\r\n    card: {\r\n      height: 212,\r\n    },\r\n    cardActionArea: {\r\n      width: CARD_WIDTH,\r\n      cursor: \"pointer\",\r\n      \"&:hover\": {\r\n        backgroundColor: indigo[50],\r\n      },\r\n      height: 160,\r\n      display: \"flex\",\r\n      justifyContent: \"flex-start\",\r\n      alignItems: \"flex-start\",\r\n    },\r\n    cardIcon: {\r\n      width: 40,\r\n      height: 40,\r\n    },\r\n    unfinishedText: {\r\n      fontSize: \"0.8125rem\",\r\n      color: \"rgba(0, 0, 0, .54)\",\r\n      margin: \"5px 0\",\r\n    },\r\n    finishedText: {\r\n      fontSize: \"0.8125rem\",\r\n      color: \"#4caf50\",\r\n      margin: \"5px 0\",\r\n    },\r\n    questionnaireName: {\r\n      fontSize: \"1rem\",\r\n      color: \"#111\",\r\n      lineHeight: \"1.5rem\",\r\n    },\r\n    cardActionContainer: {\r\n      paddingLeft: 20,\r\n      height: 50,\r\n    },\r\n    noOverflow: {\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n      whiteSpace: \"nowrap\",\r\n    },\r\n    pageHeader: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n    refreshButtonContainer: {\r\n      marginLeft: 15,\r\n    },\r\n    cardContent: {\r\n      padding: 15,\r\n    },\r\n  })\r\n);\r\n\r\nexport type FormResult = { result: string; fillInDate: string };\r\n\r\ninterface Props {\r\n  patient: Patient;\r\n}\r\n\r\nexport const Home = ({ patient }: Props) => {\r\n  const isSmallScreen = useMediaQuery(\"(max-width:600px)\");\r\n  const classes = useStyles();\r\n  const { loading, data, error: questionnaireListError, refetch } = useQuery<\r\n    QuestionnaireListData,\r\n    QuestionnaireListVariables\r\n  >(QUESTIONNAIRE_LIST, {\r\n    fetchPolicy: \"no-cache\",\r\n    variables: { isReport: false },\r\n  });\r\n  const listData: {\r\n    uniqueFormList: QuestionnaireData[];\r\n    resultList: FormResult[][];\r\n  } = useMemo(() => {\r\n    if (!data) return { uniqueFormList: [], resultList: [] as FormResult[][] };\r\n    const formList: QuestionnaireData[] = [];\r\n    const resultList: FormResult[][] = [];\r\n    const formSet: Set<string> = new Set();\r\n    data.questionnaireList.forEach((questionnaire) => {\r\n      if (!formSet.has(questionnaire.id)) {\r\n        formSet.add(questionnaire.id);\r\n        formList.push(questionnaire);\r\n        if (questionnaire.result && questionnaire.displayedFillInDate) {\r\n          resultList.push([\r\n            {\r\n              result: questionnaire.result,\r\n              fillInDate: questionnaire.displayedFillInDate,\r\n            },\r\n          ]);\r\n        } else {\r\n          resultList.push([] as FormResult[]);\r\n        }\r\n      } else if (questionnaire.result && questionnaire.displayedFillInDate) {\r\n        let index = 0;\r\n        while (index <= formList.length) {\r\n          if (formList[index].id === questionnaire.id) {\r\n            resultList[index].push({\r\n              result: questionnaire.result,\r\n              fillInDate: questionnaire.displayedFillInDate,\r\n            });\r\n            break;\r\n          }\r\n          index += 1;\r\n        }\r\n      }\r\n    });\r\n    return { uniqueFormList: formList, resultList };\r\n  }, [data]);\r\n  const { uniqueFormList, resultList } = listData;\r\n  const [isGenderAndAgeDialogOpen, setIsGenderAndAgeDialogOpen] = useState(\r\n    false\r\n  );\r\n  const [\r\n    isChildrenGenderAndAgeDialogOpen,\r\n    setIsChildrenGenderAndAgeDialogOpen,\r\n  ] = useState(false);\r\n  const [isPhcssDialogOpen, setIsPhcssDialogOpen] = useState(false);\r\n  const [isPsssDialogOpen, setIsPsssDialogOpen] = useState(false);\r\n  const closeGenderAndAgeDialog = () => {\r\n    setIsGenderAndAgeDialogOpen(false);\r\n  };\r\n  const closeChildrenGenderAndAgeDialog = () => {\r\n    setIsChildrenGenderAndAgeDialogOpen(false);\r\n  };\r\n  const closePhcssDialog = () => {\r\n    setIsPhcssDialogOpen(false);\r\n  };\r\n  const closePsssDialog = () => {\r\n    setIsPsssDialogOpen(false);\r\n  };\r\n  const goToLogInPage = () => {\r\n    history.push(`/user/login?userName=${patient.userName}`);\r\n  };\r\n  const [isSuccessShown, setIsSuccessShown] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const history = useHistory();\r\n  const reloadButtonOnClick = async () => {\r\n    await refetch();\r\n    setSuccessMessage(\"成功更新列表\");\r\n    setIsSuccessShown(true);\r\n  };\r\n  if (loading) {\r\n    return <LoadingIndicator />;\r\n  }\r\n  if (data) {\r\n    const questionnaireName = (questionnaire: QuestionnaireData) => {\r\n      const defaultReturn = (\r\n        <span className={classes.questionnaireName}>{questionnaire.name}</span>\r\n      );\r\n      // Note that this is Chinese parentheses!\r\n      if (!/^.*（.*）$/.test(questionnaire.name)) {\r\n        return defaultReturn;\r\n      } else {\r\n        const nameMatchFormResult = questionnaire.name.match(/^.*（/);\r\n        const abbreviationMatchFormResult = questionnaire.name.match(/（.*）/);\r\n        if (nameMatchFormResult && abbreviationMatchFormResult) {\r\n          const name = nameMatchFormResult[0].substring(\r\n            0,\r\n            nameMatchFormResult[0].length - 1\r\n          );\r\n          const abbreviation = abbreviationMatchFormResult[0];\r\n          return (\r\n            <span\r\n              className={classes.questionnaireName + \" \" + classes.noOverflow}\r\n            >\r\n              <span className={classes.noOverflow}>{name}</span>\r\n              <br />\r\n              {abbreviation.replace(\"（\", \"(\").replace(\"）\", \")\")}\r\n            </span>\r\n          );\r\n        }\r\n        return defaultReturn;\r\n      }\r\n    };\r\n    const goToFormPage = (\r\n      formId: string,\r\n      formName: string,\r\n      formKey: string\r\n    ) => {\r\n      if (formName === EYSCENCK_FORM_NAME) {\r\n        if (!patient.gender || !patient.age || patient.age < 16) {\r\n          setIsGenderAndAgeDialogOpen(true);\r\n          return;\r\n        }\r\n      } else if (formName === EYSCENCK_CHILDREN_FORM_NAME) {\r\n        if (\r\n          !patient.gender ||\r\n          !patient.age ||\r\n          patient.age >= 16 ||\r\n          patient.age <= 6\r\n        ) {\r\n          setIsChildrenGenderAndAgeDialogOpen(true);\r\n          return;\r\n        }\r\n      } else if (formKey === PHCSS_FORM_KEY) {\r\n        if (\r\n          !patient.gender ||\r\n          !patient.age ||\r\n          patient.age >= 17 || // Age should be a number between 8 - 16.\r\n          patient.age <= 7\r\n        ) {\r\n          setIsPhcssDialogOpen(true);\r\n          return;\r\n        }\r\n      } else if (formKey === PSSS_FORM_KEY) {\r\n        if (!patient.gender) {\r\n          setIsPsssDialogOpen(true);\r\n          return;\r\n        }\r\n      }\r\n      history.push(`/user/form?id=${formId}`);\r\n    };\r\n    const finishStatus = (questionnaire: QuestionnaireData) => (\r\n      <span\r\n        className={\r\n          questionnaire.done ? classes.finishedText : classes.unfinishedText\r\n        }\r\n      >\r\n        {questionnaire.done ? \"已完成\" : \"未完成\"}\r\n      </span>\r\n    );\r\n    if (isSmallScreen) {\r\n      return (\r\n        <>\r\n          <List subheader={<ListSubheader>量表</ListSubheader>}>\r\n            {uniqueFormList.map((questionnaire, index) => (\r\n              <ListItem\r\n                button\r\n                onClick={() =>\r\n                  goToFormPage(\r\n                    questionnaire.id,\r\n                    questionnaire.name,\r\n                    questionnaire.key\r\n                  )\r\n                }\r\n                key={questionnaire.id}\r\n              >\r\n                <ListItemAvatar>\r\n                  <img\r\n                    src={CardIcon}\r\n                    alt=\"量表图标\"\r\n                    className={classes.cardIcon}\r\n                  />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={\r\n                    <div className={classes.questionnaireName}>\r\n                      {questionnaire.name}\r\n                    </div>\r\n                  }\r\n                  secondary={finishStatus(questionnaire)}\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <EnterGenderAndAgeDialog\r\n            isOpen={isGenderAndAgeDialogOpen}\r\n            handleClose={closeGenderAndAgeDialog}\r\n            goToLogInPage={goToLogInPage}\r\n            age={patient.age}\r\n            gender={patient.gender}\r\n          />\r\n          <ChildrenEnterGenderAndAgeDialog\r\n            isOpen={isChildrenGenderAndAgeDialogOpen}\r\n            handleClose={closeChildrenGenderAndAgeDialog}\r\n            goToLogInPage={goToLogInPage}\r\n            age={patient.age}\r\n            gender={patient.gender}\r\n          />\r\n          <PhcssGenderAndAgeDialog\r\n            isOpen={isPhcssDialogOpen}\r\n            handleClose={closePhcssDialog}\r\n            goToLogInPage={goToLogInPage}\r\n            age={patient.age}\r\n            gender={patient.gender}\r\n          />\r\n        </>\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        <div className={classes.content}>\r\n          <div className={classes.pageHeader}>\r\n            <p className={classes.listName}>量表</p>\r\n            <span className={classes.refreshButtonContainer}>\r\n              <IconButton\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                onClick={reloadButtonOnClick}\r\n              >\r\n                <RefreshIcon />\r\n              </IconButton>\r\n            </span>\r\n          </div>\r\n          <div className={classes.root}>\r\n            {uniqueFormList.map((questionnaire, index) => (\r\n              <Card\r\n                variant=\"outlined\"\r\n                className={classes.card + \" \" + classes.noOverflow}\r\n                key={questionnaire.id}\r\n              >\r\n                <CardActionArea\r\n                  className={classes.cardActionArea}\r\n                  onClick={() =>\r\n                    goToFormPage(\r\n                      questionnaire.id,\r\n                      questionnaire.name,\r\n                      questionnaire.key\r\n                    )\r\n                  }\r\n                >\r\n                  <CardContent\r\n                    className={classes.noOverflow + \" \" + classes.cardContent}\r\n                  >\r\n                    <div>\r\n                      <img\r\n                        src={CardIcon}\r\n                        alt=\"量表图标\"\r\n                        className={classes.cardIcon}\r\n                      />\r\n                    </div>\r\n                    <div className={classes.noOverflow}>\r\n                      {questionnaireName(questionnaire)}\r\n                    </div>\r\n                    {finishStatus(questionnaire)}\r\n                  </CardContent>\r\n                </CardActionArea>\r\n\r\n                <Divider />\r\n\r\n                <CardActions className={classes.cardActionContainer}>\r\n                  <LineChartPopOver\r\n                    formResultList={resultList[index]}\r\n                    formName={questionnaire.name}\r\n                    formKey={questionnaire.key}\r\n                  />\r\n                </CardActions>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <EnterGenderAndAgeDialog\r\n          isOpen={isGenderAndAgeDialogOpen}\r\n          handleClose={closeGenderAndAgeDialog}\r\n          goToLogInPage={goToLogInPage}\r\n          age={patient.age}\r\n          gender={patient.gender}\r\n        />\r\n        <ChildrenEnterGenderAndAgeDialog\r\n          isOpen={isChildrenGenderAndAgeDialogOpen}\r\n          handleClose={closeChildrenGenderAndAgeDialog}\r\n          goToLogInPage={goToLogInPage}\r\n          age={patient.age}\r\n          gender={patient.gender}\r\n        />\r\n        <PhcssGenderAndAgeDialog\r\n          isOpen={isPhcssDialogOpen}\r\n          handleClose={closePhcssDialog}\r\n          goToLogInPage={goToLogInPage}\r\n          age={patient.age}\r\n          gender={patient.gender}\r\n        />\r\n        <PsssGenderDialog\r\n          isOpen={isPsssDialogOpen}\r\n          handleClose={closePsssDialog}\r\n          goToLogInPage={goToLogInPage}\r\n          gender={patient.gender}\r\n        />\r\n        <SuccessIndicator\r\n          showSuccess={isSuccessShown}\r\n          setShowSuccess={setIsSuccessShown}\r\n          successMessage={successMessage}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const PATIENT_LOG_OUT = gql`\r\n  mutation PatientLogOut {\r\n    patientLogOut {\r\n      didRequest\r\n    }\r\n  }\r\n`;\r\n","import { useQuery } from \"@apollo/client\";\r\nimport React, { ComponentType, PropsWithChildren } from \"react\";\r\nimport { LoadingIndicator } from \"../../../../lib/components\";\r\nimport { REPORT } from \"../../../../lib/graphql/queries\";\r\nimport {\r\n  Report as ReportData,\r\n  ReportVariables,\r\n} from \"../../../../lib/graphql/queries/Report/__generated__/Report\";\r\n\r\nexport const withReportPdfData = (\r\n  WrappedComponent: ComponentType<\r\n    PropsWithChildren<{\r\n      pdfData: string;\r\n      closeReport: () => void;\r\n      patientName?: string;\r\n    }>\r\n  >\r\n) => {\r\n  return ({\r\n    children,\r\n    userAnswerIds,\r\n    closeReport,\r\n    pageSize,\r\n    patientName,\r\n  }: PropsWithChildren<{\r\n    userAnswerIds: string[];\r\n    closeReport: () => void;\r\n    pageSize: string;\r\n    patientName?: string;\r\n  }>) => {\r\n    // Get PDF data.\r\n    const { data, loading } = useQuery<ReportData, ReportVariables>(REPORT, {\r\n      variables: {\r\n        userAnswerIds,\r\n        pageSize,\r\n      },\r\n      fetchPolicy: \"no-cache\",\r\n    });\r\n\r\n    if (loading || !data) {\r\n      return <LoadingIndicator />;\r\n    }\r\n\r\n    if (data.report && data.report.pdf) {\r\n      return (\r\n        <WrappedComponent\r\n          pdfData={data.report.pdf}\r\n          closeReport={closeReport}\r\n          patientName={patientName}\r\n        >\r\n          {children}\r\n        </WrappedComponent>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n};\r\n","/* tslint:disable */\r\n/* eslint-disable */\r\n// @generated\r\n// This file was automatically generated and should not be edited.\r\n\r\n//==============================================================\r\n// START Enums and Input Objects\r\n//==============================================================\r\n\r\nexport enum UsersFilter {\r\n  DATE_LATEST = \"DATE_LATEST\",\r\n  DATE_OLDEST = \"DATE_OLDEST\",\r\n}\r\n\r\nexport interface AddDiagnosisInput {\r\n  patientId: string;\r\n  diagnosis: string;\r\n}\r\n\r\nexport interface AddDoctorInput {\r\n  userName: string;\r\n  name: string;\r\n  password: string;\r\n}\r\n\r\nexport interface AgeRange {\r\n  min?: number | null;\r\n  max?: number | null;\r\n}\r\n\r\nexport interface CreateAccountInput {\r\n  userName: string;\r\n  password: string;\r\n  name: string;\r\n  education: string;\r\n  jobStatus: string;\r\n  gender: string;\r\n  marriageStatus: string;\r\n  age?: number | null;\r\n}\r\n\r\nexport interface DeleteConfigInput {\r\n  configId: string;\r\n}\r\n\r\nexport interface DoctorConfigInput {\r\n  selected: boolean;\r\n  formIds: string[];\r\n  configName: string;\r\n}\r\n\r\nexport interface DoctorLoginInput {\r\n  userName: string;\r\n  password: string;\r\n}\r\n\r\nexport interface LogInInput {\r\n  userName: string;\r\n  password: string;\r\n}\r\n\r\nexport interface SelectConfigInput {\r\n  configId?: string | null;\r\n}\r\n\r\nexport interface SignUpDate {\r\n  year: number;\r\n  month: number;\r\n  day: number;\r\n}\r\n\r\nexport interface UserAnswerInput {\r\n  questionnaireId: string;\r\n  answers: number[];\r\n}\r\n\r\nexport interface UserLoginInput {\r\n  userName: string;\r\n  name: string;\r\n  education?: string | null;\r\n  jobStatus?: string | null;\r\n  gender?: string | null;\r\n  marriageStatus?: string | null;\r\n  age?: number | null;\r\n}\r\n\r\n//==============================================================\r\n// END Enums and Input Objects\r\n//==============================================================\r\n","import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { AppBar, Button, IconButton, Toolbar } from \"@material-ui/core\";\r\nimport logo from \"./assets/logo.png\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport { Viewer } from \"../../lib/type\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { DOCTOR_LOG_OUT } from \"../../lib/graphql/mutations\";\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\nimport { PatientLogOut } from \"../../lib/graphql/mutations/PatientLogOut/__generated__/PatientLogOut\";\r\nimport { PATIENT_LOG_OUT } from \"../../lib/graphql/mutations/PatientLogOut\";\r\nimport { DoctorLogOut } from \"../../lib/graphql/mutations/DoctorLogOut/__generated__/doctorLogOut\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    header: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    logo: {\r\n      marginRight: theme.spacing(2),\r\n      maxWidth: 30,\r\n      maxHeight: 30,\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      fontSize: \"1.25rem\",\r\n    },\r\n    timerHeader: {\r\n      overflow: \"hidden\",\r\n      backgroundColor: \"rgb(236, 238, 248)\",\r\n    },\r\n    actionContainer: {\r\n      float: \"right\",\r\n      paddingRight: 20,\r\n      paddingTop: 10,\r\n      fontSize: \"0.875rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n  })\r\n);\r\n\r\ninterface Props {\r\n  viewer: Viewer;\r\n  setViewer: (viewer: Viewer) => void;\r\n  type: \"doctor\" | \"user\";\r\n  setIsSiderOpen?: (isSiderOpen: boolean) => void;\r\n}\r\n\r\nexport const AppHeader = (props: Props) => {\r\n  const { viewer, setViewer, type } = props;\r\n  const history = useHistory();\r\n\r\n  const [width, setWidth] = React.useState(window.innerWidth);\r\n\r\n  const updateWidth = () => {\r\n    if (window.innerWidth !== width) setWidth(window.innerWidth);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener(\"resize\", updateWidth);\r\n    return () => window.removeEventListener(\"resize\", updateWidth);\r\n  });\r\n\r\n  const [logOut] = useMutation<DoctorLogOut>(DOCTOR_LOG_OUT, {\r\n    onCompleted: (data) => {\r\n      if (data && data.doctorLogOut.didRequest) {\r\n        setViewer(data.doctorLogOut);\r\n        sessionStorage.removeItem(\"token\");\r\n        console.log(\"log out successfully\");\r\n      }\r\n    },\r\n    onError: (error) => {\r\n      console.log(error);\r\n      console.log(\"log out failed\");\r\n    },\r\n  });\r\n  const [patientLogOut] = useMutation<PatientLogOut>(PATIENT_LOG_OUT, {\r\n    onCompleted: (data) => {\r\n      if (data && data.patientLogOut) {\r\n        setViewer(data.patientLogOut);\r\n        console.log(\"log out successfully\");\r\n      }\r\n    },\r\n    onError: (error) => {\r\n      console.log(error);\r\n      console.log(\"log out failed\");\r\n    },\r\n  });\r\n  const handleLogout = async () => {\r\n    if (type === \"doctor\") {\r\n      await logOut();\r\n      history.push(\"/doctor\");\r\n    } else {\r\n      await patientLogOut();\r\n      history.push(\"/user\");\r\n    }\r\n  };\r\n  const classes = useStyles();\r\n  const isSiderPermanent = type !== \"doctor\" || window.innerWidth > 1150;\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/user/form\" exact />\r\n      <Route path=\"/\">\r\n        <div className={classes.root}>\r\n          <AppBar position=\"fixed\" className={classes.header}>\r\n            <Toolbar>\r\n              {!isSiderPermanent && (\r\n                <IconButton\r\n                  edge=\"start\"\r\n                  color=\"inherit\"\r\n                  aria-label=\"menu\"\r\n                  onClick={() =>\r\n                    props.setIsSiderOpen && props.setIsSiderOpen(true)\r\n                  }\r\n                >\r\n                  <MenuIcon />\r\n                </IconButton>\r\n              )}\r\n              <img src={logo} alt=\"中大医院\" className={classes.logo} />\r\n              <div className={classes.title}>\r\n                {window.innerWidth >= 650\r\n                  ? \"东南大学附属中大医院心理健康评估系统\"\r\n                  : window.innerWidth >= 500\r\n                  ? \"心理健康评估系统\"\r\n                  : \"\"}\r\n              </div>\r\n\r\n              <Switch>\r\n                <Route path={[\"/doctor\", \"/user\"]}>\r\n                  {viewer && viewer.userName && (\r\n                    <Button\r\n                      color=\"inherit\"\r\n                      startIcon={<ExitToAppIcon />}\r\n                      onClick={handleLogout}\r\n                    >\r\n                      {type === \"doctor\" ? \"退出医生登录\" : \"退出系统\"}\r\n                    </Button>\r\n                  )}\r\n                </Route>\r\n              </Switch>\r\n            </Toolbar>\r\n          </AppBar>\r\n        </div>\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n","import { createStyles, Divider, makeStyles, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Viewer } from \"../../../../lib/type\";\r\n\r\ninterface Props {\r\n  viewer: Viewer;\r\n}\r\n\r\nconst checkIsFieldValid = (field: string | number | undefined | null) => {\r\n  return field !== undefined && field !== null && field !== \"\";\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    propertyName: {\r\n      color: \"#5f6368\",\r\n      fontSize: \"0.75rem\",\r\n      margin: \"8px 0\",\r\n    },\r\n    propertyDivider: {\r\n      marginTop: 5,\r\n      marginBottom: 5,\r\n    },\r\n  })\r\n);\r\n\r\nconst fields = [\r\n  \"name\",\r\n  \"gender\",\r\n  \"age\",\r\n  \"education\",\r\n  \"jobStatus\",\r\n  \"marriageStatus\",\r\n] as const;\r\nconst displayNames = [\"姓名\", \"性别\", \"年龄\", \"教育\", \"工作\", \"婚姻\"];\r\nexport const PersonalInformation = (props: Props) => {\r\n  const classes = useStyles();\r\n  const { viewer } = props;\r\n  const validIndexes: number[] = [];\r\n  for (let i = 0; i < fields.length; i++) {\r\n    if (checkIsFieldValid(viewer[fields[i]])) {\r\n      validIndexes.push(i);\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      {validIndexes.map((validIndex, index) => (\r\n        <div key={`property-${index}`}>\r\n          <div className={classes.propertyName}>{displayNames[validIndex]}</div>\r\n          <div>{viewer[fields[validIndex]]}</div>\r\n          {index !== validIndexes.length - 1 ? (\r\n            <Divider className={classes.propertyDivider} />\r\n          ) : null}\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n","import {\r\n  Card,\r\n  CardContent,\r\n  Chip,\r\n  createStyles,\r\n  Divider,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  makeStyles,\r\n  Theme,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\r\nimport React from \"react\";\r\nimport { Viewer } from \"../../lib/type\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { PersonalInformation } from \"./components\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport LocalHospitalIcon from \"@material-ui/icons/LocalHospital\";\r\nimport SettingsApplicationsIcon from \"@material-ui/icons/SettingsApplications\";\r\nimport NoteIcon from \"@material-ui/icons/Note\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    patientDrawer: {\r\n      \"@media (max-width:600px)\": {\r\n        display: \"none\",\r\n      },\r\n    },\r\n    personalInfoCard: {\r\n      margin: 5,\r\n      overflow: \"auto\",\r\n    },\r\n    personalInfoCardContent: {\r\n      \"&:last-child\": {\r\n        paddingBottom: 16,\r\n      },\r\n    },\r\n    personalInfoText: {\r\n      fontWeight: 400,\r\n      fontSize: \"1.25rem\",\r\n      marginBottom: 10,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    idChip: {\r\n      marginTop: 3,\r\n      marginBottom: 3,\r\n    },\r\n    adminMenu: {\r\n      padding: 0,\r\n    },\r\n    adminMenuHeader: {\r\n      height: 48,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      fontWeight: 500,\r\n      fontSize: \"1.125rem\",\r\n      paddingLeft: 10,\r\n    },\r\n    link: {\r\n      color: \"#111\",\r\n    },\r\n  })\r\n);\r\n\r\ninterface Props {\r\n  viewer: Viewer;\r\n  type: \"doctor\" | \"user\";\r\n  open?: boolean;\r\n  onClose?: () => void;\r\n}\r\n\r\nexport const Sider = (props: Props) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const { viewer, type } = props;\r\n\r\n  const [width, setWidth] = React.useState(window.innerWidth);\r\n\r\n  const updateWidth = () => {\r\n    if (window.innerWidth !== width) setWidth(window.innerWidth);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener(\"resize\", updateWidth);\r\n    return () => window.removeEventListener(\"resize\", updateWidth);\r\n  });\r\n\r\n  const isPermanent = type !== \"doctor\" || window.innerWidth > 1150;\r\n  return (\r\n    <Drawer\r\n      className={`${classes.drawer} ${\r\n        type !== \"doctor\" ? classes.patientDrawer : \"\"\r\n      }`}\r\n      variant={isPermanent ? \"permanent\" : undefined}\r\n      open={isPermanent ? true : props.open}\r\n      classes={{ paper: classes.drawerPaper }}\r\n      onClose={props.onClose}\r\n      // style={{\r\n      //   display:\r\n      //     type === \"doctor\" && window.innerWidth <= 1150 ? \"none\" : undefined,\r\n      // }}\r\n    >\r\n      {isPermanent ? <Toolbar /> : null}\r\n      {type === \"doctor\" ? (\r\n        <>\r\n          <div className={classes.adminMenuHeader}>{viewer.name}医生已登入</div>\r\n          <Divider />\r\n          <List className={classes.adminMenu}>\r\n            <Link to={`/doctor/${viewer.userName}`} className={classes.link}>\r\n              <ListItem button key=\"patientInfo\" onClick={props.onClose}>\r\n                <ListItemIcon>\r\n                  <PeopleIcon\r\n                    color={\r\n                      location.pathname === `/doctor/${viewer.userName}`\r\n                        ? \"primary\"\r\n                        : \"inherit\"\r\n                    }\r\n                  />\r\n                </ListItemIcon>\r\n                <ListItemText primary={\"病人信息\"} />\r\n              </ListItem>\r\n            </Link>\r\n            <Divider />\r\n            <Link\r\n              to={`/doctor/${viewer.userName}/manage`}\r\n              className={classes.link}\r\n            >\r\n              <ListItem button key=\"doctorInfo\" onClick={props.onClose}>\r\n                <ListItemIcon>\r\n                  <LocalHospitalIcon\r\n                    color={\r\n                      location.pathname === `/doctor/${viewer.userName}/manage`\r\n                        ? \"primary\"\r\n                        : \"inherit\"\r\n                    }\r\n                  />\r\n                </ListItemIcon>\r\n                <ListItemText primary={\"医生信息\"} />\r\n              </ListItem>\r\n            </Link>\r\n            <Divider />\r\n            <Link\r\n              to={`/doctor/${viewer.userName}/config`}\r\n              className={classes.link}\r\n            >\r\n              <ListItem button key=\"doctorInfo\" onClick={props.onClose}>\r\n                <ListItemIcon>\r\n                  <SettingsApplicationsIcon\r\n                    color={\r\n                      location.pathname === `/doctor/${viewer.userName}/config`\r\n                        ? \"primary\"\r\n                        : \"inherit\"\r\n                    }\r\n                  />\r\n                </ListItemIcon>\r\n                <ListItemText primary={\"患者端\"} />\r\n              </ListItem>\r\n            </Link>\r\n            <Divider />\r\n          </List>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Card variant=\"outlined\" className={classes.personalInfoCard}>\r\n            <CardContent className={classes.personalInfoCardContent}>\r\n              <div className={classes.personalInfoText}>个人信息</div>\r\n              <div className={classes.idChip}>\r\n                <Chip\r\n                  size=\"small\"\r\n                  icon={<AssignmentIndIcon />}\r\n                  color=\"primary\"\r\n                  label={`门诊号：${viewer.userName}`}\r\n                  variant=\"outlined\"\r\n                />\r\n              </div>\r\n              <PersonalInformation viewer={viewer} />\r\n            </CardContent>\r\n          </Card>\r\n          <List>\r\n            <Link to=\"/user/home\" className={classes.link}>\r\n              <ListItem button key=\"form\">\r\n                <ListItemIcon>\r\n                  <DescriptionIcon\r\n                    color={\r\n                      location.pathname === \"/user/home\" ? \"primary\" : \"inherit\"\r\n                    }\r\n                  />\r\n                </ListItemIcon>\r\n                <ListItemText primary={\"量表\"} />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/user/report\" className={classes.link}>\r\n              <ListItem button key=\"report\">\r\n                <ListItemIcon>\r\n                  <NoteIcon\r\n                    color={\r\n                      location.pathname === \"/user/report\"\r\n                        ? \"primary\"\r\n                        : \"inherit\"\r\n                    }\r\n                  />\r\n                </ListItemIcon>\r\n                <ListItemText primary={\"报告\"} />\r\n              </ListItem>\r\n            </Link>\r\n          </List>\r\n        </>\r\n      )}\r\n    </Drawer>\r\n  );\r\n};\r\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\ninterface Props {\r\n  totalNumber: number;\r\n  currentIndex: number;\r\n}\r\nconst PROGRESS_BAR_WIDTH = 100;\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: PROGRESS_BAR_WIDTH,\r\n      backgroundColor: \"rgba(0, 0, 0, 0.12)\",\r\n      display: \"flex\",\r\n      marginRight: 10,\r\n      height: 12,\r\n      borderRadius: 6,\r\n    },\r\n    finished: {\r\n      width: 0,\r\n      height: 12,\r\n      borderRadius: \"6px 0 0 6px\",\r\n      backgroundColor: \"#5eb8ff\",\r\n      maxWidth: PROGRESS_BAR_WIDTH - 6,\r\n    },\r\n    leftCircle: {\r\n      borderRadius: \"6px 0 0 6px\",\r\n    },\r\n    circle: {\r\n      height: 12,\r\n      width: 12,\r\n      backgroundColor: \"#5eb8ff\",\r\n    },\r\n    circlewrapper: {\r\n      overflow: \"hidden\",\r\n    },\r\n    rightCircle: {\r\n      borderRadius: 6,\r\n      backgroundColor: \"#5eb8ff\",\r\n    },\r\n    rightCircleWrapper: {\r\n      marginLeft: -6,\r\n    },\r\n  })\r\n);\r\n\r\nexport const ProgressBar = ({ totalNumber, currentIndex }: Props) => {\r\n  const classes = useStyles();\r\n  const widthOfFinishedPart =\r\n    (PROGRESS_BAR_WIDTH * (currentIndex + 1)) / totalNumber;\r\n  return (\r\n    <div className={classes.root}>\r\n      {widthOfFinishedPart > 12 ? (\r\n        <>\r\n          <div\r\n            className={classes.finished}\r\n            style={{\r\n              width: widthOfFinishedPart,\r\n            }}\r\n          />\r\n          {PROGRESS_BAR_WIDTH - widthOfFinishedPart <= 6 ? (\r\n            <div\r\n              className={\r\n                classes.rightCircleWrapper + \" \" + classes.circlewrapper\r\n              }\r\n              style={{ width: 12 - (PROGRESS_BAR_WIDTH - widthOfFinishedPart) }}\r\n            >\r\n              <div className={classes.rightCircle + \" \" + classes.circle} />\r\n            </div>\r\n          ) : null}\r\n        </>\r\n      ) : (\r\n        <div\r\n          className={classes.circlewrapper}\r\n          style={{\r\n            width: widthOfFinishedPart,\r\n          }}\r\n        >\r\n          <div className={classes.leftCircle + \" \" + classes.circle} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Timer as TimerIcon } from \"@material-ui/icons\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n    timeNumber: {\r\n      marginLeft: 10,\r\n      userSelect: \"none\",\r\n      WebkitUserSelect: \"none\",\r\n      WebkitTouchCallout: \"none\",\r\n      KhtmlUserSelect: \"none\",\r\n      MozUserSelect: \"none\",\r\n      msUserSelect: \"none\",\r\n    },\r\n  })\r\n);\r\nexport const Timer = () => {\r\n  const classes = useStyles();\r\n  const [seconds, setSeconds] = useState(0);\r\n  useEffect(() => {\r\n    const interval = setTimeout(() => {\r\n      setSeconds(seconds + 1);\r\n    }, 1000);\r\n    return () => {\r\n      clearTimeout(interval);\r\n    };\r\n  }, [seconds]);\r\n  const hour = Math.floor(seconds / 3600);\r\n  const minute = Math.floor(seconds / 60);\r\n  const second = seconds % 60;\r\n  return (\r\n    <div className={classes.root}>\r\n      <TimerIcon />\r\n      <span className={classes.timeNumber}>{`${hour < 10 ? \"0\" + hour : hour}:${\r\n        minute < 10 ? \"0\" + minute : minute\r\n      }:${second < 10 ? \"0\" + second : second}`}</span>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\ninterface Props {\r\n  index: number;\r\n  totalSize: number;\r\n}\r\n\r\nconst CHINESE_INDEXES = [\r\n  \"一\",\r\n  \"二\",\r\n  \"三\",\r\n  \"四\",\r\n  \"五\",\r\n  \"六\",\r\n  \"七\",\r\n  \"八\",\r\n  \"九\",\r\n  \"十\",\r\n];\r\n\r\nexport const QuestionIndexText = ({ index, totalSize }: Props) => {\r\n  let text: string;\r\n  if (totalSize <= 10) {\r\n    text = CHINESE_INDEXES[index] + \"、\";\r\n  } else {\r\n    text = String(index + 1) + \". \";\r\n  }\r\n  return <>{text}</>;\r\n};\r\n","import { QuestionnaireContent } from \"../../../../lib/graphql/queries/QuestionnaireContent/__generated__/QuestionnaireContent\";\r\n\r\nexport const yaleBrownCustomization = (\r\n  setAnswers: (\r\n    value: React.SetStateAction<{\r\n      [index: number]: number;\r\n    }>\r\n  ) => void,\r\n  setChoiceDisabled: (\r\n    value: React.SetStateAction<boolean[][] | null | undefined>\r\n  ) => void,\r\n  choiceDisabled: boolean[][] | null | undefined,\r\n  newAnswers: {\r\n    [x: number]: number;\r\n  },\r\n  currentQuestionIndex: number\r\n) => {\r\n  if (currentQuestionIndex === 0) {\r\n    const autoChooseChoices = [1, 2, 3, 4];\r\n    if (newAnswers[currentQuestionIndex] === 0) {\r\n      for (const autoChooseChoiceIndex of autoChooseChoices) {\r\n        newAnswers[autoChooseChoiceIndex] = 0;\r\n      }\r\n      setAnswers(newAnswers);\r\n      if (choiceDisabled) {\r\n        const newChoiceDisabled = choiceDisabled.map((choices) => [...choices]);\r\n        for (const autoChooseChoiceIndex of autoChooseChoices) {\r\n          for (\r\n            let i = 0;\r\n            i < newChoiceDisabled[autoChooseChoiceIndex].length;\r\n            i++\r\n          ) {\r\n            if (i !== 0) {\r\n              newChoiceDisabled[autoChooseChoiceIndex][i] = true;\r\n            }\r\n          }\r\n        }\r\n        setChoiceDisabled(newChoiceDisabled);\r\n      }\r\n    } else {\r\n      setAnswers(newAnswers);\r\n      if (choiceDisabled) {\r\n        const newChoiceDisabled = choiceDisabled.map((choices) => [...choices]);\r\n        for (const autoChooseChoiceIndex of autoChooseChoices) {\r\n          for (\r\n            let i = 0;\r\n            i < newChoiceDisabled[autoChooseChoiceIndex].length;\r\n            i++\r\n          ) {\r\n            if (i !== 0) {\r\n              newChoiceDisabled[autoChooseChoiceIndex][i] = false;\r\n            }\r\n          }\r\n        }\r\n        setChoiceDisabled(newChoiceDisabled);\r\n      }\r\n    }\r\n  } else if (currentQuestionIndex === 5) {\r\n    const autoChooseChoices = [6, 7, 8, 9];\r\n    if (newAnswers[currentQuestionIndex] === 0) {\r\n      for (const autoChooseChoiceIndex of autoChooseChoices) {\r\n        newAnswers[autoChooseChoiceIndex] = 0;\r\n      }\r\n      setAnswers(newAnswers);\r\n      if (choiceDisabled) {\r\n        const newChoiceDisabled = choiceDisabled.map((choices) => [...choices]);\r\n        for (const autoChooseChoiceIndex of autoChooseChoices) {\r\n          for (\r\n            let i = 0;\r\n            i < newChoiceDisabled[autoChooseChoiceIndex].length;\r\n            i++\r\n          ) {\r\n            if (i !== 0) {\r\n              newChoiceDisabled[autoChooseChoiceIndex][i] = true;\r\n            }\r\n          }\r\n        }\r\n        setChoiceDisabled(newChoiceDisabled);\r\n      }\r\n    } else {\r\n      setAnswers(newAnswers);\r\n      if (choiceDisabled) {\r\n        const newChoiceDisabled = choiceDisabled.map((choices) => [...choices]);\r\n        for (const autoChooseChoiceIndex of autoChooseChoices) {\r\n          for (\r\n            let i = 0;\r\n            i < newChoiceDisabled[autoChooseChoiceIndex].length;\r\n            i++\r\n          ) {\r\n            if (i !== 0) {\r\n              newChoiceDisabled[autoChooseChoiceIndex][i] = false;\r\n            }\r\n          }\r\n        }\r\n        setChoiceDisabled(newChoiceDisabled);\r\n      }\r\n    }\r\n  } else {\r\n    setAnswers(newAnswers);\r\n  }\r\n};\r\n\r\nexport const yaleBrownSkipQuestions = (\r\n  currentQuestionnIndex: number,\r\n  setCurrentQuestionIndex: (value: React.SetStateAction<number>) => void,\r\n  choice: number,\r\n  setIsAllowedToSubmit: (value: React.SetStateAction<boolean>) => void\r\n) => {\r\n  if (currentQuestionnIndex === 0 && choice === 0) {\r\n    setCurrentQuestionIndex(5);\r\n  } else if (currentQuestionnIndex === 5 && choice === 0) {\r\n    setCurrentQuestionIndex(9);\r\n    setIsAllowedToSubmit(true);\r\n  } else {\r\n    setCurrentQuestionIndex(currentQuestionnIndex + 1);\r\n  }\r\n};\r\n\r\nexport const yaleBrownInitialLoad = (\r\n  data: QuestionnaireContent,\r\n  choiceDisabled: boolean[][],\r\n  setChoiceDisabled: (choiceDisabled: null | boolean[][]) => void\r\n) => {\r\n  const newChoiceDisabled = choiceDisabled.map((choices) => [...choices]);\r\n  if (\r\n    data.partialAnswer &&\r\n    data.partialAnswer.answers &&\r\n    data.partialAnswer.answers[0] === 0\r\n  ) {\r\n    const autoChooseChoices = [1, 2, 3, 4];\r\n    for (const autoChooseChoiceIndex of autoChooseChoices) {\r\n      for (\r\n        let i = 0;\r\n        i < newChoiceDisabled[autoChooseChoiceIndex].length;\r\n        i++\r\n      ) {\r\n        if (i !== 0) {\r\n          newChoiceDisabled[autoChooseChoiceIndex][i] = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  if (\r\n    data.partialAnswer &&\r\n    data.partialAnswer.answers &&\r\n    data.partialAnswer.answers[5] === 0\r\n  ) {\r\n    const autoChooseChoices = [6, 7, 8, 9];\r\n    for (const autoChooseChoiceIndex of autoChooseChoices) {\r\n      for (\r\n        let i = 0;\r\n        i < newChoiceDisabled[autoChooseChoiceIndex].length;\r\n        i++\r\n      ) {\r\n        if (i !== 0) {\r\n          newChoiceDisabled[autoChooseChoiceIndex][i] = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  setChoiceDisabled(newChoiceDisabled);\r\n};\r\n","import {\r\n  QuestionnaireContent,\r\n  QuestionnaireContent_partialAnswer,\r\n  QuestionnaireContent_questionnaire,\r\n} from \"../../../../lib/graphql/queries/QuestionnaireContent/__generated__/QuestionnaireContent\";\r\n\r\nexport const embuRadioButtonOnClick = (\r\n  e: React.MouseEvent<HTMLLabelElement>,\r\n  index: number,\r\n  currentQuestionIndex: number,\r\n  selectChoiceLockRef: React.MutableRefObject<boolean>,\r\n  choiceDisabled: boolean[][] | null | undefined,\r\n  answers: {\r\n    [x: number]: number;\r\n  },\r\n  setAnswers: (answers: { [x: number]: number }) => void,\r\n  questionnaire: QuestionnaireContent_questionnaire,\r\n  setIsNextButtonDisabled: (isNextButtonDisabled: boolean) => void,\r\n  setCurrentQuestionIndex: (currentQuestionIndex: number) => void,\r\n  timeoutRef: React.MutableRefObject<NodeJS.Timeout | null>,\r\n  setIsAllowedToSubmit: (isAllowedToSubmit: boolean) => void,\r\n  needAddOne: boolean\r\n) => {\r\n  if (\r\n    selectChoiceLockRef.current ||\r\n    (choiceDisabled && choiceDisabled[currentQuestionIndex][index])\r\n  ) {\r\n    return;\r\n  }\r\n  const newAnswers = { ...answers };\r\n  if (needAddOne) newAnswers[currentQuestionIndex * 2 + 1] = index;\r\n  else newAnswers[currentQuestionIndex * 2] = index;\r\n\r\n  setAnswers(newAnswers);\r\n  if (currentQuestionIndex !== questionnaire.questions.length - 1) {\r\n    if (\r\n      newAnswers[currentQuestionIndex * 2] !== undefined &&\r\n      newAnswers[currentQuestionIndex * 2 + 1] !== undefined\r\n    ) {\r\n      // Go to the next question.\r\n      setIsNextButtonDisabled(true);\r\n      selectChoiceLockRef.current = true;\r\n      const timeout = setTimeout(() => {\r\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n        if (timeoutRef.current) {\r\n          clearTimeout(timeoutRef.current);\r\n        }\r\n        setIsNextButtonDisabled(false);\r\n        selectChoiceLockRef.current = false;\r\n      }, 190);\r\n      timeoutRef.current = timeout;\r\n    }\r\n  } else {\r\n    setIsAllowedToSubmit(true);\r\n  }\r\n};\r\n\r\nexport const embuLoadPartialAnswers = (\r\n  partialAnswer: { answers: number[] } | null,\r\n  data: QuestionnaireContent,\r\n  setIsAllowedToSubmit: (isAllowedToSubmit: boolean) => void,\r\n  setAnswers: (answers: { [x: number]: number }) => void,\r\n  setCurrentQuestionIndex: (currentQuestionIndex: number) => void\r\n) => {\r\n  if (partialAnswer?.answers?.length) {\r\n    const newAnswers = {} as { [index: number]: number };\r\n    let unfinishedQuestionIndex: number | undefined = undefined;\r\n    partialAnswer.answers.forEach((answer, index) => {\r\n      if (answer !== -1) newAnswers[index] = answer;\r\n      else if (unfinishedQuestionIndex === undefined)\r\n        unfinishedQuestionIndex = index;\r\n    });\r\n    if (\r\n      partialAnswer.answers.length ===\r\n        data.questionnaire.questions.length * 2 &&\r\n      unfinishedQuestionIndex === undefined\r\n    ) {\r\n      setIsAllowedToSubmit(true);\r\n    } else {\r\n      if (\r\n        embuValidationAll(\r\n          newAnswers,\r\n          data.questionnaire.questions.length,\r\n          undefined,\r\n          undefined,\r\n          undefined,\r\n          false\r\n        )\r\n      ) {\r\n        setIsAllowedToSubmit(true);\r\n      }\r\n    }\r\n    setAnswers(newAnswers);\r\n    if (unfinishedQuestionIndex === undefined)\r\n      setCurrentQuestionIndex(\r\n        Math.min(\r\n          partialAnswer.answers.length,\r\n          data.questionnaire.questions.length - 1\r\n        )\r\n      );\r\n    else setCurrentQuestionIndex(Math.floor(unfinishedQuestionIndex / 2));\r\n  }\r\n};\r\n\r\nexport const embuShouldDisableNextButton = (\r\n  answers: {\r\n    [x: number]: number;\r\n  },\r\n  currentQuestionIndex: number,\r\n  questionNumber: number,\r\n  isNextButtonDisabled: boolean\r\n) => {\r\n  return (currentQuestionIndex === questionNumber - 1 || // Last question.\r\n    (answers[currentQuestionIndex * 2] === undefined &&\r\n      answers[currentQuestionIndex * 2 + 1] === undefined) || // Current question is not answered.\r\n    isNextButtonDisabled) && // A variable in state to try to disable the button.\r\n    !(\r\n      // If the button is disabled, then current question is not answered and next question is not answered.\r\n      (\r\n        (answers[currentQuestionIndex * 2] !== undefined ||\r\n          answers[currentQuestionIndex * 2 + 1] !== undefined) &&\r\n        (answers[(currentQuestionIndex + 1) * 2] !== undefined ||\r\n          answers[(currentQuestionIndex + 1) * 2 + 1] !== undefined)\r\n      )\r\n    )\r\n    ? true\r\n    : false;\r\n};\r\n\r\nexport const embuValidationAll = (\r\n  answers: {\r\n    [x: number]: number;\r\n  },\r\n  questionNumber: number,\r\n  setIsErrorDialogShown?: (isErrorDialogShown: boolean) => void,\r\n  setErrorDialogMessage?: (errorMessage: string) => void,\r\n  setErrorDialogQuestionIndex?: (index: number) => void,\r\n  showError = true\r\n): boolean => {\r\n  let isAllEvenQuestionAnswered = true;\r\n  let isAllOddQuestionAnswered = true;\r\n  let isAllEvenQuestionNotAnswered = true;\r\n  let isAllOddQuestionNotAnswered = true;\r\n  let firstUndefinedIndex = -1;\r\n  for (let i = 0; i < questionNumber; i++) {\r\n    if (answers[i * 2] === undefined) {\r\n      isAllEvenQuestionAnswered = false;\r\n      if (firstUndefinedIndex === -1) {\r\n        firstUndefinedIndex = i * 2;\r\n      }\r\n    } else {\r\n      isAllEvenQuestionNotAnswered = false;\r\n    }\r\n    if (answers[i * 2 + 1] === undefined) {\r\n      isAllOddQuestionAnswered = false;\r\n      if (firstUndefinedIndex === -1) {\r\n        firstUndefinedIndex = i * 2 + 1;\r\n      }\r\n    } else {\r\n      isAllOddQuestionNotAnswered = false;\r\n    }\r\n  }\r\n  // If all even questions and odd questions is answered, return true.\r\n  if (isAllEvenQuestionAnswered === true && isAllOddQuestionAnswered === true) {\r\n    return true;\r\n  }\r\n  if (isAllEvenQuestionAnswered && isAllOddQuestionNotAnswered) {\r\n    return true;\r\n  }\r\n  if (isAllOddQuestionAnswered && isAllEvenQuestionNotAnswered) {\r\n    return true;\r\n  }\r\n  // Open a dialog to tell the user to answer a specific question.\r\n  if (firstUndefinedIndex !== -1) {\r\n    if (\r\n      showError &&\r\n      setIsErrorDialogShown &&\r\n      setErrorDialogQuestionIndex &&\r\n      setErrorDialogMessage\r\n    ) {\r\n      setErrorDialogQuestionIndex(Math.floor(firstUndefinedIndex / 2));\r\n      if (firstUndefinedIndex % 2 === 0) {\r\n        setErrorDialogMessage(\r\n          `您未填写第${Math.floor(firstUndefinedIndex / 2) + 1}题的父亲部分。`\r\n        );\r\n      } else {\r\n        setErrorDialogMessage(\r\n          `您未填写第${Math.floor(firstUndefinedIndex / 2) + 1}题的母亲部分。`\r\n        );\r\n      }\r\n      setIsErrorDialogShown(true);\r\n    }\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n","export const psqiValidation = (\r\n  currentQuestionIndex: number,\r\n  value: number | string,\r\n  setErrorMessage: (errorMessage: string) => void,\r\n  showError: () => void\r\n) => {\r\n  if (value === undefined || value === null || value === \"\") {\r\n    setErrorMessage(\"未填写数值！\");\r\n    showError();\r\n    return false;\r\n  }\r\n  if (currentQuestionIndex === 0) {\r\n    if (value >= 25 || value < 0) {\r\n      setErrorMessage(\"数值不符合要求！\");\r\n      showError();\r\n      return false;\r\n    }\r\n  } else if (currentQuestionIndex === 1) {\r\n    if (value >= 1440 || value < 0) {\r\n      setErrorMessage(\"数值不符合要求！\");\r\n      showError();\r\n      return false;\r\n    }\r\n  } else if (currentQuestionIndex === 2) {\r\n    if (value >= 25 || value < 0) {\r\n      setErrorMessage(\"数值不符合要求！\");\r\n      showError();\r\n      return false;\r\n    }\r\n  } else if (currentQuestionIndex === 3) {\r\n    if (value < 0 || value >= 25) {\r\n      setErrorMessage(\"数值不符合要求！\");\r\n      showError();\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\n","import { useMutation, useQuery } from \"@apollo/client\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  createStyles,\r\n  FormControl,\r\n  FormControlLabel,\r\n  makeStyles,\r\n  Radio,\r\n  Theme,\r\n  Link,\r\n  Fab,\r\n  useMediaQuery,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  TextField,\r\n  FormLabel,\r\n  RadioGroup,\r\n} from \"@material-ui/core\";\r\nimport React, {\r\n  SyntheticEvent,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { ErrorIndicator, LoadingIndicator } from \"../../lib/components\";\r\nimport {\r\n  SAVE_PARTIAL_ANSWER,\r\n  SAVE_USER_ANSWER,\r\n} from \"../../lib/graphql/mutations\";\r\nimport {\r\n  SaveUserAnswer as SaveUserAnswerData,\r\n  SaveUserAnswerVariables,\r\n} from \"../../lib/graphql/mutations/SaveUserAnswer/__generated__/SaveUserAnswer\";\r\nimport { QUESTIONNAIRE_CONTENT } from \"../../lib/graphql/queries\";\r\nimport {\r\n  QuestionnaireContent as QuestionnaireContentData,\r\n  QuestionnaireContentVariables,\r\n} from \"../../lib/graphql/queries/QuestionnaireContent/__generated__/QuestionnaireContent\";\r\nimport { ProgressBar, QuestionIndexText } from \"./Components\";\r\nimport DirectionsRunIcon from \"@material-ui/icons/DirectionsRun\";\r\nimport {\r\n  SavePartialAnswer as SavePartialAnswerData,\r\n  SavePartialAnswerVariables,\r\n} from \"../../lib/graphql/mutations/SavePartialAnswer/__generated__/SavePartialAnswer\";\r\nimport { Timer } from \"./Components\";\r\nimport {\r\n  EMBU_FORM_KEY,\r\n  PSQI_FORM_KEY,\r\n  YAML_BROWN_FORM_KEY,\r\n} from \"../../lib/utils/constants\";\r\nimport {\r\n  yaleBrownCustomization,\r\n  yaleBrownSkipQuestions,\r\n  yaleBrownInitialLoad,\r\n  embuRadioButtonOnClick,\r\n  embuLoadPartialAnswers,\r\n  embuShouldDisableNextButton,\r\n  embuValidationAll,\r\n} from \"./Customization\";\r\nimport { PRIMARY_COLOR } from \"../..\";\r\nimport { psqiValidation } from \"./Customization/psqi\";\r\nimport { Patient } from \"../../lib/type\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formContainer: {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      backgroundColor: \"#e8f1fd\",\r\n    },\r\n    form: {\r\n      width: 768,\r\n      maxWidth: \"90vw\",\r\n      margin: \"auto\",\r\n      paddingTop: 10,\r\n    },\r\n    titleCard: {\r\n      borderRadius: 8,\r\n      paddingBottom: 5,\r\n    },\r\n    titleCardColor: {\r\n      height: 10,\r\n      borderTopLeftRadius: 8,\r\n      borderTopRightRadius: 8,\r\n      backgroundColor: PRIMARY_COLOR,\r\n    },\r\n    titleCardContent: {\r\n      paddingTop: 5,\r\n      marginLeft: 5,\r\n      marginRight: 5,\r\n    },\r\n    titleCardMainText: {\r\n      fontSize: \"2rem\",\r\n      fontWeight: 400,\r\n      marginTop: 10,\r\n      marginBottom: 10,\r\n    },\r\n    questionCard: {\r\n      marginTop: 10,\r\n      borderRadius: 8,\r\n      marginBottom: 10,\r\n      paddingLeft: 5,\r\n      paddingRight: 5,\r\n    },\r\n    questionText: {\r\n      fontSize: \"1rem\",\r\n      fontWeight: 400,\r\n      marginBottom: 16,\r\n      marginTop: 10,\r\n      lineHeight: \"1.4rem\",\r\n    },\r\n    questionOptionText: {\r\n      fontSize: \"0.9rem\",\r\n      userSelect: \"none\",\r\n      WebkitUserSelect: \"none\",\r\n      WebkitTouchCallout: \"none\",\r\n      KhtmlUserSelect: \"none\",\r\n      MozUserSelect: \"none\",\r\n      msUserSelect: \"none\",\r\n    },\r\n    button: {\r\n      backgroundColor: \"#fff\",\r\n      color: PRIMARY_COLOR,\r\n      \"&:hover\": {\r\n        backgroundColor: \"#fff\",\r\n      },\r\n    },\r\n    buttonWithRightMargin: {\r\n      marginRight: 10,\r\n    },\r\n    finishedText: {\r\n      fontSize: \"0.875rem\",\r\n      marginTop: 26,\r\n      marginBottom: 26,\r\n    },\r\n    homeLink: {\r\n      fontSize: \"0.875rem\",\r\n    },\r\n    exitButton: {\r\n      position: \"static\",\r\n      right: 20,\r\n      bottom: 20,\r\n      backgroundColor: \"#fff\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"#fff\",\r\n      },\r\n    },\r\n    timerContaner: {\r\n      position: \"static\",\r\n      left: 20,\r\n      bottom: 20,\r\n    },\r\n    footer: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    progressWrapper: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      userSelect: \"none\",\r\n      WebkitUserSelect: \"none\",\r\n      WebkitTouchCallout: \"none\",\r\n      KhtmlUserSelect: \"none\",\r\n      MozUserSelect: \"none\",\r\n      msUserSelect: \"none\",\r\n    },\r\n    progressWrapperForSmallScreen: {\r\n      marginTop: 20,\r\n    },\r\n    questionParent: {\r\n      lineHeight: \"1.4rem\",\r\n      color: \"#757575\",\r\n    },\r\n    answerInput: {\r\n      marginRight: 10,\r\n      marginLeft: 10,\r\n    },\r\n    embuRadioContainer: {\r\n      width: \"50%\",\r\n    },\r\n  })\r\n);\r\n\r\ninterface Props {\r\n  patient: Patient;\r\n}\r\n\r\nexport const Form = ({ patient }: Props) => {\r\n  const isSmallScreen = useMediaQuery(\"(max-width:780px)\");\r\n  const classes = useStyles();\r\n  const query = new URLSearchParams(useLocation().search);\r\n  const id = query.get(\"id\");\r\n  const { loading, data } = useQuery<\r\n    QuestionnaireContentData,\r\n    QuestionnaireContentVariables\r\n  >(QUESTIONNAIRE_CONTENT, {\r\n    variables: {\r\n      id: id || \"\",\r\n    },\r\n    onCompleted: (data: QuestionnaireContentData) => {\r\n      const { partialAnswer } = data;\r\n      const initChoiceDisabled = data.questionnaire.questions.map(\r\n        (question) => {\r\n          return question.choices.map((_choice) => false);\r\n        }\r\n      );\r\n      if (data.questionnaire.key !== YAML_BROWN_FORM_KEY)\r\n        setChoiceDisabled(initChoiceDisabled);\r\n      else yaleBrownInitialLoad(data, initChoiceDisabled, setChoiceDisabled);\r\n\r\n      const localPartialAnswer = localStorage.getItem(\r\n        `${patient.userName}@${questionnaire.key}`\r\n      );\r\n      let answers: number[] = [];\r\n      if (partialAnswer?.answers?.length) {\r\n        answers = partialAnswer?.answers;\r\n        if (localPartialAnswer) {\r\n          const answerObject = JSON.parse(localPartialAnswer);\r\n          if (new Date(partialAnswer.date) > new Date(answerObject.time)) {\r\n            answers = partialAnswer?.answers;\r\n          } else {\r\n            answers = answerObject.answerArray;\r\n          }\r\n        }\r\n      } else if (localPartialAnswer) {\r\n        const answerObject = JSON.parse(localPartialAnswer);\r\n        answers = answerObject.answerArray;\r\n      }\r\n      if (data.questionnaire.key === EMBU_FORM_KEY) {\r\n        embuLoadPartialAnswers(\r\n          { answers },\r\n          data,\r\n          setIsAllowedToSubmit,\r\n          setAnswers,\r\n          setCurrentQuestionIndex\r\n        );\r\n      } else if (\r\n        partialAnswer?.answers?.length ||\r\n        localStorage.getItem(`${patient.userName}@${questionnaire.key}`)\r\n      ) {\r\n        const newAnswers = {} as { [index: number]: number };\r\n        let unfinishedQuestionIndex: number | undefined = undefined;\r\n        answers.forEach((answer, index) => {\r\n          if (answer !== -1) newAnswers[index] = answer;\r\n          else if (unfinishedQuestionIndex === undefined)\r\n            unfinishedQuestionIndex = index;\r\n        });\r\n        if (\r\n          answers.length === data.questionnaire.questions.length &&\r\n          unfinishedQuestionIndex === undefined\r\n        ) {\r\n          setIsAllowedToSubmit(true);\r\n        }\r\n        setAnswers(newAnswers);\r\n        if (unfinishedQuestionIndex === undefined)\r\n          setCurrentQuestionIndex(\r\n            Math.min(answers.length, data.questionnaire.questions.length - 1)\r\n          );\r\n        else setCurrentQuestionIndex(unfinishedQuestionIndex);\r\n      }\r\n    },\r\n    fetchPolicy: \"no-cache\",\r\n  });\r\n\r\n  const [saveUserAnswer, { loading: saveUserAnswerLoading }] = useMutation<\r\n    SaveUserAnswerData,\r\n    SaveUserAnswerVariables\r\n  >(SAVE_USER_ANSWER, {\r\n    onCompleted: (data) => {\r\n      if (data.saveUserAnswer.didRequest) {\r\n        setIsDone(true);\r\n      }\r\n    },\r\n  });\r\n\r\n  const [savePartialAnswer, { loading: savePartialAnswerLoading }] =\r\n    useMutation<SavePartialAnswerData, SavePartialAnswerVariables>(\r\n      SAVE_PARTIAL_ANSWER\r\n    );\r\n\r\n  const saveUserAnswerRef = useRef(saveUserAnswer);\r\n  const savePartialAnswerRef = useRef(savePartialAnswer);\r\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n  const autoSaveTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState<number>(0);\r\n  const [choiceDisabled, setChoiceDisabled] = useState<null | boolean[][]>();\r\n  const [answers, setAnswers] = useState<{ [index: number]: number }>({});\r\n  const [isDone, setIsDone] = useState(false);\r\n  const [isAllowedToSubmit, setIsAllowedToSubmit] = useState(false);\r\n  const [isNextButtonDisabled, setIsNextButtonDisabled] = useState(false);\r\n  const [confirmed, setConfirmed] = useState(false);\r\n  const history = useHistory();\r\n  const selectChoiceLockRef = useRef(false);\r\n  const [isErrorShown, setIsErrorShown] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const showError = () => {\r\n    setIsErrorShown(true);\r\n  };\r\n  // Error dialog.\r\n  const [isErrorDialogShown, setIsErrorDialogShown] = useState(false);\r\n  const closeErrorDialog = () => {\r\n    setIsErrorDialogShown(false);\r\n  };\r\n  const [errorDialogMessage, setErrorDialogMessage] = useState(\"\");\r\n  const [errorDialogQuestionIndex, setErrorDialogQuestionIndex] =\r\n    useState<number | null>(null);\r\n  const goToCertainQuestion = () => {\r\n    if (errorDialogQuestionIndex !== null) {\r\n      setCurrentQuestionIndex(errorDialogQuestionIndex);\r\n    }\r\n    setIsErrorDialogShown(false);\r\n  };\r\n\r\n  const getAnswerArray = useCallback((): number[] => {\r\n    const questionnaire = data?.questionnaire;\r\n    if (!questionnaire) {\r\n      return [];\r\n    }\r\n    const answerArray = [];\r\n    let numberOfQuestions = questionnaire.questions.length;\r\n    if (questionnaire.key === EMBU_FORM_KEY) {\r\n      numberOfQuestions *= 2;\r\n    }\r\n    for (let i = 0; i < numberOfQuestions; i++) {\r\n      if (answers[i] !== undefined) answerArray.push(answers[i]);\r\n      else answerArray.push(-1);\r\n    }\r\n    return answerArray;\r\n  }, [answers, data?.questionnaire]);\r\n  const savePartialAnswerToBackend = useCallback(() => {\r\n    const answerArray = getAnswerArray();\r\n    if (id && answerArray.length !== 0)\r\n      return savePartialAnswerRef.current({\r\n        variables: {\r\n          input: { questionnaireId: id, answers: answerArray },\r\n        },\r\n      });\r\n    return Promise.resolve();\r\n  }, [getAnswerArray, id]);\r\n  const savePartialAnswerToLocalStorage = useCallback(() => {\r\n    if (data) {\r\n      const answerArray = getAnswerArray();\r\n      localStorage.setItem(\r\n        `${patient.userName}@${data.questionnaire.key}`,\r\n        JSON.stringify({\r\n          time: new Date(),\r\n          answerArray,\r\n        })\r\n      );\r\n    }\r\n  }, [getAnswerArray, patient.userName, data]);\r\n  useEffect(() => {\r\n    savePartialAnswerToLocalStorage();\r\n  }, [savePartialAnswerToLocalStorage]);\r\n  // // Don't send partial answers to backend automatically.\r\n  // useEffect(() => {\r\n  //   autoSaveTimeoutRef.current = setInterval(() => {\r\n  //     savePartialAnswerToBackend();\r\n  //   }, 10000);\r\n  //   return () => {\r\n  //     if (autoSaveTimeoutRef.current) {\r\n  //       clearInterval(autoSaveTimeoutRef.current);\r\n  //       autoSaveTimeoutRef.current = null;\r\n  //     }\r\n  //   };\r\n  // }, [savePartialAnswerToBackend]);\r\n\r\n  if (loading) {\r\n    return <LoadingIndicator />;\r\n  }\r\n  if (!data) {\r\n    return <div>Error</div>;\r\n  }\r\n\r\n  const { questionnaire } = data;\r\n\r\n  const closeConfirmDialog = () => {\r\n    setConfirmed(true);\r\n  };\r\n\r\n  const validation = async (all = false) => {\r\n    if (questionnaire.key === PSQI_FORM_KEY) {\r\n      if (all === true) {\r\n        for (let i = 0; i < questionnaire.questions.length; i++) {\r\n          if (!psqiValidation(i, answers[i], setErrorMessage, showError)) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n      return psqiValidation(\r\n        currentQuestionIndex,\r\n        answers[currentQuestionIndex],\r\n        setErrorMessage,\r\n        showError\r\n      );\r\n    } else if (questionnaire.key === EMBU_FORM_KEY) {\r\n      if (all === true) {\r\n        return embuValidationAll(\r\n          answers,\r\n          questionnaire.questions.length,\r\n          setIsErrorDialogShown,\r\n          setErrorDialogMessage,\r\n          setErrorDialogQuestionIndex\r\n        );\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n  const onNextButtonClick = async () => {\r\n    const validationResult = await validation();\r\n    if (validationResult === false) {\r\n      return;\r\n    }\r\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    if (timeoutRef.current) {\r\n      clearTimeout(timeoutRef.current);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const validationResult = await validation(true);\r\n    if (validationResult === false) {\r\n      return;\r\n    }\r\n    if (autoSaveTimeoutRef.current) {\r\n      clearTimeout(autoSaveTimeoutRef.current);\r\n      autoSaveTimeoutRef.current = null;\r\n    }\r\n    if (id) {\r\n      const answerArray = getAnswerArray();\r\n      await saveUserAnswerRef.current({\r\n        variables: {\r\n          input: { questionnaireId: id, answers: answerArray },\r\n        },\r\n      });\r\n      localStorage.removeItem(`${patient.userName}@${questionnaire.key}`);\r\n    }\r\n  };\r\n\r\n  const onBackButtonClick = async () => {\r\n    // const validationResult = await validation();\r\n    // if (validationResult === false) {\r\n    //   return;\r\n    // }\r\n    setCurrentQuestionIndex(currentQuestionIndex - 1);\r\n    if (timeoutRef.current) {\r\n      clearTimeout(timeoutRef.current);\r\n    }\r\n  };\r\n\r\n  const goToHome = () => {\r\n    history.push(\"/user/home\");\r\n  };\r\n\r\n  const handleExitButtonClick = async () => {\r\n    if (autoSaveTimeoutRef.current) {\r\n      clearTimeout(autoSaveTimeoutRef.current);\r\n      autoSaveTimeoutRef.current = null;\r\n    }\r\n    await savePartialAnswerToBackend();\r\n    goToHome();\r\n  };\r\n\r\n  const goToHomeLinkOnClick = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    goToHome();\r\n  };\r\n  const onAnswerInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newAnswers = { ...answers };\r\n    if (\r\n      e.target.value !== undefined &&\r\n      e.target.value !== null &&\r\n      e.target.value !== \"\"\r\n    )\r\n      newAnswers[currentQuestionIndex] = Number(e.target.value);\r\n    else delete newAnswers[currentQuestionIndex];\r\n    setAnswers(newAnswers);\r\n  };\r\n  const handleRadioChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const selectedChoice = (event.target as HTMLInputElement).value;\r\n    const index = currentQuestion.choices.indexOf(selectedChoice);\r\n    if (\r\n      selectChoiceLockRef.current ||\r\n      (choiceDisabled && choiceDisabled[currentQuestionIndex][index])\r\n    ) {\r\n      return;\r\n    }\r\n    const newAnswers = { ...answers };\r\n    newAnswers[currentQuestionIndex] = index;\r\n    if (questionnaire.key === YAML_BROWN_FORM_KEY) {\r\n      yaleBrownCustomization(\r\n        setAnswers,\r\n        setChoiceDisabled,\r\n        choiceDisabled,\r\n        newAnswers,\r\n        currentQuestionIndex\r\n      );\r\n    } else {\r\n      setAnswers(newAnswers);\r\n    }\r\n    if (currentQuestionIndex !== questionnaire.questions.length - 1) {\r\n      setIsNextButtonDisabled(true);\r\n      selectChoiceLockRef.current = true;\r\n      const timeout = setTimeout(() => {\r\n        if (questionnaire.key === YAML_BROWN_FORM_KEY) {\r\n          yaleBrownSkipQuestions(\r\n            currentQuestionIndex,\r\n            setCurrentQuestionIndex,\r\n            index,\r\n            setIsAllowedToSubmit\r\n          );\r\n        } else {\r\n          setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n          if (timeoutRef.current) {\r\n            clearTimeout(timeoutRef.current);\r\n          }\r\n        }\r\n        setIsNextButtonDisabled(false);\r\n        selectChoiceLockRef.current = false;\r\n      }, 190);\r\n      timeoutRef.current = timeout;\r\n    } else {\r\n      setIsAllowedToSubmit(true);\r\n    }\r\n  };\r\n\r\n  const radioButtonOnClick = (\r\n    e: React.MouseEvent<HTMLLabelElement>,\r\n    index: number,\r\n    questionIndex: number\r\n  ) => {\r\n    if (\r\n      selectChoiceLockRef.current ||\r\n      (choiceDisabled && choiceDisabled[currentQuestionIndex][index])\r\n    ) {\r\n      return;\r\n    }\r\n    const newAnswers = { ...answers };\r\n    newAnswers[currentQuestionIndex] = index;\r\n    if (questionnaire.key === YAML_BROWN_FORM_KEY) {\r\n      yaleBrownCustomization(\r\n        setAnswers,\r\n        setChoiceDisabled,\r\n        choiceDisabled,\r\n        newAnswers,\r\n        currentQuestionIndex\r\n      );\r\n    } else {\r\n      setAnswers(newAnswers);\r\n    }\r\n    if (currentQuestionIndex !== questionnaire.questions.length - 1) {\r\n      setIsNextButtonDisabled(true);\r\n      selectChoiceLockRef.current = true;\r\n      const timeout = setTimeout(() => {\r\n        if (questionnaire.key === YAML_BROWN_FORM_KEY) {\r\n          yaleBrownSkipQuestions(\r\n            currentQuestionIndex,\r\n            setCurrentQuestionIndex,\r\n            index,\r\n            setIsAllowedToSubmit\r\n          );\r\n        } else {\r\n          setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n          if (timeoutRef.current) {\r\n            clearTimeout(timeoutRef.current);\r\n          }\r\n        }\r\n        setIsNextButtonDisabled(false);\r\n        selectChoiceLockRef.current = false;\r\n      }, 190);\r\n      timeoutRef.current = timeout;\r\n    } else {\r\n      setIsAllowedToSubmit(true);\r\n    }\r\n  };\r\n  let checkNextButtonShouldDisable =\r\n    (currentQuestionIndex === questionnaire.questions.length - 1 || // Last question.\r\n      answers[currentQuestionIndex] === undefined || // Current question is not answered.\r\n      isNextButtonDisabled) && // A variable in state to try to disable the button.\r\n    !(\r\n      // If the button is disabled, then current question is not answered and next question is not answered.\r\n      (\r\n        answers[currentQuestionIndex] !== undefined &&\r\n        answers[currentQuestionIndex + 1] !== undefined\r\n      )\r\n    )\r\n      ? true\r\n      : false;\r\n  if (questionnaire.key === EMBU_FORM_KEY) {\r\n    checkNextButtonShouldDisable = embuShouldDisableNextButton(\r\n      answers,\r\n      currentQuestionIndex,\r\n      questionnaire.questions.length,\r\n      isNextButtonDisabled\r\n    );\r\n  }\r\n\r\n  const currentQuestion = questionnaire.questions[currentQuestionIndex];\r\n  return (\r\n    <div className={classes.formContainer}>\r\n      <div className={classes.form}>\r\n        <Card className={classes.titleCard} variant=\"outlined\">\r\n          <div className={classes.titleCardColor} />\r\n          <CardContent className={classes.titleCardContent}>\r\n            <div className={classes.titleCardMainText}>\r\n              {questionnaire.name}\r\n            </div>\r\n            {isDone && (\r\n              <>\r\n                <div className={classes.finishedText}>\r\n                  您已完成此量表的填写。\r\n                </div>\r\n                <Link\r\n                  onClick={goToHomeLinkOnClick}\r\n                  className={classes.homeLink}\r\n                  href=\"/\"\r\n                >\r\n                  回到主页\r\n                </Link>\r\n              </>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n        {!isDone && (\r\n          <>\r\n            <Card className={classes.questionCard} variant=\"outlined\">\r\n              <CardContent>\r\n                {currentQuestion.parent ? (\r\n                  <div className={classes.questionParent}>\r\n                    {currentQuestion.parent}\r\n                  </div>\r\n                ) : null}\r\n                <div className={classes.questionText}>\r\n                  <QuestionIndexText\r\n                    index={currentQuestionIndex}\r\n                    totalSize={questionnaire.questions.length}\r\n                  />\r\n                  {currentQuestion.choices.length === 0 &&\r\n                  currentQuestion.content &&\r\n                  currentQuestion.content.includes(\"{input}\") ? (\r\n                    <>\r\n                      {currentQuestion.content.split(\"{input}\")[0]}\r\n                      <TextField\r\n                        type=\"number\"\r\n                        className={classes.answerInput}\r\n                        value={\r\n                          answers[currentQuestionIndex] !== null &&\r\n                          answers[currentQuestionIndex] !== undefined\r\n                            ? answers[currentQuestionIndex]\r\n                            : \"\"\r\n                        }\r\n                        onChange={onAnswerInputChange}\r\n                      />\r\n                      {currentQuestion.content.split(\"{input}\")[1]}\r\n                    </>\r\n                  ) : (\r\n                    currentQuestion.content\r\n                  )}\r\n                </div>\r\n                {questionnaire.key !== EMBU_FORM_KEY ? (\r\n                  <RadioGroup\r\n                    value={\r\n                      currentQuestion.choices[answers[currentQuestionIndex]] ||\r\n                      \"\"\r\n                    }\r\n                    onChange={handleRadioChange}\r\n                  >\r\n                    <FormControl component=\"fieldset\">\r\n                      {currentQuestion.choices.map((choice, index) => (\r\n                        <FormControlLabel\r\n                          value={choice}\r\n                          control={<Radio color=\"primary\" />}\r\n                          key={`choice-${index}`}\r\n                          label={\r\n                            <span className={classes.questionOptionText}>\r\n                              {choice}\r\n                            </span>\r\n                          }\r\n                          disabled={\r\n                            choiceDisabled &&\r\n                            choiceDisabled[currentQuestionIndex][index]\r\n                              ? true\r\n                              : undefined\r\n                          }\r\n                          // checked={answers[currentQuestionIndex] === index}\r\n                          onClick={\r\n                            answers[currentQuestionIndex] === index\r\n                              ? (e: React.MouseEvent<HTMLLabelElement>) =>\r\n                                  radioButtonOnClick(\r\n                                    e,\r\n                                    index,\r\n                                    currentQuestionIndex\r\n                                  )\r\n                              : undefined\r\n                          }\r\n                        />\r\n                      ))}\r\n                    </FormControl>\r\n                  </RadioGroup>\r\n                ) : (\r\n                  <>\r\n                    <FormControl\r\n                      component=\"fieldset\"\r\n                      className={classes.embuRadioContainer}\r\n                    >\r\n                      <FormLabel component=\"legend\">父亲</FormLabel>\r\n                      {currentQuestion.choices.map((choice, index) => (\r\n                        <FormControlLabel\r\n                          value={choice}\r\n                          control={<Radio color=\"primary\" />}\r\n                          key={`choice-${index}`}\r\n                          label={\r\n                            <span className={classes.questionOptionText}>\r\n                              {choice}\r\n                            </span>\r\n                          }\r\n                          checked={answers[currentQuestionIndex * 2] === index}\r\n                          onClick={(e) =>\r\n                            embuRadioButtonOnClick(\r\n                              e,\r\n                              index,\r\n                              currentQuestionIndex,\r\n                              selectChoiceLockRef,\r\n                              choiceDisabled,\r\n                              answers,\r\n                              setAnswers,\r\n                              questionnaire,\r\n                              setIsNextButtonDisabled,\r\n                              setCurrentQuestionIndex,\r\n                              timeoutRef,\r\n                              setIsAllowedToSubmit,\r\n                              false\r\n                            )\r\n                          }\r\n                        />\r\n                      ))}\r\n                    </FormControl>\r\n                    <FormControl component=\"fieldset\">\r\n                      <FormLabel component=\"legend\">母亲</FormLabel>\r\n                      {currentQuestion.choices.map((choice, index) => (\r\n                        <FormControlLabel\r\n                          value={choice}\r\n                          control={<Radio color=\"primary\" />}\r\n                          key={`choice-${index}`}\r\n                          label={\r\n                            <span className={classes.questionOptionText}>\r\n                              {choice}\r\n                            </span>\r\n                          }\r\n                          checked={\r\n                            answers[currentQuestionIndex * 2 + 1] === index\r\n                          }\r\n                          onClick={(e) =>\r\n                            embuRadioButtonOnClick(\r\n                              e,\r\n                              index,\r\n                              currentQuestionIndex,\r\n                              selectChoiceLockRef,\r\n                              choiceDisabled,\r\n                              answers,\r\n                              setAnswers,\r\n                              questionnaire,\r\n                              setIsNextButtonDisabled,\r\n                              setCurrentQuestionIndex,\r\n                              timeoutRef,\r\n                              setIsAllowedToSubmit,\r\n                              true\r\n                            )\r\n                          }\r\n                        />\r\n                      ))}\r\n                    </FormControl>\r\n                  </>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <div className={isSmallScreen ? \"\" : classes.footer}>\r\n              <div>\r\n                <Button\r\n                  className={\r\n                    classes.buttonWithRightMargin + \" \" + classes.button\r\n                  }\r\n                  variant=\"contained\"\r\n                  onClick={onBackButtonClick}\r\n                  disabled={currentQuestionIndex !== 0 ? false : true}\r\n                >\r\n                  上一题\r\n                </Button>\r\n                <Button\r\n                  className={\r\n                    classes.buttonWithRightMargin + \" \" + classes.button\r\n                  }\r\n                  variant=\"contained\"\r\n                  onClick={onNextButtonClick}\r\n                  disabled={checkNextButtonShouldDisable}\r\n                >\r\n                  下一题\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={onSubmit}\r\n                  disabled={!isAllowedToSubmit || saveUserAnswerLoading}\r\n                >\r\n                  提交\r\n                </Button>\r\n              </div>\r\n              <div\r\n                className={\r\n                  classes.progressWrapper +\r\n                  \" \" +\r\n                  (isSmallScreen ? classes.progressWrapperForSmallScreen : \"\")\r\n                }\r\n              >\r\n                <ProgressBar\r\n                  totalNumber={questionnaire.questions.length}\r\n                  currentIndex={currentQuestionIndex}\r\n                />\r\n                {`第 ${currentQuestionIndex + 1} 题（共\r\n                 ${questionnaire.questions.length} 题）`}\r\n              </div>\r\n            </div>\r\n            <div className={classes.timerContaner}>\r\n              <Timer />\r\n            </div>\r\n            <Fab\r\n              className={classes.exitButton}\r\n              onClick={handleExitButtonClick}\r\n              variant=\"extended\"\r\n              disabled={savePartialAnswerLoading}\r\n            >\r\n              <DirectionsRunIcon color=\"primary\" />\r\n              暂存并退出\r\n            </Fab>\r\n          </>\r\n        )}\r\n      </div>\r\n      <Dialog\r\n        open={!confirmed && !!questionnaire.instruction}\r\n        onClose={closeConfirmDialog}\r\n      >\r\n        <DialogTitle>指导语</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>{questionnaire.instruction}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={closeConfirmDialog} color=\"primary\" autoFocus>\r\n            继续\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <ErrorIndicator\r\n        showError={isErrorShown}\r\n        setShowError={setIsErrorShown}\r\n        errorMessage={errorMessage}\r\n      />\r\n      <Dialog open={isErrorDialogShown} onClose={closeErrorDialog}>\r\n        <DialogTitle>提示</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>{errorDialogMessage}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={goToCertainQuestion} color=\"primary\" autoFocus>\r\n            前往该题\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n","import { useMutation } from \"@apollo/client\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  createStyles,\r\n  FormControl,\r\n  InputLabel,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Theme,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { ErrorIndicator } from \"../../lib/components\";\r\nimport { CREATE_ACCOUNT } from \"../../lib/graphql/mutations\";\r\nimport {\r\n  CreateAccount as CreateAccountData,\r\n  CreateAccountVariables,\r\n} from \"../../lib/graphql/mutations/CreateAccount/__generated__/CreateAccount\";\r\nimport { Viewer } from \"../../lib/type\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    createAccountCard: {\r\n      borderRadius: 8,\r\n      width: 800,\r\n      margin: \"30px auto 0\",\r\n    },\r\n    createAccountText: {\r\n      fontSize: \"1.5rem\",\r\n      textAlign: \"left\",\r\n      marginBottom: 10,\r\n      marginTop: 15,\r\n      paddingLeft: 40,\r\n    },\r\n    promptText: {\r\n      marginBottom: 24,\r\n      marginLeft: 40,\r\n      fontSize: \"1rem\",\r\n    },\r\n    inputContainer: {\r\n      margin: \"0 40px\",\r\n    },\r\n    input: {\r\n      width: \"30%\",\r\n      paddingRight: 10,\r\n      marginBottom: 10,\r\n    },\r\n    buttonContainer: {\r\n      marginTop: 30,\r\n      marginLeft: 40,\r\n      marginRight: 40,\r\n      marginBottom: 30,\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n    formClassifyText: {\r\n      color: \"#5f6368\",\r\n      fontSize: \"0.8em\",\r\n      marginBottom: 5,\r\n      marginTop: 10,\r\n    },\r\n  })\r\n);\r\n\r\ninterface Props {\r\n  isAuthorized: boolean;\r\n  setViewer: (viewer: Viewer) => void;\r\n}\r\n\r\ninterface UserInfo {\r\n  name: string;\r\n  userName: string;\r\n  gender: string;\r\n  password: string;\r\n  education: string;\r\n  marriageStatus: string;\r\n  jobStatus: string;\r\n  age: string;\r\n}\r\n\r\nconst initialUserInfo = {\r\n  name: \"\",\r\n  userName: \"\",\r\n  gender: \"\",\r\n  password: \"\",\r\n  education: \"\",\r\n  marriageStatus: \"\",\r\n  jobStatus: \"\",\r\n  age: \"\",\r\n};\r\n\r\nexport const CreateAccount = ({ isAuthorized, setViewer }: Props) => {\r\n  const classes = useStyles();\r\n  const [userInfo, setUserInfo] = useState<UserInfo>(initialUserInfo);\r\n  const [reenteredPassword, setReenteredPassword] = useState<string>(\"\");\r\n  const [createAccount] = useMutation<\r\n    CreateAccountData,\r\n    CreateAccountVariables\r\n  >(CREATE_ACCOUNT, {\r\n    onCompleted: (data) => {\r\n      if (data && data.createAccount && data.createAccount.token) {\r\n        setViewer(data.createAccount);\r\n      }\r\n    },\r\n    onError: (error) => {\r\n      if (\r\n        error.message.includes(\"One user with this userName already exists.\")\r\n      ) {\r\n        setErrorMessage(\"此门诊号已被注册！\");\r\n        setShowError(true);\r\n        setErrorField(\"userNameDuplicate\");\r\n      }\r\n    },\r\n  });\r\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\r\n  const [showError, setShowError] = useState(false);\r\n  const [errorField, setErrorField] = useState<string>();\r\n  const createAccountButtonOnClick = () => {\r\n    if (!userInfo.userName) {\r\n      setErrorMessage(\"请输入您的门诊号！\");\r\n      setShowError(true);\r\n      setErrorField(\"userName\");\r\n      return;\r\n    }\r\n    if (!userInfo.password) {\r\n      setErrorMessage(\"请输入您的密码！\");\r\n      setShowError(true);\r\n      setErrorField(\"password\");\r\n      return;\r\n    }\r\n    if (!reenteredPassword) {\r\n      setErrorMessage(\"请确认您输入的密码！\");\r\n      setShowError(true);\r\n      setErrorField(\"reenteredPassword\");\r\n      return;\r\n    }\r\n    if (userInfo.password !== reenteredPassword) {\r\n      setErrorMessage(\"两次输入的密码不一致！\");\r\n      setShowError(true);\r\n      setErrorField(\"reenteredPasswordNotSame\");\r\n      return;\r\n    }\r\n    if (!userInfo.name) {\r\n      setErrorMessage(\"请输入您的姓名！\");\r\n      setShowError(true);\r\n      setErrorField(\"name\");\r\n      return;\r\n    }\r\n    createAccount({\r\n      variables: {\r\n        input: {\r\n          ...userInfo,\r\n          age: userInfo.age === \"\" ? undefined : Number(userInfo.age),\r\n        },\r\n      },\r\n    });\r\n  };\r\n  const onUserNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUserInfo({ ...userInfo, userName: e.target.value });\r\n    if (\r\n      errorField === \"userName\" ||\r\n      (errorField === \"userNameDuplicate\" && e.target.value)\r\n    ) {\r\n      setErrorField(undefined);\r\n    }\r\n  };\r\n  const onPasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUserInfo({ ...userInfo, password: e.target.value });\r\n    if (errorField === \"password\" && e.target.value) {\r\n      setErrorField(undefined);\r\n    }\r\n  };\r\n  const onReenteredPasswordChange = (\r\n    e: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setReenteredPassword(e.target.value);\r\n    if (errorField === \"reenteredPassword\" && e.target.value) {\r\n      setErrorField(undefined);\r\n    } else if (\r\n      errorField === \"reenteredPasswordNotSame\" &&\r\n      e.target.value === userInfo.password\r\n    ) {\r\n      setErrorField(undefined);\r\n    }\r\n  };\r\n  const onNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUserInfo({ ...userInfo, name: e.target.value });\r\n    if (errorField === \"name\" && e.target.value) {\r\n      setErrorField(undefined);\r\n    }\r\n  };\r\n  const onGenderChange = (\r\n    e: React.ChangeEvent<{\r\n      name?: string | undefined;\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setUserInfo({ ...userInfo, gender: e.target.value as string });\r\n  };\r\n  const onAgeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUserInfo({ ...userInfo, age: e.target.value });\r\n  };\r\n  const onEducationChange = (\r\n    e: React.ChangeEvent<{\r\n      name?: string | undefined;\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setUserInfo({ ...userInfo, education: e.target.value as string });\r\n  };\r\n  const onJobChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUserInfo({ ...userInfo, jobStatus: e.target.value });\r\n  };\r\n  const onMarraigeChange = (\r\n    e: React.ChangeEvent<{\r\n      name?: string | undefined;\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setUserInfo({ ...userInfo, marriageStatus: e.target.value as string });\r\n  };\r\n  if (isAuthorized) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <>\r\n      <Toolbar />\r\n      <Card className={classes.createAccountCard} variant=\"outlined\">\r\n        <CardContent>\r\n          <div className={classes.createAccountText}>注册</div>\r\n          <div className={classes.promptText}>请输入您的个人信息</div>\r\n          <form>\r\n            <div className={classes.inputContainer}>\r\n              <div className={classes.formClassifyText}>登录信息</div>\r\n              <div>\r\n                <TextField\r\n                  required\r\n                  className={classes.input}\r\n                  color=\"primary\"\r\n                  label=\"门诊号\"\r\n                  size=\"small\"\r\n                  value={userInfo.userName}\r\n                  onChange={onUserNameChange}\r\n                  helperText={\r\n                    errorField === \"userName\"\r\n                      ? \"请输入您的门诊号！\"\r\n                      : errorField === \"userNameDuplicate\"\r\n                      ? \"此门诊号已被注册！\"\r\n                      : undefined\r\n                  }\r\n                  error={\r\n                    errorField === \"userName\" ||\r\n                    errorField === \"userNameDuplicate\"\r\n                      ? true\r\n                      : undefined\r\n                  }\r\n                />\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  required\r\n                  className={classes.input}\r\n                  color=\"primary\"\r\n                  type=\"password\"\r\n                  label=\"密码\"\r\n                  size=\"small\"\r\n                  value={userInfo.password}\r\n                  onChange={onPasswordChange}\r\n                  helperText={\r\n                    errorField === \"password\" ? \"请输入您的密码！\" : undefined\r\n                  }\r\n                  error={errorField === \"password\" ? true : undefined}\r\n                />\r\n                <TextField\r\n                  required\r\n                  type=\"password\"\r\n                  className={classes.input}\r\n                  color=\"primary\"\r\n                  label=\"确认密码\"\r\n                  size=\"small\"\r\n                  value={reenteredPassword}\r\n                  onChange={onReenteredPasswordChange}\r\n                  helperText={\r\n                    errorField === \"reenteredPassword\"\r\n                      ? \"请确认您的密码！\"\r\n                      : errorField === \"reenteredPasswordNotSame\"\r\n                      ? \"两次输入的密码不一致！\"\r\n                      : undefined\r\n                  }\r\n                  error={\r\n                    errorField === \"reenteredPassword\" ||\r\n                    errorField === \"reenteredPasswordNotSame\"\r\n                      ? true\r\n                      : undefined\r\n                  }\r\n                />\r\n              </div>\r\n              <div className={classes.formClassifyText}>个人信息</div>\r\n              <TextField\r\n                required\r\n                className={classes.input}\r\n                color=\"primary\"\r\n                label=\"姓名\"\r\n                size=\"small\"\r\n                value={userInfo.name}\r\n                onChange={onNameChange}\r\n                helperText={\r\n                  errorField === \"name\" ? \"请输入您的姓名!\" : undefined\r\n                }\r\n                error={errorField === \"name\" ? true : undefined}\r\n              />\r\n              <FormControl className={classes.input} size=\"small\">\r\n                <InputLabel>性别</InputLabel>\r\n                <Select\r\n                  color=\"primary\"\r\n                  label=\"性别\"\r\n                  value={userInfo.gender}\r\n                  onChange={onGenderChange}\r\n                >\r\n                  <MenuItem value=\"男\">男</MenuItem>\r\n                  <MenuItem value=\"女\">女</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <TextField\r\n                className={classes.input}\r\n                color=\"primary\"\r\n                label=\"年龄\"\r\n                size=\"small\"\r\n                value={userInfo.age}\r\n                onChange={onAgeChange}\r\n              />\r\n              <FormControl className={classes.input} size=\"small\">\r\n                <InputLabel>教育</InputLabel>\r\n                <Select\r\n                  color=\"primary\"\r\n                  value={userInfo.education}\r\n                  onChange={onEducationChange}\r\n                >\r\n                  <MenuItem value=\"高中以下\">高中以下</MenuItem>\r\n                  <MenuItem value=\"大中专科\">大中专科</MenuItem>\r\n                  <MenuItem value=\"本科\">本科</MenuItem>\r\n                  <MenuItem value=\"硕士\">硕士</MenuItem>\r\n                  <MenuItem value=\"博士\">博士</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <TextField\r\n                className={classes.input}\r\n                color=\"primary\"\r\n                label=\"职业\"\r\n                size=\"small\"\r\n                value={userInfo.jobStatus}\r\n                onChange={onJobChange}\r\n              />\r\n              <FormControl className={classes.input} size=\"small\">\r\n                <InputLabel>婚姻</InputLabel>\r\n                <Select\r\n                  color=\"primary\"\r\n                  value={userInfo.marriageStatus}\r\n                  onChange={onMarraigeChange}\r\n                >\r\n                  <MenuItem value=\"已婚\">已婚</MenuItem>\r\n                  <MenuItem value=\"未婚\">未婚</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n\r\n            <div className={classes.buttonContainer}>\r\n              <Link to=\"/login\">\r\n                <Button>我已有账号</Button>\r\n              </Link>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={createAccountButtonOnClick}\r\n              >\r\n                注册\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n      <ErrorIndicator\r\n        showError={showError}\r\n        setShowError={setShowError}\r\n        errorMessage={errorMessage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { useQuery } from \"@apollo/client\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  createStyles,\r\n  FormControl,\r\n  InputLabel,\r\n  makeStyles,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport { CheckCircleOutline } from \"@material-ui/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { LoadingIndicator } from \"../../lib/components\";\r\nimport { QUESTIONNAIRE_LIST } from \"../../lib/graphql/queries\";\r\nimport {\r\n  QuestionnaireList as QuestionnaireListData,\r\n  QuestionnaireListVariables,\r\n} from \"../../lib/graphql/queries/QuestionnaireList/__generated__/QuestionnaireList\";\r\nimport { ReportPdf } from \"../../lib/components\";\r\nimport { withReportPdfData } from \"./components\";\r\n\r\nconst PdfViewer = withReportPdfData(ReportPdf);\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    content: {\r\n      padding: \"5px 10px\",\r\n    },\r\n    questionnaireTable: {\r\n      marginTop: 20,\r\n      marginBottom: 20,\r\n      maxHeight: \"calc(100vh - 200px)\",\r\n      overflow: \"auto\",\r\n    },\r\n    doneIcon: {\r\n      color: \"#4caf50\",\r\n    },\r\n    pageSizeSelect: {\r\n      minWidth: 100,\r\n      marginRight: 10,\r\n    },\r\n  })\r\n);\r\n\r\ninterface Props {\r\n  patientName?: string;\r\n}\r\nexport const Report = ({ patientName }: Props) => {\r\n  const classes = useStyles();\r\n  const { loading, data, error: questionnaireListError } = useQuery<\r\n    QuestionnaireListData,\r\n    QuestionnaireListVariables\r\n  >(QUESTIONNAIRE_LIST, {\r\n    variables: { isReport: true },\r\n    fetchPolicy: \"no-cache\",\r\n    onCompleted: (data) => {\r\n      const questionnaireList = data.questionnaireList;\r\n      let count = 0;\r\n      for (const questionnaire of questionnaireList) {\r\n        if (questionnaire.done) {\r\n          count += 1;\r\n        }\r\n      }\r\n      setNumberOfFinishedQuestionnaires(count);\r\n      const newselectedUserAnswers = new Set<string>();\r\n      for (const questionnaire of questionnaireList) {\r\n        if (questionnaire.done && questionnaire.userAnswerId)\r\n          newselectedUserAnswers.add(questionnaire.userAnswerId);\r\n      }\r\n      setSelectedUserAnswers(newselectedUserAnswers);\r\n    },\r\n  });\r\n  const [selectedUserAnswers, setSelectedUserAnswers] = useState<Set<string>>(\r\n    new Set<string>()\r\n  );\r\n  const [pageSize, setPageSize] = useState(\"a5\");\r\n  const handlePageSizeChange = (\r\n    event: React.ChangeEvent<{ value: unknown }>\r\n  ) => {\r\n    setPageSize(event.target.value as string);\r\n  };\r\n  const [\r\n    numberOfFinishedQuestionnaires,\r\n    setNumberOfFinishedQuestionnaires,\r\n  ] = useState<number | null>(null);\r\n  const [isReportVisible, setIsReportVisible] = useState(false);\r\n\r\n  if (loading || !data || numberOfFinishedQuestionnaires === null) {\r\n    return <LoadingIndicator />;\r\n  }\r\n\r\n  const questionnaireList = data.questionnaireList;\r\n\r\n  const selectedQuestionnaireArray: string[] = [];\r\n  questionnaireList.forEach((questionnaire) => {\r\n    if (questionnaire.done && questionnaire.userAnswerId) {\r\n      if (selectedUserAnswers.has(questionnaire.userAnswerId)) {\r\n        selectedQuestionnaireArray.push(questionnaire.userAnswerId);\r\n      }\r\n    }\r\n  });\r\n  if (isReportVisible) {\r\n    return (\r\n      <PdfViewer\r\n        userAnswerIds={selectedQuestionnaireArray}\r\n        closeReport={() => setIsReportVisible(false)}\r\n        pageSize={pageSize}\r\n        patientName={patientName}\r\n      />\r\n    );\r\n  }\r\n  const selectQuestionnaire = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n    userAnswerId: string\r\n  ) => {\r\n    const checked = event.target.checked;\r\n    const newselectedUserAnswers = new Set(selectedUserAnswers);\r\n    if (checked) {\r\n      newselectedUserAnswers.add(userAnswerId);\r\n    } else {\r\n      newselectedUserAnswers.delete(userAnswerId);\r\n    }\r\n    setSelectedUserAnswers(newselectedUserAnswers);\r\n  };\r\n  const selectAllQuestionnaires = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const checked = event.target.checked;\r\n    const newselectedUserAnswers = new Set<string>();\r\n    if (checked) {\r\n      for (const questionnaire of questionnaireList) {\r\n        if (questionnaire.done && questionnaire.userAnswerId)\r\n          newselectedUserAnswers.add(questionnaire.userAnswerId);\r\n      }\r\n    }\r\n    setSelectedUserAnswers(newselectedUserAnswers);\r\n  };\r\n  const generateReport = () => {\r\n    setIsReportVisible(true);\r\n  };\r\n  return (\r\n    <div className={classes.content}>\r\n      <TableContainer component={Paper} className={classes.questionnaireTable}>\r\n        <Table size=\"small\" aira-label=\"选择已完成的量表，生成报告\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell padding=\"checkbox\">\r\n                <Checkbox\r\n                  checked={\r\n                    selectedUserAnswers.size ===\r\n                      numberOfFinishedQuestionnaires &&\r\n                    selectedUserAnswers.size !== 0\r\n                  }\r\n                  disabled={numberOfFinishedQuestionnaires === 0}\r\n                  onChange={selectAllQuestionnaires}\r\n                />\r\n              </TableCell>\r\n              <TableCell>量表</TableCell>\r\n              <TableCell>完成状态</TableCell>\r\n              <TableCell>完成日期</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {questionnaireList.map((questionnaire, index) => (\r\n              <TableRow key={`questionnaire-${index}`}>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    disabled={!questionnaire.done}\r\n                    checked={\r\n                      !!questionnaire.userAnswerId &&\r\n                      selectedUserAnswers.has(questionnaire.userAnswerId)\r\n                    }\r\n                    onChange={(e) =>\r\n                      questionnaire.userAnswerId &&\r\n                      selectQuestionnaire(e, questionnaire.userAnswerId)\r\n                    }\r\n                  />\r\n                </TableCell>\r\n                <TableCell>{questionnaire.name}</TableCell>\r\n                <TableCell>\r\n                  {questionnaire.done ? (\r\n                    <CheckCircleOutline\r\n                      className={classes.doneIcon}\r\n                      fontSize=\"small\"\r\n                    />\r\n                  ) : null}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {questionnaire.displayedFillInDate || null}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <FormControl\r\n        className={classes.pageSizeSelect}\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n      >\r\n        <InputLabel id=\"page-size-label\">纸张大小</InputLabel>\r\n        <Select\r\n          value={pageSize}\r\n          onChange={handlePageSizeChange}\r\n          labelId=\"page-size-label\"\r\n          label=\"纸张大小\"\r\n          id=\"page-size-select\"\r\n        >\r\n          <MenuItem value={\"a4\"}>A4</MenuItem>\r\n          <MenuItem value={\"a5\"}>A5</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        disabled={selectedUserAnswers.size === 0}\r\n        onClick={generateReport}\r\n      >\r\n        生成报告\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  DialogActions,\r\n  Button,\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\ninterface Props {\r\n  isDialogOpen: boolean;\r\n  handleDialogClose: () => void;\r\n  additionalFields: string[];\r\n  setAdditionalFields: (additionalFields: string[]) => void;\r\n  handleAdditionalFieldsSearch: (additionalFields: string[]) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    fieldsContainer: {},\r\n  })\r\n);\r\n\r\nexport const ADDITIONAL_FIELD_KEYS = [\r\n  \"depressed\",\r\n  \"anxious\",\r\n  \"biphasic\",\r\n  \"schizophrenia\",\r\n] as const;\r\nexport const ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES = [\r\n  \"抑郁障碍\",\r\n  \"焦虑障碍\",\r\n  \"双相障碍\",\r\n  \"精神分裂症\",\r\n] as const;\r\n\r\nexport const removeElementFromArray = <T,>(array: T[], element: T) => {\r\n  const newArray: T[] = [];\r\n  for (let currentElement of array) {\r\n    if (currentElement !== element) {\r\n      newArray.push(currentElement);\r\n    }\r\n  }\r\n  return newArray;\r\n};\r\n\r\nexport const AdditionalFieldsModal = ({\r\n  isDialogOpen,\r\n  handleDialogClose,\r\n  additionalFields,\r\n  setAdditionalFields,\r\n  handleAdditionalFieldsSearch,\r\n}: Props) => {\r\n  const classes = useStyles();\r\n\r\n  const [selectedFields, setSelectedFields] = useState<string[]>(\r\n    additionalFields\r\n  );\r\n  useEffect(() => {\r\n    setSelectedFields(additionalFields);\r\n  }, [isDialogOpen, additionalFields]);\r\n  const selectAdditionalField = (\r\n    fieldKey: typeof ADDITIONAL_FIELD_KEYS[number],\r\n    isSelected: boolean\r\n  ) => {\r\n    if (!isSelected) {\r\n      setSelectedFields(removeElementFromArray(selectedFields, fieldKey));\r\n    } else if (!selectedFields.includes(fieldKey)) {\r\n      setSelectedFields([...selectedFields, fieldKey]);\r\n    }\r\n  };\r\n  const handleOkButtonClick = () => {\r\n    setAdditionalFields(selectedFields);\r\n    handleDialogClose();\r\n    handleAdditionalFieldsSearch(selectedFields);\r\n  };\r\n  return (\r\n    <Dialog\r\n      open={isDialogOpen}\r\n      onClose={handleDialogClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n      maxWidth=\"xs\"\r\n      fullWidth={true}\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">高级筛选</DialogTitle>\r\n      <DialogContent>\r\n        <div className={classes.fieldsContainer}>\r\n          {ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES.map((displayName, index) => {\r\n            return (\r\n              <div key={displayName}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={selectedFields.includes(\r\n                        ADDITIONAL_FIELD_KEYS[index]\r\n                      )}\r\n                      onChange={(event) => {\r\n                        selectAdditionalField(\r\n                          ADDITIONAL_FIELD_KEYS[index],\r\n                          event.target.checked\r\n                        );\r\n                      }}\r\n                    />\r\n                  }\r\n                  label={displayName}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleDialogClose}>取消</Button>\r\n        <Button onClick={handleOkButtonClick} color=\"primary\">\r\n          确定\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Chip,\r\n  createStyles,\r\n  FormControl,\r\n  FormControlLabel,\r\n  InputLabel,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport React, { forwardRef, useImperativeHandle, useState } from \"react\";\r\nimport \"moment/locale/zh-cn\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport SettingsBackupRestoreIcon from \"@material-ui/icons/SettingsBackupRestore\";\r\nimport cnLocale from \"date-fns/locale/zh-CN\";\r\nimport { ErrorIndicator } from \"../../../../lib/components\";\r\nimport { QueryUserVariables } from \"../../../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\r\nimport { UsersFilter } from \"../../../../lib/graphql/globalTypes\";\r\nimport { INITAL_ONLY_MY_PATIENT } from \"../..\";\r\nimport TuneIcon from \"@material-ui/icons/Tune\";\r\nimport {\r\n  AdditionalFieldsModal,\r\n  ADDITIONAL_FIELD_KEYS,\r\n  ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES,\r\n  removeElementFromArray,\r\n} from \"../AdditionalFieldsModal\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport { PRIMARY_COLOR } from \"../../../..\";\r\n\r\nconst AGE_RANGE_ERROR_MESSAGE_TEXT = \"最小年龄应小于最大年龄！\";\r\nconst AGE_NEGATIVE_ERROR_MESSAGE = \"年龄不能为负数！\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    promptText: {\r\n      color: \"#5f6368\",\r\n      fontSize: \"0.8em\",\r\n      paddingBottom: 5,\r\n      paddingTop: 5,\r\n    },\r\n    input: {\r\n      width: \"30%\",\r\n      paddingRight: 10,\r\n      paddingBottom: 5,\r\n    },\r\n    rangeWrapper: {\r\n      display: \"inline-block\",\r\n    },\r\n    ageRangeInput: {\r\n      width: \"40%\",\r\n    },\r\n    dateRangeWrapper: {\r\n      width: \"60%\",\r\n    },\r\n    ageRangeWrapper: {\r\n      width: \"30%\",\r\n      paddingRight: 10,\r\n    },\r\n    dateRangeInput: {\r\n      width: \"50%\",\r\n      paddingRight: 10,\r\n    },\r\n    ageInputIconWrapper: {\r\n      width: \"20%\",\r\n      display: \"inline-flex\",\r\n      justifyContent: \"center\",\r\n      paddingTop: 20,\r\n    },\r\n    buttonWrapper: {\r\n      paddingTop: 10,\r\n    },\r\n    extraFieldsWrapper: {\r\n      paddingTop: 10,\r\n    },\r\n    searchButton: {\r\n      marginRight: 10,\r\n    },\r\n    whiteButton: {\r\n      backgroundColor: \"#fff\",\r\n      color: PRIMARY_COLOR,\r\n      \"&:hover\": {\r\n        backgroundColor: \"#fff\",\r\n      },\r\n    },\r\n    rangeFormWrapper: {\r\n      width: \"100%\",\r\n      alignItems: \"flex-start\",\r\n      display: \"flex\",\r\n    },\r\n    ageInputIcon: {\r\n      width: 16,\r\n      height: 16,\r\n      color: \"rgba(0, 0, 0, 0.54)\",\r\n    },\r\n    chip: {\r\n      marginRight: 5,\r\n    },\r\n    additionalFieldButton: {\r\n      marginRight: 5,\r\n    },\r\n  })\r\n);\r\n\r\nconst datePickerProps = {\r\n  format: \"yyyy/MM/dd\",\r\n  okLabel: \"确定\",\r\n  cancelLabel: \"取消\",\r\n  invalidLabel: \"输入的日期有误！\",\r\n  maxDateMessage: \"输入的日期太大！\",\r\n  minDateMessage: \"输入的日期太小！\",\r\n  invalidDateMessage: \"输入的日期有误！\",\r\n  size: \"small\" as const,\r\n};\r\n\r\ninterface Props {\r\n  searchPatients: (searchParams: QueryUserVariables) => void;\r\n  limit: number;\r\n  currentPageIndex: number;\r\n  setCurrentPageIndex: (currentPageIndex: number) => void;\r\n  filter: UsersFilter;\r\n  searchMyPatients: (onlyMyPatient: boolean) => void;\r\n  handleAdditionalFieldsSearch: (additionalFields: string[]) => void;\r\n}\r\n\r\nexport interface SearchPatientFormHandle {\r\n  search: () => void;\r\n}\r\n\r\nexport const SearchPatientForm = forwardRef<SearchPatientFormHandle, Props>(\r\n  (\r\n    {\r\n      searchPatients,\r\n      limit,\r\n      currentPageIndex,\r\n      setCurrentPageIndex,\r\n      filter,\r\n      searchMyPatients,\r\n      handleAdditionalFieldsSearch,\r\n    },\r\n    ref\r\n  ) => {\r\n    const classes = useStyles();\r\n    const [userName, setUserName] = useState(\"\");\r\n    const onUserNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setUserName(e.target.value);\r\n    };\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const onNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setName(e.target.value);\r\n    };\r\n\r\n    const [gender, setGender] = useState<\"男\" | \"女\" | \"全部\" | \"\">(\"\");\r\n    const onGenderChange = (\r\n      e: React.ChangeEvent<{\r\n        name?: string | undefined;\r\n        value: unknown;\r\n      }>\r\n    ) => {\r\n      setGender(e.target.value as typeof gender);\r\n    };\r\n\r\n    const [ageRange, setAgeRange] = useState({\r\n      min: \"\",\r\n      max: \"\",\r\n    });\r\n    const onMinAgeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      const newMinAge = Number(e.target.value);\r\n      if (errorField === \"ageRange\") {\r\n        if (newMinAge <= Number(ageRange.max) || newMinAge === 0) {\r\n          setErrorField(null);\r\n        }\r\n      }\r\n      if (errorField === \"minAge\") {\r\n        if (newMinAge >= 0) {\r\n          setErrorField(null);\r\n        }\r\n      }\r\n      setAgeRange({ ...ageRange, min: e.target.value });\r\n    };\r\n    const onMaxAgeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      const newMaxAge = Number(e.target.value);\r\n      if (errorField === \"ageRange\") {\r\n        if (newMaxAge >= Number(ageRange.min) || newMaxAge === 0) {\r\n          setErrorField(null);\r\n        }\r\n      }\r\n      if (errorField === \"maxAge\") {\r\n        if (newMaxAge >= 0) {\r\n          setErrorField(null);\r\n        }\r\n      }\r\n      setAgeRange({ ...ageRange, max: e.target.value });\r\n    };\r\n\r\n    const [dateRange, setDateRange] = useState<{\r\n      min: Date | null;\r\n      max: Date | null;\r\n    }>({\r\n      min: null,\r\n      max: null,\r\n    });\r\n    const onMinDateChange = (date: Date | null, _value?: string | null) => {\r\n      if (errorField === \"dateRange\") {\r\n        if (date === null || (dateRange.max && +date <= +dateRange.max)) {\r\n          setErrorField(null);\r\n        }\r\n      }\r\n      setDateRange({\r\n        ...dateRange,\r\n        min: date,\r\n      });\r\n    };\r\n    const onMaxDateChange = (date: Date | null, _value?: string | null) => {\r\n      if (errorField === \"dateRange\") {\r\n        if (date === null || (dateRange.min && +date >= +dateRange.min)) {\r\n          setErrorField(null);\r\n        }\r\n      }\r\n      setDateRange({\r\n        ...dateRange,\r\n        max: date,\r\n      });\r\n    };\r\n\r\n    const [onlyMyPatient, setOnlyMyPatient] = useState(false);\r\n    const handleOnlyMyPatientCheckboxChange = (\r\n      event: React.ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n      setOnlyMyPatient(event.target.checked);\r\n      searchMyPatients(event.target.checked);\r\n    };\r\n\r\n    const [showError, setShowError] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [errorField, setErrorField] = useState<null | string>(null);\r\n    const [isAdditionalFieldsModalOpen, setIsAdditionalFieldsModalOpen] =\r\n      useState(false);\r\n    const [additionalFields, setAdditionalFields] = useState<string[]>([]);\r\n\r\n    const handleAdditionalFieldsModalClose = () => {\r\n      setIsAdditionalFieldsModalOpen(false);\r\n    };\r\n\r\n    const handleAdditionalFieldsModalOpen = () => {\r\n      setIsAdditionalFieldsModalOpen(true);\r\n    };\r\n\r\n    const handleSearchButtonClick = () => {\r\n      if (ageRange.min && Number(ageRange.min) < 0) {\r\n        setErrorMessage(AGE_NEGATIVE_ERROR_MESSAGE);\r\n        setShowError(true);\r\n        setErrorField(\"minAge\");\r\n        return;\r\n      }\r\n      if (ageRange.max && Number(ageRange.max) < 0) {\r\n        setErrorMessage(AGE_NEGATIVE_ERROR_MESSAGE);\r\n        setShowError(true);\r\n        setErrorField(\"maxAge\");\r\n        return;\r\n      }\r\n      if (\r\n        ageRange.min &&\r\n        ageRange.max &&\r\n        Number(ageRange.min) > Number(ageRange.max)\r\n      ) {\r\n        setErrorMessage(AGE_RANGE_ERROR_MESSAGE_TEXT);\r\n        setShowError(true);\r\n        setErrorField(\"ageRange\");\r\n        return;\r\n      }\r\n\r\n      if (dateRange.min && dateRange.max && dateRange.min > dateRange.max) {\r\n        setErrorMessage(\"起始日期应在截止日期之前！\");\r\n        setShowError(true);\r\n        setErrorField(\"dateRange\");\r\n        return;\r\n      }\r\n\r\n      setCurrentPageIndex(0);\r\n      searchPatients({\r\n        userName,\r\n        name,\r\n        gender,\r\n        ageRange: {\r\n          min: ageRange.min ? Number(ageRange.min) : null,\r\n          max: ageRange.max ? Number(ageRange.max) : null,\r\n        },\r\n        minSignUpDate: dateRange.min\r\n          ? {\r\n              year: dateRange.min.getFullYear(),\r\n              month: dateRange.min.getMonth(),\r\n              day: dateRange.min.getDate(),\r\n            }\r\n          : null,\r\n        maxSignUpDate: dateRange.max\r\n          ? {\r\n              year: dateRange.max.getFullYear(),\r\n              month: dateRange.max.getMonth(),\r\n              day: dateRange.max.getDate(),\r\n            }\r\n          : null,\r\n        limit,\r\n        currentPageIndex: 0,\r\n        onlyMyPatient,\r\n        filter,\r\n        additionalFields,\r\n      });\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      search: () => {\r\n        handleSearchButtonClick();\r\n      },\r\n    }));\r\n    const handleResetButtonClick = () => {\r\n      setUserName(\"\");\r\n      setName(\"\");\r\n      setGender(\"\");\r\n      setAgeRange({\r\n        min: \"\",\r\n        max: \"\",\r\n      });\r\n      setDateRange({\r\n        min: null,\r\n        max: null,\r\n      });\r\n      setErrorField(null);\r\n      setCurrentPageIndex(0);\r\n      setOnlyMyPatient(INITAL_ONLY_MY_PATIENT);\r\n      searchPatients({\r\n        limit,\r\n        currentPageIndex: 0,\r\n        filter,\r\n        onlyMyPatient: INITAL_ONLY_MY_PATIENT,\r\n      });\r\n      setAdditionalFields([]);\r\n    };\r\n    return (\r\n      <form noValidate autoComplete=\"off\">\r\n        <div className={classes.promptText}>个人信息</div>\r\n        <div>\r\n          <TextField\r\n            label=\"门诊号\"\r\n            size=\"small\"\r\n            className={classes.input}\r\n            value={userName}\r\n            onChange={onUserNameChange}\r\n          />\r\n          <TextField\r\n            label=\"姓名\"\r\n            size=\"small\"\r\n            className={classes.input}\r\n            value={name}\r\n            onChange={onNameChange}\r\n          />\r\n          <FormControl className={classes.input} size=\"small\">\r\n            <InputLabel>性别</InputLabel>\r\n            <Select\r\n              color=\"primary\"\r\n              label=\"性别\"\r\n              value={gender}\r\n              onChange={onGenderChange}\r\n            >\r\n              <MenuItem value=\"男\">男</MenuItem>\r\n              <MenuItem value=\"女\">女</MenuItem>\r\n              <MenuItem value=\"全部\">全部</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <div className={classes.rangeFormWrapper}>\r\n            <div\r\n              className={classes.ageRangeWrapper + \" \" + classes.rangeWrapper}\r\n            >\r\n              <div className={classes.promptText}>年龄</div>\r\n              <div>\r\n                <TextField\r\n                  label=\"最小年龄\"\r\n                  size=\"small\"\r\n                  type=\"number\"\r\n                  className={classes.ageRangeInput}\r\n                  value={ageRange.min}\r\n                  onChange={onMinAgeChange}\r\n                  error={\r\n                    errorField === \"ageRange\" || errorField === \"minAge\"\r\n                      ? true\r\n                      : undefined\r\n                  }\r\n                />\r\n                <span className={classes.ageInputIconWrapper}>\r\n                  <ArrowForwardIcon className={classes.ageInputIcon} />\r\n                </span>\r\n                <TextField\r\n                  label=\"最大年龄\"\r\n                  size=\"small\"\r\n                  type=\"number\"\r\n                  className={classes.ageRangeInput}\r\n                  value={ageRange.max}\r\n                  onChange={onMaxAgeChange}\r\n                  error={\r\n                    errorField === \"ageRange\" || errorField === \"maxAge\"\r\n                      ? true\r\n                      : undefined\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={classes.dateRangeWrapper + \" \" + classes.rangeWrapper}\r\n            >\r\n              <div className={classes.promptText}>注册时间</div>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils} locale={cnLocale}>\r\n                <DatePicker\r\n                  value={dateRange.min}\r\n                  onChange={onMinDateChange}\r\n                  label={\"起始日期\"}\r\n                  className={classes.dateRangeInput}\r\n                  {...datePickerProps}\r\n                  error={errorField === \"dateRange\" ? true : undefined}\r\n                />\r\n                <DatePicker\r\n                  value={dateRange.max}\r\n                  onChange={onMaxDateChange}\r\n                  label={\"截止日期\"}\r\n                  className={classes.dateRangeInput}\r\n                  {...datePickerProps}\r\n                  error={errorField === \"dateRange\" ? true : undefined}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={classes.extraFieldsWrapper}>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={onlyMyPatient}\r\n                onChange={handleOnlyMyPatientCheckboxChange}\r\n              />\r\n            }\r\n            label=\"只选择我的病人\"\r\n          />\r\n          <Button\r\n            startIcon={<TuneIcon />}\r\n            onClick={handleAdditionalFieldsModalOpen}\r\n            color=\"primary\"\r\n            className={classes.additionalFieldButton}\r\n          >\r\n            高级筛选\r\n          </Button>\r\n          {ADDITIONAL_FIELD_KEYS.map((fieldKey, index) => {\r\n            if (additionalFields.includes(fieldKey)) {\r\n              const onChipDelete = () => {\r\n                const newAdditionalFields = removeElementFromArray(\r\n                  additionalFields,\r\n                  fieldKey\r\n                );\r\n                setAdditionalFields(newAdditionalFields);\r\n                handleAdditionalFieldsSearch(newAdditionalFields);\r\n              };\r\n              return (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onDelete={onChipDelete}\r\n                  icon={<InfoIcon />}\r\n                  color=\"primary\"\r\n                  label={ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES[index]}\r\n                  key={fieldKey}\r\n                  className={classes.chip}\r\n                />\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </div>\r\n        <div className={classes.buttonWrapper}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<SearchIcon />}\r\n            className={classes.searchButton}\r\n            onClick={handleSearchButtonClick}\r\n          >\r\n            搜索\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            startIcon={<SettingsBackupRestoreIcon />}\r\n            className={classes.whiteButton}\r\n            onClick={handleResetButtonClick}\r\n          >\r\n            重置\r\n          </Button>\r\n        </div>\r\n        <ErrorIndicator\r\n          showError={showError}\r\n          setShowError={setShowError}\r\n          errorMessage={errorMessage}\r\n        />\r\n        <AdditionalFieldsModal\r\n          isDialogOpen={isAdditionalFieldsModalOpen}\r\n          handleDialogClose={handleAdditionalFieldsModalClose}\r\n          additionalFields={additionalFields}\r\n          setAdditionalFields={setAdditionalFields}\r\n          handleAdditionalFieldsSearch={handleAdditionalFieldsSearch}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n);\r\n","import { createStyles, Divider, makeStyles, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      height: 48,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      paddingLeft: 10,\r\n      fontWeight: 500,\r\n      fontSize: \"1.125rem\",\r\n    },\r\n  })\r\n);\r\n\r\ninterface Props {\r\n  text: string;\r\n}\r\n\r\nexport const Header = ({ text }: Props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div className={classes.root}>{text}</div>\r\n      <Divider />\r\n    </>\r\n  );\r\n};\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport React, { useMemo, useState } from \"react\";\r\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\r\nimport { QueryUser_queryUser_users_finishedForms as FinishedForms } from \"../../../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\r\nimport { FormResult } from \"../../..\";\r\nimport { LineChartPopOver } from \"../../../../lib/components\";\r\n\r\ninterface Props {\r\n  finishedForms: FinishedForms[] | null;\r\n}\r\n\r\nexport const LineChartsButton = ({ finishedForms }: Props) => {\r\n  const isButtonDisabled =\r\n    finishedForms === null || finishedForms.length === 0 ? true : false;\r\n  const listData: {\r\n    uniqueFormList: FinishedForms[];\r\n    resultList: FormResult[][];\r\n  } = useMemo(() => {\r\n    if (!finishedForms)\r\n      return { uniqueFormList: [], resultList: [] as FormResult[][] };\r\n    const formList: FinishedForms[] = [];\r\n    const resultList: FormResult[][] = [];\r\n    const formSet: Set<string> = new Set();\r\n    finishedForms.forEach((questionnaire) => {\r\n      if (!formSet.has(questionnaire.id)) {\r\n        formSet.add(questionnaire.id);\r\n        formList.push(questionnaire);\r\n        if (questionnaire.result && questionnaire.displayedFillInDate) {\r\n          resultList.push([\r\n            {\r\n              result: questionnaire.result,\r\n              fillInDate: questionnaire.displayedFillInDate,\r\n            },\r\n          ]);\r\n        } else {\r\n          resultList.push([] as FormResult[]);\r\n        }\r\n      } else if (questionnaire.result && questionnaire.displayedFillInDate) {\r\n        let index = 0;\r\n        while (index <= formList.length) {\r\n          if (formList[index].id === questionnaire.id) {\r\n            resultList[index].push({\r\n              result: questionnaire.result,\r\n              fillInDate: questionnaire.displayedFillInDate,\r\n            });\r\n            break;\r\n          }\r\n          index += 1;\r\n        }\r\n      }\r\n    });\r\n    const newResultList = resultList.map((result) => [...result].reverse());\r\n    return { uniqueFormList: formList, resultList: newResultList };\r\n  }, [finishedForms]);\r\n  const { uniqueFormList, resultList } = listData;\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const closeModal = () => {\r\n    setIsOpen(false);\r\n  };\r\n  const openModal = () => {\r\n    setIsOpen(true);\r\n  };\r\n  return (\r\n    <>\r\n      <Button\r\n        startIcon={<EqualizerIcon />}\r\n        color=\"primary\"\r\n        disabled={isButtonDisabled}\r\n        onClick={openModal}\r\n        size=\"small\"\r\n      >\r\n        趋势\r\n      </Button>\r\n      <Dialog open={isOpen} onClose={closeModal}>\r\n        <DialogTitle>查看趋势</DialogTitle>\r\n        <DialogContent>\r\n          <TableContainer>\r\n            <Table size=\"small\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>量表</TableCell>\r\n                  <TableCell></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {uniqueFormList.map((form, index) => (\r\n                  <TableRow key={`questionnaire-${index}`}>\r\n                    <TableCell>{form.name}</TableCell>\r\n                    <TableCell>\r\n                      <LineChartPopOver\r\n                        formResultList={resultList[index]}\r\n                        formName={form.name}\r\n                        formKey={form.key}\r\n                      />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={closeModal} color=\"primary\">\r\n            关闭\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n","import { useMutation } from \"@apollo/client\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  DialogContentText,\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  Button,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  ADDITIONAL_FIELD_KEYS,\r\n  ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES,\r\n} from \"..\";\r\nimport { ADD_DIAGNOSIS } from \"../../../../lib/graphql/mutations\";\r\nimport {\r\n  AddDiagnosis,\r\n  AddDiagnosisVariables,\r\n} from \"../../../../lib/graphql/mutations/AddDiagnosis/__generated__/AddDiagnosis\";\r\n\r\ninterface Props {\r\n  isDialogOpen: boolean;\r\n  handleDialogClose: () => void;\r\n  patientName: string;\r\n  patientId: string;\r\n  refetch: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    diagnosisText: {\r\n      minWidth: 250,\r\n    },\r\n  })\r\n);\r\n\r\nexport const AddDiagnosisModal = ({\r\n  isDialogOpen,\r\n  handleDialogClose,\r\n  patientName,\r\n  patientId,\r\n  refetch,\r\n}: Props) => {\r\n  const [addDiagnosis] = useMutation<AddDiagnosis, AddDiagnosisVariables>(\r\n    ADD_DIAGNOSIS\r\n  );\r\n  useEffect(() => {\r\n    setDiagnosis(\"\");\r\n  }, [patientName]);\r\n  const classes = useStyles();\r\n  const [diagnosis, setDiagnosis] = useState(\"\");\r\n  const handleDiagnosisSelectChange = (\r\n    e: React.ChangeEvent<{\r\n      name?: string | undefined;\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setDiagnosis(e.target.value as string);\r\n  };\r\n  const handleComfirm = async () => {\r\n    if (diagnosis !== \"\") {\r\n      await addDiagnosis({\r\n        variables: {\r\n          input: {\r\n            patientId,\r\n            diagnosis:\r\n              ADDITIONAL_FIELD_KEYS[\r\n                ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES.indexOf(\r\n                  diagnosis as typeof ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES[number]\r\n                )\r\n              ],\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      await addDiagnosis({\r\n        variables: {\r\n          input: {\r\n            patientId,\r\n            diagnosis,\r\n          },\r\n        },\r\n      });\r\n    }\r\n    handleDialogClose();\r\n    refetch();\r\n  };\r\n  return (\r\n    <Dialog open={isDialogOpen} onClose={handleDialogClose}>\r\n      <DialogTitle>诊断</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText className={classes.diagnosisText}>\r\n          给{patientName}添加诊断\r\n        </DialogContentText>\r\n        <FormControl fullWidth>\r\n          <InputLabel shrink>诊断</InputLabel>\r\n          <Select value={diagnosis} onChange={handleDiagnosisSelectChange}>\r\n            {ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES.map((option) => (\r\n              <MenuItem value={option} key={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleDialogClose}>取消</Button>\r\n        <Button onClick={handleComfirm} color=\"primary\">\r\n          确认\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import {\r\n  Button,\r\n  createStyles,\r\n  IconButton,\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport React, { ChangeEvent, useEffect, useState, MouseEvent } from \"react\";\r\nimport { ErrorIndicator, LoadingIndicator } from \"../../../../lib/components\";\r\nimport {\r\n  QueryUser,\r\n  QueryUser_queryUser_users_finishedForms as QuestionnaireData,\r\n} from \"../../../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\r\nimport NoteIcon from \"@material-ui/icons/Note\";\r\n// import { HelpPopover } from \"../HelpPopover\";\r\nimport {\r\n  ADDITIONAL_FIELD_KEYS,\r\n  ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES,\r\n  ChooseFormModal,\r\n} from \"..\";\r\nimport { UsersFilter } from \"../../../../lib/graphql/globalTypes\";\r\nimport { LineChartsButton } from \"../LineChartsButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { AddDiagnosisModal } from \"../AddDiagnosisModal\";\r\nimport { PRIMARY_COLOR } from \"../../../..\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: 20,\r\n      width: \"min(calc(100% - 20px), calc(100vw - 20px))\",\r\n      maxWidth: \"100vw\",\r\n      fontSize: \"0.8rem\",\r\n    },\r\n    loadingIndicatorWrapper: {\r\n      width: \"100%\",\r\n      height: 200,\r\n    },\r\n    reportButton: {\r\n      backgroundColor: \"#fff\",\r\n      color: PRIMARY_COLOR,\r\n      \"&:hover\": {\r\n        backgroundColor: \"#fff\",\r\n      },\r\n    },\r\n    lineChartsButtonContainer: {\r\n      marginRight: 5,\r\n    },\r\n    tableCell: {\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n      whiteSpace: \"nowrap\",\r\n    },\r\n    iconMargin: {\r\n      marginRight: 5,\r\n    },\r\n  })\r\n);\r\nconst tableColumnTexts = [\r\n  \"门诊号\",\r\n  \"姓名\",\r\n  \"性别\",\r\n  \"年龄\",\r\n  \"教育\",\r\n  \"职业\",\r\n  \"婚姻\",\r\n  \"注册时间\",\r\n  \"医生\",\r\n  \"诊断\",\r\n];\r\nconst tableColumns = [\r\n  \"userName\",\r\n  \"name\",\r\n  \"gender\",\r\n  \"age\",\r\n  \"education\",\r\n  \"jobStatus\",\r\n  \"marriageStatus\",\r\n  \"signUpDate\",\r\n  \"doctorName\",\r\n  \"diagnosis\",\r\n] as const;\r\n\r\nconst tableMinWidth = [70, 80, 60, 60, 100, 70, 60, 150, 80, 150] as const;\r\nconst tableMaxWidth = [140, 80, 60, 60, 100, 70, 60, 150, 80, 150] as const;\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  patientList?: QueryUser;\r\n  selectedUserAnswerIds: string[] | null;\r\n  setSelectedUserId: (userId: string | null) => void;\r\n  setSelectedUserAnswerIds: (selectedFormIds: string[] | null) => void;\r\n  setIsReportShown: (isReportShown: boolean) => void;\r\n  limit: number;\r\n  currentPageIndex: number;\r\n  handleLimitChange: (limit: number) => void;\r\n  handleCurrentPageIndexChange: (currentPageIndex: number) => void;\r\n  filter: UsersFilter;\r\n  setFilter: (filter: UsersFilter) => void;\r\n  handleSortChange: () => void;\r\n  refetch: () => void;\r\n  setPrintPageSize: (printPageSize: string) => void;\r\n  setPrintPatientName: (printPatientName?: string) => void;\r\n}\r\nexport const PatientTable = (props: Props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    loading,\r\n    patientList,\r\n    selectedUserAnswerIds,\r\n    setSelectedUserId,\r\n    setSelectedUserAnswerIds,\r\n    setIsReportShown,\r\n    limit,\r\n    currentPageIndex,\r\n    handleLimitChange,\r\n    handleCurrentPageIndexChange,\r\n    filter,\r\n    handleSortChange,\r\n    refetch,\r\n    setPrintPageSize,\r\n    setPrintPatientName,\r\n  } = props;\r\n  const [showError, setShowError] = useState(false);\r\n  const [isChooseFormModalShown, setIsChooseFormModalShown] = useState(false);\r\n  const [finishedFormList, setFinishedFormList] = useState<\r\n    QuestionnaireData[] | null\r\n  >(null);\r\n  const handleReportButtonClick = (\r\n    finishedForms: QuestionnaireData[],\r\n    userId: string,\r\n    patientName?: string\r\n  ) => {\r\n    setSelectedUserId(userId);\r\n    setFinishedFormList(finishedForms);\r\n    const selectedUserAnswerIds = finishedForms\r\n      .map((finishedForm) => finishedForm.userAnswerId)\r\n      .filter((finishedForm): finishedForm is string => finishedForm !== null);\r\n    setSelectedUserAnswerIds(selectedUserAnswerIds);\r\n    setIsChooseFormModalShown(true);\r\n    setPrintPatientName(patientName);\r\n  };\r\n  const closeModal = () => {\r\n    setIsChooseFormModalShown(false);\r\n  };\r\n  const onOkButtonClick = (pageSize: string) => {\r\n    setIsReportShown(true);\r\n    setPrintPageSize(pageSize);\r\n  };\r\n  const [isAddDiagnosisModalShown, setIsAddDiagnosisModalShown] = useState(\r\n    false\r\n  );\r\n  const [addDiagnosisPatientId, setAddDiagnosisPatientId] = useState<\r\n    string | null\r\n  >(null);\r\n  const handleAddDiagnosisModalClose = () => {\r\n    setIsAddDiagnosisModalShown(false);\r\n  };\r\n  const openAddDiagnosisModal = () => {\r\n    setIsAddDiagnosisModalShown(true);\r\n  };\r\n  const [addDiagnosisPatientName, setAddDiagnosisPatientName] = useState<\r\n    string | null\r\n  >(null);\r\n  const handleEditDiagnosisButtonClick = (\r\n    patientName: string,\r\n    patientId: string\r\n  ) => {\r\n    setAddDiagnosisPatientName(patientName);\r\n    setAddDiagnosisPatientId(patientId);\r\n    openAddDiagnosisModal();\r\n  };\r\n  useEffect(() => {\r\n    if (\r\n      loading === false &&\r\n      patientList !== undefined &&\r\n      patientList.queryUser.users.length === 0\r\n    ) {\r\n      setShowError(true);\r\n    }\r\n  }, [loading, patientList]);\r\n  if (loading) {\r\n    return (\r\n      <div className={classes.loadingIndicatorWrapper}>\r\n        <LoadingIndicator />\r\n      </div>\r\n    );\r\n  }\r\n  if (patientList === undefined) {\r\n    return null;\r\n  }\r\n  if (patientList.queryUser.users.length === 0) {\r\n    return (\r\n      <ErrorIndicator\r\n        showError={showError}\r\n        setShowError={setShowError}\r\n        errorMessage=\"未找到符合条件的病人！\"\r\n      />\r\n    );\r\n  }\r\n\r\n  const handleRowsPerPageChange = (\r\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ) => {\r\n    handleLimitChange(Number(event.target.value));\r\n  };\r\n\r\n  const handlePageChange = (\r\n    _event: MouseEvent<HTMLButtonElement> | null,\r\n    page: number\r\n  ) => {\r\n    handleCurrentPageIndexChange(page);\r\n  };\r\n\r\n  const labelDisplayedRows = ({\r\n    from,\r\n    to,\r\n    count,\r\n  }: {\r\n    from: number;\r\n    to: number;\r\n    count: number;\r\n  }): string => {\r\n    return `共计${count}条数据，当前为第${Math.ceil(from / limit)}页`;\r\n  };\r\n  return (\r\n    <>\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <TablePagination\r\n          rowsPerPage={limit}\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          page={currentPageIndex}\r\n          count={patientList.queryUser.total}\r\n          onChangePage={handlePageChange}\r\n          component=\"div\"\r\n          onChangeRowsPerPage={handleRowsPerPageChange}\r\n          labelDisplayedRows={labelDisplayedRows}\r\n        />\r\n        <Table size=\"small\" aria-label=\"病人列表\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {tableColumnTexts.map((text, index) => (\r\n                <TableCell\r\n                  key={text}\r\n                  style={{\r\n                    minWidth: tableMinWidth[index],\r\n                    maxWidth: tableMaxWidth[index],\r\n                    padding: 5,\r\n                    paddingLeft: index === 0 ? 10 : undefined,\r\n                  }}\r\n                  className={classes.tableCell}\r\n                >\r\n                  {tableColumns[index] === \"signUpDate\" ? (\r\n                    <TableSortLabel\r\n                      active={tableColumns[index] === \"signUpDate\"}\r\n                      direction={\r\n                        filter === UsersFilter.DATE_LATEST ? \"desc\" : \"asc\"\r\n                      }\r\n                      onClick={handleSortChange}\r\n                    >\r\n                      {text}\r\n                    </TableSortLabel>\r\n                  ) : (\r\n                    text\r\n                  )}\r\n                </TableCell>\r\n              ))}\r\n              <TableCell\r\n                style={{\r\n                  padding: 5,\r\n                }}\r\n              />\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {patientList.queryUser.users.map((patientInformation) => {\r\n              const isReportButtonDisabled =\r\n                !patientInformation.finishedForms ||\r\n                patientInformation.finishedForms.length === 0;\r\n\r\n              return (\r\n                <TableRow key={patientInformation.userName}>\r\n                  {tableColumns.map((column, index) => {\r\n                    const content =\r\n                      index === tableColumns.length - 1\r\n                        ? ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES[\r\n                            ADDITIONAL_FIELD_KEYS.indexOf(\r\n                              patientInformation[\r\n                                column\r\n                              ] as typeof ADDITIONAL_FIELD_KEYS[number]\r\n                            )\r\n                          ]\r\n                        : patientInformation[column];\r\n                    return (\r\n                      <TableCell\r\n                        key={column}\r\n                        style={{\r\n                          minWidth: tableMinWidth[index],\r\n                          maxWidth: tableMaxWidth[index],\r\n                          padding: 5,\r\n                          paddingLeft: index === 0 ? 10 : undefined,\r\n                        }}\r\n                        className={classes.tableCell}\r\n                        title={content || undefined}\r\n                      >\r\n                        {index === tableColumns.length - 1 ? (\r\n                          <>\r\n                            <IconButton\r\n                              aria-label=\"delete\"\r\n                              className={classes.iconMargin}\r\n                              size=\"small\"\r\n                              color=\"primary\"\r\n                              onClick={() =>\r\n                                patientInformation.name &&\r\n                                handleEditDiagnosisButtonClick(\r\n                                  patientInformation.name,\r\n                                  patientInformation.id\r\n                                )\r\n                              }\r\n                            >\r\n                              <EditIcon fontSize=\"inherit\" />\r\n                            </IconButton>\r\n                            {content}\r\n                          </>\r\n                        ) : (\r\n                          content\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                  <TableCell style={{ minWidth: 180, padding: 0 }}>\r\n                    <div style={{ display: \"flex\" }}>\r\n                      <span className={classes.lineChartsButtonContainer}>\r\n                        <LineChartsButton\r\n                          finishedForms={patientInformation.finishedForms}\r\n                        />\r\n                      </span>\r\n                      <Button\r\n                        size=\"small\"\r\n                        // className={classes.reportButton}\r\n                        color=\"primary\"\r\n                        startIcon={<NoteIcon />}\r\n                        disabled={isReportButtonDisabled}\r\n                        onClick={() =>\r\n                          patientInformation.finishedForms &&\r\n                          handleReportButtonClick(\r\n                            patientInformation.finishedForms,\r\n                            patientInformation.id,\r\n                            patientInformation.name || undefined\r\n                          )\r\n                        }\r\n                      >\r\n                        报告\r\n                      </Button>\r\n                      {/* {isReportButtonDisabled && patientInformation.name && (\r\n                        <HelpPopover name={patientInformation.name} />\r\n                      )} */}\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      {finishedFormList && selectedUserAnswerIds && (\r\n        <ChooseFormModal\r\n          isOpen={isChooseFormModalShown}\r\n          closeModal={closeModal}\r\n          finishedFormList={finishedFormList}\r\n          selectedUserAnswerIds={selectedUserAnswerIds}\r\n          setSelectedUserAnswerIds={setSelectedUserAnswerIds}\r\n          onOkButtonClick={onOkButtonClick}\r\n        />\r\n      )}\r\n      {addDiagnosisPatientName && addDiagnosisPatientId && (\r\n        <AddDiagnosisModal\r\n          isDialogOpen={isAddDiagnosisModalShown}\r\n          handleDialogClose={handleAddDiagnosisModalClose}\r\n          patientName={addDiagnosisPatientName}\r\n          patientId={addDiagnosisPatientId}\r\n          refetch={refetch}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * @author Qiuran Hu\r\n * @email qiuranh@gmail.com\r\n * @create date 2021-04-26 10:49:44\r\n * @modify date 2021-04-26 10:49:44\r\n * @desc [description]\r\n */\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  createStyles,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormControl,\r\n  InputLabel,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { QueryUser_queryUser_users_finishedForms as QuestionnaireData } from \"../../../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\r\n\r\ninterface Props {\r\n  isOpen: boolean;\r\n  closeModal: () => void;\r\n  finishedFormList: QuestionnaireData[];\r\n  selectedUserAnswerIds: string[];\r\n  setSelectedUserAnswerIds: (selectedUserAnswerIds: string[]) => void;\r\n  onOkButtonClick: (pageSize: string) => void;\r\n}\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formName: {\r\n      maxWidth: 300,\r\n      textOverflow: \"ellipsis\",\r\n      overflow: \"hidden\",\r\n      whiteSpace: \"nowrap\",\r\n    },\r\n    pageSizeSelect: {\r\n      minWidth: 100,\r\n      marginRight: 10,\r\n    },\r\n  })\r\n);\r\n\r\nexport const ChooseFormModal = ({\r\n  isOpen,\r\n  closeModal,\r\n  finishedFormList,\r\n  selectedUserAnswerIds,\r\n  setSelectedUserAnswerIds,\r\n  onOkButtonClick,\r\n}: Props) => {\r\n  const classes = useStyles();\r\n  const handleSelectAllCheckBoxClick = () => {\r\n    if (selectedUserAnswerIds.length < finishedFormList.length) {\r\n      setSelectedUserAnswerIds(\r\n        finishedFormList\r\n          .map((form) => form.userAnswerId)\r\n          .filter(\r\n            (userAnswerId): userAnswerId is string => userAnswerId !== null\r\n          )\r\n      );\r\n    } else {\r\n      setSelectedUserAnswerIds([]);\r\n    }\r\n  };\r\n  const handleSelectCheckBoxClick = (formId: string) => {\r\n    if (selectedUserAnswerIds.indexOf(formId) !== -1) {\r\n      setSelectedUserAnswerIds(\r\n        selectedUserAnswerIds.filter(\r\n          (currentUserAnswerId) => currentUserAnswerId !== formId\r\n        )\r\n      );\r\n    } else {\r\n      setSelectedUserAnswerIds([...selectedUserAnswerIds, formId]);\r\n    }\r\n  };\r\n  const handleOkButtonClick = () => {\r\n    onOkButtonClick(pageSize);\r\n    closeModal();\r\n  };\r\n  const [pageSize, setPageSize] = useState(\"a5\");\r\n  const handlePageSizeChange = (\r\n    event: React.ChangeEvent<{ value: unknown }>\r\n  ) => {\r\n    setPageSize(event.target.value as string);\r\n  };\r\n  return (\r\n    <Dialog\r\n      open={isOpen}\r\n      onClose={closeModal}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n      maxWidth=\"md\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">请选择要生成报告的量表</DialogTitle>\r\n      <DialogContent>\r\n        <TableContainer>\r\n          <Table size=\"small\" aira-label=\"选择量表，生成报告\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={\r\n                      selectedUserAnswerIds.length ===\r\n                        finishedFormList.length &&\r\n                      selectedUserAnswerIds.length !== 0\r\n                    }\r\n                    onChange={handleSelectAllCheckBoxClick}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>全部已完成量表</TableCell>\r\n                <TableCell>完成时间</TableCell>\r\n                <TableCell>医生</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {finishedFormList.map((form, index) => (\r\n                <TableRow key={`questionnaire-${index}`}>\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={\r\n                        !!form.userAnswerId &&\r\n                        selectedUserAnswerIds.indexOf(form.userAnswerId) !== -1\r\n                      }\r\n                      onChange={() =>\r\n                        form.userAnswerId &&\r\n                        handleSelectCheckBoxClick(form.userAnswerId)\r\n                      }\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell className={classes.formName}>\r\n                    {form.name}\r\n                  </TableCell>\r\n                  <TableCell>{form.displayedFillInDate || null}</TableCell>\r\n                  <TableCell>{form.doctorName || null}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <FormControl\r\n          className={classes.pageSizeSelect}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n        >\r\n          <InputLabel id=\"page-size-label\">纸张大小</InputLabel>\r\n          <Select\r\n            value={pageSize}\r\n            onChange={handlePageSizeChange}\r\n            labelId=\"page-size-label\"\r\n            label=\"纸张大小\"\r\n            id=\"page-size-select\"\r\n          >\r\n            <MenuItem value={\"a4\"}>A4</MenuItem>\r\n            <MenuItem value={\"a5\"}>A5</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <Button onClick={closeModal}>取消</Button>\r\n        <Button\r\n          onClick={handleOkButtonClick}\r\n          color=\"primary\"\r\n          autoFocus\r\n          disabled={selectedUserAnswerIds.length === 0}\r\n        >\r\n          确定\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import {\r\n  createStyles,\r\n  IconButton,\r\n  makeStyles,\r\n  Popover,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popover: {\r\n      pointerEvents: \"none\",\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n    },\r\n    icon: {\r\n      width: 22,\r\n      height: 22,\r\n    },\r\n  })\r\n);\r\n\r\ninterface Props {\r\n  name: string;\r\n}\r\nexport const HelpPopover = ({ name }: Props) => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\r\n  const open = Boolean(anchorEl);\r\n  const handlePopoverOpen = (\r\n    event: React.MouseEvent<HTMLElement, MouseEvent>\r\n  ) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handlePopoverClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <>\r\n      <IconButton\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        onMouseEnter={handlePopoverOpen}\r\n        onMouseLeave={handlePopoverClose}\r\n      >\r\n        <HelpOutlineIcon className={classes.icon} />\r\n      </IconButton>\r\n      <Popover\r\n        id=\"mouse-over-popover\"\r\n        className={classes.popover}\r\n        classes={{\r\n          paper: classes.paper,\r\n        }}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"left\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        onClose={handlePopoverClose}\r\n        disableRestoreFocus\r\n      >\r\n        {name}未填写任何量表！\r\n      </Popover>\r\n    </>\r\n  );\r\n};\r\n","import { useLazyQuery } from \"@apollo/client\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\nimport React, { ElementRef, useEffect, useRef, useState } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { ReportPdf } from \"../../lib/components\";\r\nimport { UsersFilter } from \"../../lib/graphql/globalTypes\";\r\nimport { QUERY_USER } from \"../../lib/graphql/queries/QueryUser\";\r\nimport {\r\n  QueryUser,\r\n  QueryUserVariables,\r\n} from \"../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\r\nimport {\r\n  Header,\r\n  PatientTable,\r\n  SearchPatientForm,\r\n  withReportPdfDataForAdmin,\r\n} from \"./components\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    content: {\r\n      padding: \"5px 10px\",\r\n    },\r\n    hiddenContent: {\r\n      display: \"none\",\r\n    },\r\n  })\r\n);\r\nconst PdfViewer = withReportPdfDataForAdmin(ReportPdf);\r\n\r\nexport const INITIAL_LIMIT = 10;\r\nexport const INITIAL_CURRENT_PAGE_INDEX = 0;\r\nexport const INITAL_ONLY_MY_PATIENT = false;\r\n\r\nexport const PatientInformation = () => {\r\n  const [getQueryResult, { loading, data: userListData, error }] = useLazyQuery<\r\n    QueryUser,\r\n    QueryUserVariables\r\n  >(QUERY_USER, {\r\n    fetchPolicy: \"no-cache\",\r\n  });\r\n\r\n  const searchFormRef = useRef<ElementRef<typeof SearchPatientForm>>(null);\r\n  const [limit, setLimit] = useState(INITIAL_LIMIT);\r\n  const [currentPageIndex, setCurrentPageIndex] = useState(\r\n    INITIAL_CURRENT_PAGE_INDEX\r\n  );\r\n  const [filter, setFilter] = useState<UsersFilter>(UsersFilter.DATE_LATEST);\r\n  const classes = useStyles();\r\n  const [selectedUserAnswerIds, setSelectedUserAnswerIds] = useState<\r\n    string[] | null\r\n  >(null);\r\n  const [selectedUserId, setSelectedUserId] = useState<string | null>(null);\r\n  const [isReportShown, setIsReportShown] = useState(false);\r\n  const closeReport = () => {\r\n    setIsReportShown(false);\r\n  };\r\n  const searchPatients = (params: QueryUserVariables) => {\r\n    getQueryResult({ variables: params });\r\n    setSearchParams(params);\r\n  };\r\n  const getQueryResultRef = useRef(getQueryResult);\r\n  const [searchParams, setSearchParams] = useState<QueryUserVariables>({\r\n    limit: INITIAL_LIMIT,\r\n    currentPageIndex: INITIAL_CURRENT_PAGE_INDEX,\r\n  });\r\n  const handleLimitChange = (limit: number): void => {\r\n    setLimit(limit);\r\n    setCurrentPageIndex(0);\r\n    getQueryResult({\r\n      variables: { ...searchParams, limit, currentPageIndex: 0, filter },\r\n    });\r\n  };\r\n  const handleCurrentPageIndexChange = (currentPageIndex: number): void => {\r\n    setCurrentPageIndex(currentPageIndex);\r\n    getQueryResult({\r\n      variables: { ...searchParams, limit, currentPageIndex, filter },\r\n    });\r\n  };\r\n  const refetch = () => {\r\n    getQueryResult({\r\n      variables: { ...searchParams, limit, currentPageIndex, filter },\r\n    });\r\n  };\r\n  const handleSortChange = () => {\r\n    const newFilter =\r\n      filter === UsersFilter.DATE_LATEST\r\n        ? UsersFilter.DATE_OLDEST\r\n        : UsersFilter.DATE_LATEST;\r\n    setFilter(newFilter);\r\n    setCurrentPageIndex(0);\r\n    getQueryResult({\r\n      variables: {\r\n        ...searchParams,\r\n        limit,\r\n        currentPageIndex: 0,\r\n        filter: newFilter,\r\n      },\r\n    });\r\n  };\r\n  const searchMyPatients = (onlyMyPatient: boolean) => {\r\n    setCurrentPageIndex(0);\r\n    getQueryResult({\r\n      variables: {\r\n        ...searchParams,\r\n        onlyMyPatient,\r\n        currentPageIndex: 0,\r\n        limit,\r\n        filter,\r\n      },\r\n    });\r\n  };\r\n  const handleAdditionalFieldsSearch = (additionalFields: string[]) => {\r\n    setCurrentPageIndex(0);\r\n    getQueryResult({\r\n      variables: {\r\n        ...searchParams,\r\n        additionalFields: additionalFields,\r\n        currentPageIndex: 0,\r\n        limit,\r\n        filter,\r\n      },\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getQueryResultRef.current({\r\n      variables: {\r\n        limit: INITIAL_LIMIT,\r\n        currentPageIndex: INITIAL_CURRENT_PAGE_INDEX,\r\n        filter: UsersFilter.DATE_LATEST,\r\n        onlyMyPatient: INITAL_ONLY_MY_PATIENT,\r\n      },\r\n    });\r\n  }, []);\r\n  const isPdfViewerShown = Boolean(\r\n    isReportShown && selectedUserId && selectedUserAnswerIds\r\n  );\r\n  const [printPageSize, setPrintPageSize] = useState(\"a5\");\r\n  const [printPatientName, setPrintPatientName] = useState<string | undefined>(\r\n    undefined\r\n  );\r\n  return (\r\n    <>\r\n      <div className={isPdfViewerShown ? classes.hiddenContent : \"\"}>\r\n        <Header text={\"搜索病人信息\"} />\r\n        <div className={classes.content}>\r\n          <SearchPatientForm\r\n            searchPatients={searchPatients}\r\n            limit={limit}\r\n            currentPageIndex={currentPageIndex}\r\n            ref={searchFormRef}\r\n            setCurrentPageIndex={setCurrentPageIndex}\r\n            filter={filter}\r\n            searchMyPatients={searchMyPatients}\r\n            handleAdditionalFieldsSearch={handleAdditionalFieldsSearch}\r\n          />\r\n          <PatientTable\r\n            loading={loading}\r\n            patientList={userListData}\r\n            selectedUserAnswerIds={selectedUserAnswerIds}\r\n            setSelectedUserId={setSelectedUserId}\r\n            setSelectedUserAnswerIds={setSelectedUserAnswerIds}\r\n            setIsReportShown={setIsReportShown}\r\n            limit={limit}\r\n            currentPageIndex={currentPageIndex}\r\n            handleLimitChange={handleLimitChange}\r\n            handleCurrentPageIndexChange={handleCurrentPageIndexChange}\r\n            filter={filter}\r\n            setFilter={setFilter}\r\n            handleSortChange={handleSortChange}\r\n            refetch={refetch}\r\n            setPrintPageSize={setPrintPageSize}\r\n            setPrintPatientName={setPrintPatientName}\r\n          />\r\n        </div>\r\n      </div>\r\n      {isReportShown && selectedUserId && selectedUserAnswerIds && (\r\n        <PdfViewer\r\n          userId={selectedUserId}\r\n          userAnswerIds={selectedUserAnswerIds}\r\n          closeReport={closeReport}\r\n          pageSize={printPageSize}\r\n          patientName={printPatientName}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { useQuery } from \"@apollo/client\";\r\nimport React, { ComponentType, PropsWithChildren } from \"react\";\r\nimport { LoadingIndicator } from \"../../../../lib/components\";\r\nimport { REPORT_FOR_ADMIN } from \"../../../../lib/graphql/queries\";\r\nimport {\r\n  ReportForAdmin as ReportData,\r\n  ReportForAdminVariables,\r\n} from \"../../../../lib/graphql/queries/ReportForAdmin/__generated__/ReportForAdmin\";\r\n\r\nexport const withReportPdfDataForAdmin = (\r\n  WrappedComponent: ComponentType<\r\n    PropsWithChildren<{\r\n      pdfData: string;\r\n      closeReport: () => void;\r\n      patientName?: string;\r\n    }>\r\n  >\r\n) => {\r\n  return ({\r\n    children,\r\n    userAnswerIds,\r\n    closeReport,\r\n    userId,\r\n    pageSize,\r\n    patientName,\r\n  }: PropsWithChildren<{\r\n    userAnswerIds: string[];\r\n    closeReport: () => void;\r\n    userId: string;\r\n    pageSize: string;\r\n    patientName?: string;\r\n  }>) => {\r\n    // Get PDF data.\r\n    const { data, loading } = useQuery<ReportData, ReportForAdminVariables>(\r\n      REPORT_FOR_ADMIN,\r\n      {\r\n        variables: {\r\n          userAnswerIds,\r\n          userId,\r\n          pageSize,\r\n        },\r\n        fetchPolicy: \"no-cache\",\r\n      }\r\n    );\r\n\r\n    if (loading || !data) {\r\n      return <LoadingIndicator />;\r\n    }\r\n\r\n    if (data.reportForAdmin && data.reportForAdmin.pdf) {\r\n      return (\r\n        <WrappedComponent\r\n          pdfData={data.reportForAdmin.pdf}\r\n          closeReport={closeReport}\r\n          patientName={patientName}\r\n        >\r\n          {children}\r\n        </WrappedComponent>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n};\r\n","import {\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport { Doctor } from \"../../../../lib/type\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      overflow: \"hidden\",\r\n    },\r\n    actionContainer: {\r\n      float: \"right\",\r\n      paddingRight: 10,\r\n      paddingTop: 10,\r\n      fontSize: \"0.875rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n    welcomeMessage: {\r\n      paddingRight: 10,\r\n      paddingBottom: 1,\r\n    },\r\n  })\r\n);\r\n\r\ninterface Props {\r\n  handleDoctorLogOut: () => void;\r\n  doctor: Doctor;\r\n}\r\n\r\nexport const Header = ({ handleDoctorLogOut, doctor }: Props) => {\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const handleCloseDialog = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n  const openDialog = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n  const logOutDoctor = () => {\r\n    setIsDialogOpen(false);\r\n    handleDoctorLogOut();\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <span className={classes.actionContainer}>\r\n        <span className={classes.welcomeMessage}>{doctor.name}医生已登入</span>\r\n        <Button\r\n          color=\"secondary\"\r\n          startIcon={<ExitToAppIcon />}\r\n          onClick={openDialog}\r\n        >\r\n          退出\r\n        </Button>\r\n      </span>\r\n      <Dialog\r\n        open={isDialogOpen}\r\n        onClose={handleCloseDialog}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"确认退出？\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            退出后需要输入医生的账号和密码才能重新登入\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog}>取消</Button>\r\n          <Button onClick={logOutDoctor} color=\"secondary\">\r\n            退出\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  Button,\r\n  createStyles,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Grid,\r\n  makeStyles,\r\n  TextField,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport React, {\r\n  forwardRef,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useState,\r\n} from \"react\";\r\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\r\n\r\ninterface Props {\r\n  isDialogOpen: boolean;\r\n  setIsDialogOpen: (isDialogOpen: boolean) => void;\r\n  doctorName: string;\r\n  handleDoctorLogIn: (password: string) => void;\r\n  hideErrorIndicator: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    passwordInput: {\r\n      minWidth: 300,\r\n    },\r\n  })\r\n);\r\n\r\nexport interface DoctorLogInDialogHandle {\r\n  showError: () => void;\r\n  hideError: () => void;\r\n}\r\n\r\nexport const DoctorLogInDialog = forwardRef<DoctorLogInDialogHandle, Props>(\r\n  (props: Props, ref) => {\r\n    const handleKeyPress = (event: KeyboardEvent) => {\r\n      if (event.key === \"Enter\") {\r\n        handleClickLogIn();\r\n      }\r\n    };\r\n    useEffect(() => {\r\n      window.addEventListener(\"keydown\", handleKeyPress);\r\n\r\n      return () => {\r\n        window.removeEventListener(\"keydown\", handleKeyPress);\r\n      };\r\n    });\r\n    const classes = useStyles();\r\n    const {\r\n      isDialogOpen,\r\n      setIsDialogOpen,\r\n      doctorName,\r\n      handleDoctorLogIn,\r\n      hideErrorIndicator,\r\n    } = props;\r\n    const [password, setPassword] = useState(\"\");\r\n    const [isErrorShown, setIsErrorShown] = useState(false);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      showError: () => {\r\n        setIsErrorShown(true);\r\n      },\r\n      hideError: () => {\r\n        setIsErrorShown(false);\r\n      },\r\n    }));\r\n    const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      hideErrorIndicator();\r\n      setPassword(e.target.value);\r\n    };\r\n    const handleClickLogIn = () => {\r\n      handleDoctorLogIn(password);\r\n    };\r\n    const handleClickCancel = () => {\r\n      setIsDialogOpen(false);\r\n    };\r\n    return (\r\n      <Dialog open={isDialogOpen} onClose={handleClickCancel}>\r\n        <DialogTitle>请确认您的密码</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>当前登入的医生为{doctorName}</DialogContentText>\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n            <Grid item>\r\n              <VpnKeyIcon />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                autoFocus\r\n                className={classes.passwordInput}\r\n                label=\"密码\"\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={handlePasswordChange}\r\n                helperText={\r\n                  isErrorShown && !password ? \"请输入您的密码\" : undefined\r\n                }\r\n                error={isErrorShown && !password ? true : undefined}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClickCancel} color=\"primary\">\r\n            取消\r\n          </Button>\r\n          <Button onClick={handleClickLogIn} color=\"primary\">\r\n            确认\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n);\r\n","import { Button, createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\nimport React, { ElementRef, useRef, useState } from \"react\";\r\nimport { DoctorLogInDialog } from \"./components\";\r\nimport logo from \"../AppHeader/assets/logo.png\";\r\nimport PlayArrowRoundedIcon from \"@material-ui/icons/PlayArrowRounded\";\r\nimport { FetchResult } from \"@apollo/client\";\r\n// import { DOCTOR_LOG_OUT } from \"../../lib/graphql/mutations\";\r\nimport { Doctor } from \"../../lib/type\";\r\n// import { DoctorLogOut } from \"../../lib/graphql/mutations/DoctorLogOut/__generated__/doctorLogOut\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ErrorIndicator } from \"../../lib/components\";\r\nimport {\r\n  DoctorLogIn,\r\n  DoctorLogInVariables,\r\n} from \"../../lib/graphql/mutations/DoctorLogIn/__generated__/DoctorLogIn\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      background: \"#e3f2fd\",\r\n    },\r\n    logoContainer: {\r\n      display: \"flex\",\r\n      minHeight: 92,\r\n      maxHeight: 290,\r\n      height: \"calc(100% - 560px)\",\r\n      justifyContent: \"center\",\r\n    },\r\n    logo: {\r\n      maxHeight: 92,\r\n      height: \"100%\",\r\n      marginTop: \"auto\",\r\n    },\r\n    actionContainer: {\r\n      maxHeight: 160,\r\n      padding: 20,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      flexDirection: \"column\",\r\n      fontSize: \"1.5rem\",\r\n    },\r\n    enterSystemButtonContainer: {\r\n      marginTop: 18,\r\n    },\r\n    extendedIcon: {\r\n      position: \"absolute\",\r\n      right: 20,\r\n      bottom: 20,\r\n      backgroundColor: \"#fff\",\r\n    },\r\n    seuText: {\r\n      margin: \"10px 0 15px\",\r\n    },\r\n    header: {\r\n      height: 52,\r\n    },\r\n  })\r\n);\r\n\r\ninterface Props {\r\n  doctor: Doctor;\r\n  setDoctor: (doctor: Doctor) => void;\r\n  logIn: (variables?: {\r\n    variables: DoctorLogInVariables;\r\n  }) => Promise<FetchResult<DoctorLogIn>>;\r\n}\r\n\r\nexport const Welcome = ({ setDoctor, doctor, logIn }: Props) => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const doctorLogInDialogRef = useRef<ElementRef<typeof DoctorLogInDialog>>(\r\n    null\r\n  );\r\n  // const [logOut] = useMutation<DoctorLogOut>(DOCTOR_LOG_OUT, {\r\n  //   onCompleted: (data) => {\r\n  //     if (data && data.doctorLogOut) {\r\n  //       setDoctor(data.doctorLogOut);\r\n  //       sessionStorage.removeItem(\"token\");\r\n  //       console.log(\"log out successfully\");\r\n  //     }\r\n  //   },\r\n  //   onError: (error) => {\r\n  //     console.log(error);\r\n  //     console.log(\"log out failed\");\r\n  //   },\r\n  // });\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  // const openDoctorLoginDialog = () => {\r\n  //   doctorLogInDialogRef.current?.hideError();\r\n  //   setIsDialogOpen(true);\r\n  // };\r\n  // const handleDoctorLogOut = () => {\r\n  //   logOut();\r\n  // };\r\n  const [isLogInErrorShown, setIsLogInErrorShown] = useState(false);\r\n  const handleDoctorLogIn = async (password: string) => {\r\n    if (doctor.userName) {\r\n      if (!password) {\r\n        doctorLogInDialogRef.current?.showError();\r\n        return;\r\n      }\r\n      try {\r\n        const logInResult = await logIn({\r\n          variables: {\r\n            input: {\r\n              userName: doctor.userName,\r\n              password,\r\n            },\r\n          },\r\n        });\r\n        if (logInResult.data && logInResult.data.doctorLogIn.userName) {\r\n          console.log(\"Second login succeeds.\");\r\n          history.push(\"/doctor\");\r\n        }\r\n      } catch {\r\n        setIsLogInErrorShown(true);\r\n      }\r\n    }\r\n  };\r\n  const hideErrorIndicator = () => {\r\n    setIsLogInErrorShown(false);\r\n  };\r\n  const goToLoginPage = () => {\r\n    history.push(\"/user/login\");\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.header} />\r\n      {/* <Header handleDoctorLogOut={handleDoctorLogOut} doctor={doctor} /> */}\r\n      <div className={classes.logoContainer}>\r\n        <img src={logo} alt=\"中大医院\" className={classes.logo} />\r\n      </div>\r\n      <div className={classes.actionContainer}>\r\n        <div className={classes.seuText}>东南大学附属中大医院</div>\r\n        <div>心理健康评估系统</div>\r\n        <div className={classes.enterSystemButtonContainer}>\r\n          <Button\r\n            startIcon={<PlayArrowRoundedIcon />}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={goToLoginPage}\r\n          >\r\n            进入系统\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      {/* <Fab\r\n        variant=\"extended\"\r\n        className={classes.extendedIcon}\r\n        onClick={openDoctorLoginDialog}\r\n      >\r\n        <SupervisorAccountIcon />\r\n        医生端\r\n      </Fab> */}\r\n      {doctor.name && (\r\n        <DoctorLogInDialog\r\n          isDialogOpen={isDialogOpen}\r\n          setIsDialogOpen={setIsDialogOpen}\r\n          doctorName={doctor.name}\r\n          handleDoctorLogIn={handleDoctorLogIn}\r\n          hideErrorIndicator={hideErrorIndicator}\r\n          ref={doctorLogInDialogRef}\r\n        />\r\n      )}\r\n      <ErrorIndicator\r\n        showError={isLogInErrorShown}\r\n        setShowError={setIsLogInErrorShown}\r\n        errorMessage={\"密码不正确！\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles, Theme, createStyles, Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport { ReturnToHomeHeader } from \"../../lib/components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      background: \"#e3f2fd\",\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n    },\r\n    titleWrapper: {\r\n      height: \"100%\",\r\n    },\r\n    title: {\r\n      fontSize: \"1.5rem\",\r\n      textAlign: \"center\",\r\n    },\r\n    promptTextContainer: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      paddingTop: 50,\r\n      background: \"#e3f2fd\",\r\n    },\r\n    promptText: {\r\n      width: \"50%\",\r\n      minWidth: \"min(85%, 400px)\",\r\n      lineHeight: \"1.5rem\",\r\n    },\r\n    buttonContainer: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      paddingTop: 50,\r\n      background: \"#e3f2fd\",\r\n      paddingBottom: 20,\r\n    },\r\n    titleContainer: {\r\n      minHeight: 75,\r\n      maxHeight: 290,\r\n      height: \"calc(100% - 610px)\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"flex-end\",\r\n      background: \"#e3f2fd\",\r\n    },\r\n  })\r\n);\r\nexport const PromptMessage = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <ReturnToHomeHeader />\r\n      <div className={classes.titleContainer}>\r\n        <div className={classes.title}>指导语</div>\r\n      </div>\r\n      <div className={classes.promptTextContainer}>\r\n        <div className={classes.promptText}>\r\n          在接下来大约20分钟的时间里您将进行一系列的量表评估，目的是对您的心理状况及个性特征进行评估，下面的问题并不存在所谓正确或者错误的答案，您只需要按照自己真实的状况完成就可以了。也许您会觉得自己并不完全如题目所描述的那样，这时候您可以根据选项选择最接近您的状况。请记住，这里并没有正确或错误，您只要如实回答问题就可以了。\r\n        </div>\r\n      </div>\r\n      <div className={classes.buttonContainer}>\r\n        <Link to=\"/user/home\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            endIcon={<NavigateNextIcon />}\r\n          >\r\n            下一步\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const PATIENT_LOG_IN = gql`\r\n  mutation PatientLogIn($input: UserLoginInput) {\r\n    patientLogIn(input: $input) {\r\n      name\r\n      userName\r\n      education\r\n      jobStatus\r\n      gender\r\n      marriageStatus\r\n      age\r\n      didRequest\r\n    }\r\n  }\r\n`;\r\n","import {\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n  Button,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Snackbar,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport { LoadingIndicator, ReturnToHomeHeader } from \"../../lib/components\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { QUERY_USER } from \"../../lib/graphql/queries/QueryUser\";\r\nimport {\r\n  QueryUser,\r\n  QueryUserVariables,\r\n} from \"../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport WcIcon from \"@material-ui/icons/Wc\";\r\nimport AccessibilityIcon from \"@material-ui/icons/Accessibility\";\r\nimport ChildCareIcon from \"@material-ui/icons/ChildCare\";\r\nimport SchoolIcon from \"@material-ui/icons/School\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport {\r\n  PatientLogIn,\r\n  PatientLogInVariables,\r\n} from \"../../lib/graphql/mutations/PatientLogIn/__generated__/PatientLogIn\";\r\nimport { Patient } from \"../../lib/type\";\r\nimport { PATIENT_LOG_IN } from \"../../lib/graphql/mutations/PatientLogIn\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      background: \"#e3f2fd\",\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n    },\r\n    titleWrapper: {\r\n      height: \"100%\",\r\n    },\r\n    title: {\r\n      fontSize: \"1.5rem\",\r\n      textAlign: \"center\",\r\n    },\r\n    buttonContainer: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      paddingTop: 50,\r\n      background: \"#e3f2fd\",\r\n      paddingBottom: 20,\r\n    },\r\n    titleContainer: {\r\n      minHeight: 75,\r\n      maxHeight: 290,\r\n      height: \"calc(100% - 630px)\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"flex-end\",\r\n      background: \"#e3f2fd\",\r\n    },\r\n    inputContainer: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      paddingTop: 50,\r\n    },\r\n    personalInformationContainer: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      paddingTop: 20,\r\n      background: \"#e3f2fd\",\r\n    },\r\n    input: {\r\n      width: 250,\r\n      paddingTop: 5,\r\n      paddingBottom: 5,\r\n    },\r\n    actionsWrapper: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      background: \"#e3f2fd\",\r\n    },\r\n    actionsContainer: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      paddingTop: 50,\r\n      background: \"#e3f2fd\",\r\n      paddingBottom: 20,\r\n      width: 300,\r\n    },\r\n  })\r\n);\r\n\r\ninterface Props {\r\n  setPatient: (patient: Patient) => void;\r\n  patient: Patient;\r\n}\r\n\r\nfunction useQueryParams() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport const PatientLogin = ({ setPatient, patient }: Props) => {\r\n\tconsole.log(\"///////////////////\");\r\n\tconsole.log(patient);\r\n  const queryParams = useQueryParams();\r\n  const initRef = useRef(() => {\r\n    const userName = queryParams.get(\"userName\");\r\n    if (userName) {\r\n      setUserName(userName);\r\n      handleNextButtonClick(userName);\r\n      \r\n    }\r\n  \t\r\n  });\r\n\t\r\n  useEffect(() => {\r\n    initRef.current();\r\n  }, []);\r\n  const handleKeyPress = (event: KeyboardEvent) => {\r\n    if (event.key === \"Enter\") {\r\n      if (isBasicInformationShown) {\r\n        handleLogInButtonClick();\r\n      } else {\r\n        handleNextButtonClick(undefined);\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyPress);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyPress);\r\n    };\r\n  });\r\n\r\n  const [patientLogIn] = useMutation<PatientLogIn, PatientLogInVariables>(\r\n    PATIENT_LOG_IN,\r\n    {\r\n      onCompleted: (data) => {\r\n        if (data && data.patientLogIn) {\r\n          setPatient(data.patientLogIn);\r\n        }\r\n      },\r\n    }\r\n  );\r\n  const classes = useStyles();\r\n  const [isUserNameValidated, setIsUserNameValidated] = useState(false);\r\n  const [isNameValidated, setIsNameValidated] = useState(false);\r\n  const [getQueryResult, { loading, data: userListData }] = useLazyQuery<\r\n    QueryUser,\r\n    QueryUserVariables\r\n  >(QUERY_USER, {\r\n    fetchPolicy: \"no-cache\",\r\n    onCompleted: (data) => {\r\n      if (data.queryUser.total > 0) {\r\n        const userInfo = data.queryUser.users[0];\r\n        userInfo.name && setName(userInfo.name);\r\n        userInfo.gender && setGender(userInfo.gender);\r\n        userInfo.age && setAge(userInfo.age);\r\n        userInfo.education && setEducation(userInfo.education);\r\n        userInfo.jobStatus && setJobStatus(userInfo.jobStatus);\r\n        userInfo.marriageStatus && setMarriageStatus(userInfo.marriageStatus);\r\n        setShowLoadSuccess(true);\r\n      } else {\r\n        setName(\"\");\r\n        setGender(\"\");\r\n        setAge(\"\");\r\n        setEducation(\"\");\r\n        setJobStatus(\"\");\r\n        setMarriageStatus(\"\");\r\n      }\r\n    },\r\n  });\r\n  const [isBasicInformationShown, setIsBasicInformationShown] = useState(false);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const [education, setEducation] = useState(\"\");\r\n  const [jobStatus, setJobStatus] = useState(\"\");\r\n  const [marriageStatus, setMarriageStatus] = useState(\"\");\r\n  const onNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setName(e.target.value);\r\n  };\r\n  const onGenderChange = (\r\n    e: React.ChangeEvent<{\r\n      name?: string | undefined;\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setGender(e.target.value as string);\r\n  };\r\n  const onAgeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAge(e.target.value);\r\n  };\r\n  const [showLoadSuccess, setShowLoadSuccess] = useState(false);\r\n  const handleCloseLoadSuccess = () => {\r\n    setShowLoadSuccess(false);\r\n  };\r\n  const handleUserNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUserName(e.target.value);\r\n  };\r\n  const [showNameErrorMessage, setShowNameErrorMessage] = useState(false);\r\n  const handleCloseNameErrorMessage = () => {\r\n    setShowNameErrorMessage(false);\r\n  };\r\n  const onEducationChange = (\r\n    e: React.ChangeEvent<{\r\n      name?: string | undefined;\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setEducation(e.target.value as string);\r\n  };\r\n  const onMarriageStatusChange = (\r\n    e: React.ChangeEvent<{\r\n      name?: string | undefined;\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setMarriageStatus(e.target.value as string);\r\n  };\r\n  const onJobChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setJobStatus(e.target.value);\r\n  };\r\n  const handleNextButtonClick = async (\r\n    userNameFromQueryParams: string | undefined\r\n  ) => {\r\n    if (!isBasicInformationShown) {\r\n      if (userName || userNameFromQueryParams) {\r\n        await getQueryResult({\r\n          variables: {\r\n            userName: userNameFromQueryParams\r\n              ? userNameFromQueryParams\r\n              : userName,\r\n            limit: 1,\r\n            currentPageIndex: 0,\r\n          },\r\n        });\r\n        setIsBasicInformationShown(true);\r\n      } else {\r\n        // Show the userName cannot be empty error.\r\n        setIsUserNameValidated(true);\r\n      }\r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    setIsBasicInformationShown(false);\r\n  };\r\n  const history = useHistory();\r\n  const handleLogInButtonClick = async () => {\r\n    if (name) {\r\n      await patientLogIn({\r\n        variables: {\r\n          input: {\r\n            userName,\r\n            education,\r\n            name: name.trim(),\r\n            age: age !== \"\" ? Number(age) : undefined,\r\n            gender,\r\n            jobStatus,\r\n            marriageStatus,\r\n          },\r\n        },\r\n      });\r\n      history.push(\"/user/prompt\");\r\n    } else {\r\n      setIsNameValidated(true);\r\n      setShowNameErrorMessage(true);\r\n    }\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <ReturnToHomeHeader />\r\n      {isBasicInformationShown ? (\r\n        loading ? (\r\n          <LoadingIndicator />\r\n        ) : (\r\n          <>\r\n            {userListData && userListData.queryUser.total > 0 ? (\r\n              <div className={classes.titleContainer}>\r\n                <div className={classes.title}>请核实您的个人信息</div>\r\n              </div>\r\n            ) : (\r\n              <div className={classes.titleContainer}>\r\n                <div className={classes.title}>请输入您的个人信息</div>\r\n              </div>\r\n            )}\r\n            <div className={classes.personalInformationContainer}>\r\n              <div>\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <AccountCircle />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      label=\"姓名\"\r\n                      className={classes.input}\r\n                      required\r\n                      value={name}\r\n                      onChange={onNameChange}\r\n                      error={isNameValidated && !name ? true : false}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n              <div>\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <WcIcon />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <FormControl size=\"small\" className={classes.input}>\r\n                      <InputLabel>性别</InputLabel>\r\n                      <Select\r\n                        color=\"primary\"\r\n                        label=\"性别\"\r\n                        onChange={onGenderChange}\r\n                        value={gender}\r\n                      >\r\n                        <MenuItem value=\"男\">男</MenuItem>\r\n                        <MenuItem value=\"女\">女</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n              <div>\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <AccessibilityIcon />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      className={classes.input}\r\n                      color=\"primary\"\r\n                      label=\"年龄\"\r\n                      size=\"small\"\r\n                      type=\"number\"\r\n                      value={age}\r\n                      onChange={onAgeChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n              <div>\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <ChildCareIcon />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <FormControl size=\"small\" className={classes.input}>\r\n                      <InputLabel>婚姻</InputLabel>\r\n                      <Select\r\n                        color=\"primary\"\r\n                        value={marriageStatus}\r\n                        onChange={onMarriageStatusChange}\r\n                      >\r\n                        <MenuItem value=\"已婚\">已婚</MenuItem>\r\n                        <MenuItem value=\"未婚\">未婚</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n              <div>\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <SchoolIcon />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <FormControl size=\"small\" className={classes.input}>\r\n                      <InputLabel>教育</InputLabel>\r\n                      <Select\r\n                        color=\"primary\"\r\n                        value={education}\r\n                        onChange={onEducationChange}\r\n                      >\r\n                        <MenuItem value=\"高中以下\">高中以下</MenuItem>\r\n                        <MenuItem value=\"大中专科\">大中专科</MenuItem>\r\n                        <MenuItem value=\"本科\">本科</MenuItem>\r\n                        <MenuItem value=\"硕士\">硕士</MenuItem>\r\n                        <MenuItem value=\"博士\">博士</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n              <div>\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <WorkIcon />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      color=\"primary\"\r\n                      label=\"职业\"\r\n                      size=\"small\"\r\n                      className={classes.input}\r\n                      value={jobStatus}\r\n                      onChange={onJobChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )\r\n      ) : (\r\n        <>\r\n          <div className={classes.titleContainer}>\r\n            <div className={classes.title}>请输入您的门诊号</div>\r\n          </div>\r\n          <div className={classes.inputContainer}>\r\n            <TextField\r\n              label=\"门诊号\"\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <AssignmentIndIcon />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              value={userName}\r\n              onChange={handleUserNameChange}\r\n              autoFocus\r\n              error={isUserNameValidated && !userName ? true : undefined}\r\n              helperText={\r\n                isUserNameValidated && !userName\r\n                  ? \"请输入您的门诊号\"\r\n                  : undefined\r\n              }\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n      {isBasicInformationShown ? (\r\n        loading ? null : (\r\n          <div className={classes.actionsWrapper}>\r\n            <div className={classes.actionsContainer}>\r\n              <Button onClick={handleCancel}>取消</Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleLogInButtonClick}\r\n              >\r\n                确定\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )\r\n      ) : (\r\n        <div className={classes.buttonContainer}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            endIcon={<NavigateNextIcon />}\r\n            onClick={() => handleNextButtonClick(undefined)}\r\n          >\r\n            下一步\r\n          </Button>\r\n        </div>\r\n      )}\r\n      <Snackbar\r\n        open={showLoadSuccess}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseLoadSuccess}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleCloseLoadSuccess}\r\n          severity=\"success\"\r\n          variant=\"filled\"\r\n        >\r\n          成功载入您的个人信息\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        open={showNameErrorMessage}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseNameErrorMessage}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleCloseNameErrorMessage}\r\n          severity=\"error\"\r\n          variant=\"filled\"\r\n        >\r\n          姓名为必填项！\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  FetchResult,\r\n  MutationFunctionOptions,\r\n  QueryLazyOptions,\r\n} from \"@apollo/client\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  TextField,\r\n  DialogActions,\r\n  Button,\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  debounce,\r\n} from \"@material-ui/core\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { ErrorIndicator } from \"../../../../lib/components\";\r\nimport { SuccessIndicator } from \"../../../../lib/components/SuccessIndicator\";\r\nimport {\r\n  AddDoctor,\r\n  AddDoctorVariables,\r\n} from \"../../../../lib/graphql/mutations/AddDoctor/__generated__/AddDoctor\";\r\nimport {\r\n  CheckIfDoctorNameUnique,\r\n  CheckIfDoctorNameUniqueVariables,\r\n} from \"../../../../lib/graphql/queries/CheckIfDoctorNameUnique/__generated__/CheckIfDoctorNameUnique\";\r\n\r\ninterface Props {\r\n  isOpen: boolean;\r\n  closeDialog: () => void;\r\n  checkDoctorUserName: (\r\n    options: QueryLazyOptions<CheckIfDoctorNameUniqueVariables>\r\n  ) => void;\r\n  checkResult: CheckIfDoctorNameUnique | undefined;\r\n  addDoctor: (\r\n    options?: MutationFunctionOptions<AddDoctor, AddDoctorVariables>\r\n  ) => Promise<FetchResult<AddDoctor>>;\r\n  refetchListData: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    input: {\r\n      display: \"block\",\r\n      margin: 5,\r\n      paddingRight: 5,\r\n    },\r\n    inputContainer: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    },\r\n  })\r\n);\r\n\r\nexport const AddDoctorDialog = (props: Props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    isOpen,\r\n    closeDialog,\r\n    checkDoctorUserName,\r\n    checkResult,\r\n    addDoctor,\r\n    refetchListData,\r\n  } = props;\r\n  const [userNameInput, setUserNameInput] = useState(\"\");\r\n  const [nameInput, setNameInput] = useState(\"\");\r\n  const [passwordInput, setPasswordInput] = useState(\"\");\r\n  const [secondPasswordInput, setSecondPasswordInput] = useState(\"\");\r\n  const [userNameDuplicate, setUserNameDubplicate] = useState(false);\r\n  const [isErrorShown, setIsErrorShown] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [isSuccessShown, setIsSuccessShown] = useState(false);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const debouncedCheckDoctorUserName = useCallback(\r\n    debounce(checkDoctorUserName, 300),\r\n    [checkDoctorUserName]\r\n  );\r\n  useEffect(() => {\r\n    setUserNameInput(\"\");\r\n    setNameInput(\"\");\r\n    setPasswordInput(\"\");\r\n    setSecondPasswordInput(\"\");\r\n    setUserNameDubplicate(false);\r\n    setIsSuccessShown(false);\r\n  }, [isOpen]);\r\n  useEffect(() => {\r\n    checkResult &&\r\n      setUserNameDubplicate(!checkResult.checkIfDoctorUserNameUnique.result);\r\n  }, [checkResult]);\r\n  const handleUserNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUserNameInput(e.target.value);\r\n    setUserNameDubplicate(false);\r\n    debouncedCheckDoctorUserName({\r\n      variables: {\r\n        userName: e.target.value,\r\n      },\r\n    });\r\n  };\r\n  const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setNameInput(e.target.value);\r\n  };\r\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPasswordInput(e.target.value);\r\n  };\r\n\r\n  const handleSecondPasswordInput = (\r\n    e: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setSecondPasswordInput(e.target.value);\r\n  };\r\n\r\n  const handleAddButtonClick = async () => {\r\n    if (passwordInput !== secondPasswordInput) {\r\n      setErrorMessage(\"两次输入的密码不相同！\");\r\n      setIsErrorShown(true);\r\n      return;\r\n    }\r\n    const result = await addDoctor({\r\n      variables: {\r\n        input: {\r\n          userName: userNameInput,\r\n          name: nameInput,\r\n          password: passwordInput,\r\n        },\r\n      },\r\n    });\r\n    if (result.data?.addDoctor.result) {\r\n      closeDialog();\r\n      refetchListData();\r\n      setIsSuccessShown(true);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={isOpen}\r\n        onClose={closeDialog}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">添加医生</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            请输入医生的用户名、姓名和密码。\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            label=\"用户名\"\r\n            className={classes.input}\r\n            fullWidth\r\n            required\r\n            value={userNameInput}\r\n            onChange={handleUserNameChange}\r\n            error={userNameDuplicate || undefined}\r\n            helperText={userNameDuplicate ? \"此用户名已经被注册！\" : undefined}\r\n          />\r\n          <TextField\r\n            label=\"姓名\"\r\n            className={classes.input}\r\n            fullWidth\r\n            required\r\n            value={nameInput}\r\n            onChange={handleNameChange}\r\n          />\r\n          <TextField\r\n            label=\"密码\"\r\n            className={classes.input}\r\n            fullWidth\r\n            required\r\n            type=\"password\"\r\n            value={passwordInput}\r\n            onChange={handlePasswordChange}\r\n          />\r\n          <TextField\r\n            label=\"确认密码\"\r\n            className={classes.input}\r\n            fullWidth\r\n            required\r\n            type=\"password\"\r\n            value={secondPasswordInput}\r\n            onChange={handleSecondPasswordInput}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={closeDialog}>取消</Button>\r\n          <Button\r\n            onClick={handleAddButtonClick}\r\n            color=\"primary\"\r\n            disabled={\r\n              userNameDuplicate ||\r\n              !nameInput ||\r\n              !userNameInput ||\r\n              !passwordInput ||\r\n              !secondPasswordInput\r\n                ? true\r\n                : undefined\r\n            }\r\n          >\r\n            添加\r\n          </Button>\r\n        </DialogActions>\r\n        <ErrorIndicator\r\n          showError={isErrorShown}\r\n          setShowError={setIsErrorShown}\r\n          errorMessage={errorMessage}\r\n        />\r\n      </Dialog>\r\n      <SuccessIndicator\r\n        showSuccess={isSuccessShown}\r\n        setShowSuccess={setIsSuccessShown}\r\n        successMessage=\"成功创建账号\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { useLazyQuery, useMutation, useQuery } from \"@apollo/client\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  createStyles,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  makeStyles,\r\n  Paper,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport React, { useState } from \"react\";\r\nimport { LoadingIndicator } from \"../../lib/components\";\r\nimport { ADD_DOCTOR } from \"../../lib/graphql/mutations/AddDoctor\";\r\nimport {\r\n  AddDoctor,\r\n  AddDoctorVariables,\r\n} from \"../../lib/graphql/mutations/AddDoctor/__generated__/AddDoctor\";\r\nimport { DOCTOR_LIST } from \"../../lib/graphql/queries\";\r\nimport { CHECK_IF_DOCTOR_USER_NAME_UNIQUE } from \"../../lib/graphql/queries/CheckIfDoctorNameUnique\";\r\nimport {\r\n  CheckIfDoctorNameUnique,\r\n  CheckIfDoctorNameUniqueVariables,\r\n} from \"../../lib/graphql/queries/CheckIfDoctorNameUnique/__generated__/CheckIfDoctorNameUnique\";\r\nimport {\r\n  DoctorList,\r\n  DoctorListVariables,\r\n} from \"../../lib/graphql/queries/DoctorList/__generated__/DoctorList\";\r\nimport { Header } from \"../PatientInformation/components\";\r\nimport { AddDoctorDialog } from \"./components\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nconst DEFAULT_LIMIT = 5;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    list: {\r\n      margin: \"20px 10px\",\r\n    },\r\n    actionContainer: {\r\n      margin: 10,\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    paginationContainer: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n    totalNumberText: {\r\n      marginRight: 5,\r\n    },\r\n    avatar: {\r\n      backgroundColor: blue[100],\r\n      color: blue[600],\r\n    },\r\n  })\r\n);\r\nexport const CreateDoctor = () => {\r\n  const classes = useStyles();\r\n  const { loading, data, refetch } = useQuery<DoctorList, DoctorListVariables>(\r\n    DOCTOR_LIST,\r\n    {\r\n      variables: {\r\n        limit: DEFAULT_LIMIT,\r\n        currentPageIndex: 0,\r\n      },\r\n      fetchPolicy: \"network-only\",\r\n    }\r\n  );\r\n  const [checkDoctorName, { data: checkNameData }] = useLazyQuery<\r\n    CheckIfDoctorNameUnique,\r\n    CheckIfDoctorNameUniqueVariables\r\n  >(CHECK_IF_DOCTOR_USER_NAME_UNIQUE, {\r\n    fetchPolicy: \"no-cache\",\r\n  });\r\n  const [addDoctor] = useMutation<AddDoctor, AddDoctorVariables>(ADD_DOCTOR);\r\n  const [currentPageIndex, setCurrentPageIndex] = useState(0);\r\n  const [isAddDoctorDialogOpen, setIsAddDoctorDialogOpen] = useState(false);\r\n  const closeDialog = () => {\r\n    setIsAddDoctorDialogOpen(false);\r\n  };\r\n  const openDialog = () => {\r\n    setIsAddDoctorDialogOpen(true);\r\n  };\r\n  const handlePaginationChange = (\r\n    _event: React.ChangeEvent<unknown>,\r\n    pageIndex: number\r\n  ) => {\r\n    setCurrentPageIndex(pageIndex - 1);\r\n    refetch({ limit: DEFAULT_LIMIT, currentPageIndex: pageIndex - 1 });\r\n  };\r\n  const refetchListData = () => {\r\n    refetch({ limit: DEFAULT_LIMIT, currentPageIndex });\r\n  };\r\n  if (loading || !data) {\r\n    return <LoadingIndicator />;\r\n  }\r\n  return (\r\n    <>\r\n      <Header text={\"医生账号信息\"} />\r\n      <div className={classes.actionContainer}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={openDialog}\r\n          startIcon={<AddIcon />}\r\n        >\r\n          添加医生\r\n        </Button>\r\n        <div className={classes.paginationContainer}>\r\n          <span className={classes.totalNumberText}>\r\n            共计{data.doctorList.total}个账号\r\n          </span>\r\n          <Pagination\r\n            count={Math.ceil(data.doctorList.total / DEFAULT_LIMIT)}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            page={currentPageIndex + 1}\r\n            onChange={handlePaginationChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <List component={Paper} className={classes.list}>\r\n        {data.doctorList.admins.map((admin, index) => (\r\n          <React.Fragment key={admin.userName}>\r\n            <ListItem alignItems=\"flex-start\" key={admin.userName}>\r\n              <ListItemAvatar>\r\n                <Avatar className={classes.avatar}>\r\n                  <PersonIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={`账号名：${admin.userName}`}\r\n                secondary={`姓名：${admin.name}`}\r\n              />\r\n            </ListItem>\r\n            {index !== data.doctorList.admins.length - 1 && <Divider />}\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n      <AddDoctorDialog\r\n        isOpen={isAddDoctorDialogOpen}\r\n        closeDialog={closeDialog}\r\n        checkDoctorUserName={checkDoctorName}\r\n        checkResult={checkNameData}\r\n        addDoctor={addDoctor}\r\n        refetchListData={refetchListData}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  TextField,\r\n  DialogActions,\r\n  Button,\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  List,\r\n  ListItem,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  Switch,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useCallback } from \"react\";\r\nimport { ErrorIndicator } from \"../../../../lib/components\";\r\nimport { SuccessIndicator } from \"../../../../lib/components/SuccessIndicator\";\r\nimport { ADD_DOCTOR_CONFIG } from \"../../../../lib/graphql/mutations\";\r\nimport {\r\n  AddDoctorConfig,\r\n  AddDoctorConfigVariables,\r\n} from \"../../../../lib/graphql/mutations/AddDoctorConfig/__generated__/AddDoctorConfig\";\r\nimport { CHECK_IF_DOCTOR_CONFIG_USER_NAME_UNIQUE } from \"../../../../lib/graphql/queries\";\r\nimport {\r\n  CheckIfDoctorConfigNameUnique,\r\n  CheckIfDoctorConfigNameUniqueVariables,\r\n} from \"../../../../lib/graphql/queries/CheckIfDoctorConfigNameUnique/__generated__/CheckIfDoctorConfigNameUnique\";\r\nimport { QuestionnaireList } from \"../../../../lib/graphql/queries/QuestionnaireList/__generated__/QuestionnaireList\";\r\nimport { debounce } from \"../../../../lib/utils\";\r\n\r\ninterface Props {\r\n  isOpen: boolean;\r\n  closeDialog: () => void;\r\n  refetchListData: () => void;\r\n  formList: QuestionnaireList;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    input: {\r\n      display: \"block\",\r\n      margin: 5,\r\n      paddingRight: 5,\r\n    },\r\n    inputContainer: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    },\r\n  })\r\n);\r\n\r\nexport const AddConfigurationDialog = (props: Props) => {\r\n  const classes = useStyles();\r\n  const { isOpen, closeDialog, refetchListData, formList } = props;\r\n  const [checkConfigName, { data: checkConfigNameResult }] = useLazyQuery<\r\n    CheckIfDoctorConfigNameUnique,\r\n    CheckIfDoctorConfigNameUniqueVariables\r\n  >(CHECK_IF_DOCTOR_CONFIG_USER_NAME_UNIQUE, {\r\n    fetchPolicy: \"no-cache\",\r\n  });\r\n\r\n  const [addDoctorConfig] = useMutation<\r\n    AddDoctorConfig,\r\n    AddDoctorConfigVariables\r\n  >(ADD_DOCTOR_CONFIG);\r\n  const debouncedCheckConfigName = useCallback(\r\n    () => debounce(checkConfigName, 300),\r\n    [checkConfigName]\r\n  );\r\n  const [nameInput, setNameInput] = useState(\"\");\r\n  const [isErrorShown, setIsErrorShown] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [isSuccessShown, setIsSuccessShown] = useState(false);\r\n  const [checkedFormIds, setCheckedFormIds] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    setNameInput(\"\");\r\n    setIsErrorShown(false);\r\n    setErrorMessage(\"\");\r\n    setIsSuccessShown(false);\r\n    if (formList && isOpen) {\r\n      setCheckedFormIds([]);\r\n    }\r\n  }, [formList, isOpen]);\r\n\r\n  useEffect(() => {\r\n    if (checkConfigNameResult?.checkIfDoctorConfigNameUnique.result === false) {\r\n      setErrorMessage(\"此配置名已存在！\");\r\n    } else {\r\n      setErrorMessage(\"\");\r\n    }\r\n  }, [checkConfigNameResult]);\r\n\r\n  const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setNameInput(e.target.value);\r\n    debouncedCheckConfigName()({\r\n      variables: { doctorConfigName: e.target.value },\r\n    });\r\n  };\r\n\r\n  const handleSwitchChange = (formId: string) => {\r\n    if (checkedFormIds.includes(formId)) {\r\n      setCheckedFormIds(\r\n        checkedFormIds.filter((currentId) => currentId !== formId)\r\n      );\r\n    } else {\r\n      setCheckedFormIds([...checkedFormIds, formId]);\r\n    }\r\n  };\r\n\r\n  const handleOkButtonClick = () => {\r\n    addDoctorConfig({\r\n      variables: {\r\n        input: {\r\n          configName: nameInput,\r\n          selected: false,\r\n          formIds: checkedFormIds,\r\n        },\r\n      },\r\n    }).then((addResult) => {\r\n      if (addResult.data?.addDoctorConfig.result === true) {\r\n        setIsSuccessShown(true);\r\n        closeDialog();\r\n        refetchListData();\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={isOpen}\r\n        onClose={closeDialog}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        maxWidth=\"md\"\r\n        fullWidth={true}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">添加配置</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            请输入配置名，并选择需要使用的量表。\r\n          </DialogContentText>\r\n\r\n          <TextField\r\n            label=\"配置名\"\r\n            className={classes.input}\r\n            fullWidth\r\n            required\r\n            value={nameInput}\r\n            onChange={handleNameChange}\r\n            error={errorMessage ? true : undefined}\r\n            helperText={errorMessage || undefined}\r\n          />\r\n          <List>\r\n            {formList.questionnaireList.map((form) => (\r\n              <ListItem key={form.key}>\r\n                <ListItemText primary={form.name} />\r\n                <ListItemSecondaryAction>\r\n                  <Switch\r\n                    edge=\"end\"\r\n                    color=\"primary\"\r\n                    checked={checkedFormIds.includes(form.id)}\r\n                    onChange={() => handleSwitchChange(form.id)}\r\n                  />\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={closeDialog}>取消</Button>\r\n          <Button\r\n            color=\"primary\"\r\n            disabled={!nameInput || errorMessage ? true : undefined}\r\n            onClick={handleOkButtonClick}\r\n          >\r\n            添加\r\n          </Button>\r\n        </DialogActions>\r\n        <ErrorIndicator\r\n          showError={isErrorShown}\r\n          setShowError={setIsErrorShown}\r\n          errorMessage={errorMessage}\r\n        />\r\n      </Dialog>\r\n      <SuccessIndicator\r\n        showSuccess={isSuccessShown}\r\n        setShowSuccess={setIsSuccessShown}\r\n        successMessage=\"成功添加配置\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { useMediaQuery } from \"@material-ui/core\";\r\n\r\nexport const useCheckSmallScreen = () => {\r\n  return useMediaQuery(\"(max-width:580px)\");\r\n};\r\n\r\nexport const debounce = <F extends (...params: any[]) => void>(\r\n  func: F,\r\n  waitTime: number\r\n): F => {\r\n  let timeout: NodeJS.Timeout;\r\n  return function returnedFunction(...args) {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      return func(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, waitTime);\r\n  } as F;\r\n};\r\n\r\nexport function isNumeric(str: string) {\r\n  if (typeof str != \"string\") return false;\r\n  return !isNaN(parseFloat(str));\r\n}\r\n","import {\r\n  Dialog,\r\n  DialogTitle,\r\n  List,\r\n  ListItem,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  Switch,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { DoctorConfigList_doctorConfigList_configs as DoctorConfigItem } from \"../../../../lib/graphql/queries/DoctorConfigList/__generated__/DoctorConfigList\";\r\nimport { QuestionnaireList } from \"../../../../lib/graphql/queries/QuestionnaireList/__generated__/QuestionnaireList\";\r\n\r\ninterface Props {\r\n  config: DoctorConfigItem;\r\n  isDialogOpen: boolean;\r\n  formList: QuestionnaireList;\r\n  closeDialog: () => void;\r\n}\r\nexport const ConfirationDetailDialog = (props: Props) => {\r\n  const { config, isDialogOpen, formList, closeDialog } = props;\r\n  return (\r\n    <Dialog fullWidth maxWidth=\"md\" open={isDialogOpen} onClose={closeDialog}>\r\n      <DialogTitle>配置名：{config.configName}</DialogTitle>\r\n      <List>\r\n        {formList.questionnaireList.map((form) => (\r\n          <ListItem key={form.key}>\r\n            <ListItemText primary={form.name} />\r\n            <ListItemSecondaryAction>\r\n              <Switch\r\n                edge=\"end\"\r\n                color=\"primary\"\r\n                checked={config.formIds.includes(form.id)}\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Dialog>\r\n  );\r\n};\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const DELETE_CONFIG = gql`\r\n  mutation DeleteConfig($input: DeleteConfigInput) {\r\n    deleteConfig(input: $input) {\r\n      result\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { Header } from \"../PatientInformation/components\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { AddConfigurationDialog, ConfirationDetailDialog } from \"./components\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport {\r\n  DOCTOR_CONFIG_LIST,\r\n  QUESTIONNAIRE_LIST,\r\n} from \"../../lib/graphql/queries\";\r\nimport {\r\n  QuestionnaireList,\r\n  QuestionnaireListVariables,\r\n} from \"../../lib/graphql/queries/QuestionnaireList/__generated__/QuestionnaireList\";\r\nimport { LoadingIndicator } from \"../../lib/components\";\r\nimport {\r\n  DoctorConfigList,\r\n  DoctorConfigList_doctorConfigList_configs as DoctorConfigItem,\r\n} from \"../../lib/graphql/queries/DoctorConfigList/__generated__/DoctorConfigList\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport {\r\n  SelectConfig,\r\n  SelectConfigVariables,\r\n} from \"../../lib/graphql/mutations/SelectConfig/__generated__/SelectConfig\";\r\nimport { SELECT_CONFIG } from \"../../lib/graphql/mutations\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {\r\n  DeleteConfig,\r\n  DeleteConfigVariables,\r\n} from \"../../lib/graphql/mutations/DeleteConfig/__generated__/DeleteConfig\";\r\nimport { DELETE_CONFIG } from \"../../lib/graphql/mutations/DeleteConfig\";\r\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    actionsContainer: {\r\n      margin: 10,\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n    configCard: {\r\n      width: 270,\r\n      margin: \"10px 10px\",\r\n      display: \"inline-block\",\r\n    },\r\n    configNameContainer: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n    settingIcon: {\r\n      marginRight: 10,\r\n      color: \"#2196F3\",\r\n    },\r\n    configPromptMessage: {\r\n      margin: 10,\r\n    },\r\n    noOverflow: {\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n      whiteSpace: \"nowrap\",\r\n    },\r\n    inUseText: {\r\n      color: \"#4caf50 !important\",\r\n    },\r\n    resetButton: {\r\n      marginLeft: 10,\r\n    },\r\n    cardDescription: {\r\n      fontSize: \"0.875rem\",\r\n      paddingTop: 15,\r\n    },\r\n    deleteButton: {\r\n      marginLeft: \"auto !important\",\r\n      \"&:hover\": {\r\n        color: \"#B71C1C\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nexport const DoctorConfig = () => {\r\n  const [isAddConfigDialogOpen, setIsAddConfigDialogOpen] = useState(false);\r\n  const closeAddConfigDialog = () => {\r\n    setIsAddConfigDialogOpen(false);\r\n  };\r\n  const openAddConfigDialog = () => {\r\n    setIsAddConfigDialogOpen(true);\r\n  };\r\n  const [selectedConfig, setSelectedConfig] = useState<null | DoctorConfigItem>(\r\n    null\r\n  );\r\n  const [\r\n    isConfigrationDetailDialogOpen,\r\n    setIsConfigrationDetailDialogOpen,\r\n  ] = useState(false);\r\n  const closeConfigDetailDialog = () => {\r\n    setIsConfigrationDetailDialogOpen(false);\r\n  };\r\n  const openConfigDetailDialog = (configItem: DoctorConfigItem) => {\r\n    setSelectedConfig(configItem);\r\n    setIsConfigrationDetailDialogOpen(true);\r\n  };\r\n  const {\r\n    data: configList,\r\n    refetch,\r\n    loading: configListLoading,\r\n  } = useQuery<DoctorConfigList>(DOCTOR_CONFIG_LIST, {\r\n    fetchPolicy: \"no-cache\",\r\n  });\r\n  const classes = useStyles();\r\n  const {\r\n    loading,\r\n    data: formListData,\r\n    error: questionnaireListError,\r\n  } = useQuery<QuestionnaireList, QuestionnaireListVariables>(\r\n    QUESTIONNAIRE_LIST,\r\n    {\r\n      variables: { isReport: false, showAll: true },\r\n    }\r\n  );\r\n  const [selectConfig] = useMutation<SelectConfig, SelectConfigVariables>(\r\n    SELECT_CONFIG\r\n  );\r\n  const [deleteConfig] = useMutation<DeleteConfig, DeleteConfigVariables>(\r\n    DELETE_CONFIG\r\n  );\r\n  const handleSelectConfigButtonClick = (configId: string) => {\r\n    selectConfig({ variables: { input: { configId } } }).then(() => refetch());\r\n  };\r\n  const handleDeleteConfigButtonClick = (configId: string) => {\r\n    deleteConfig({ variables: { input: { configId } } }).then(() => refetch());\r\n  };\r\n  const handleResetButtonClick = () => {\r\n    selectConfig({ variables: { input: {} } }).then(() => refetch());\r\n  };\r\n\r\n  if (loading || !formListData || !configList || configListLoading) {\r\n    return <LoadingIndicator />;\r\n  }\r\n  let currentlyUsedConfig: null | DoctorConfigItem | false = null;\r\n  // null: unknown\r\n  // false: no currently used configuration\r\n  // DoctorConfigItem: currently used configration\r\n  const configInUseList = configList?.doctorConfigList.configs.filter(\r\n    (config) => config.selected === true\r\n  );\r\n  if (configInUseList === undefined) {\r\n    currentlyUsedConfig = null;\r\n  } else if (configInUseList.length === 0) {\r\n    currentlyUsedConfig = false;\r\n  } else {\r\n    currentlyUsedConfig = configInUseList[0];\r\n  }\r\n  return (\r\n    <>\r\n      <Header text={\"配置患者端使用的量表\"} />\r\n      <div className={classes.actionsContainer}>\r\n        <Button\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          variant=\"contained\"\r\n          onClick={openAddConfigDialog}\r\n        >\r\n          添加配置\r\n        </Button>\r\n        <a href=\"/user\" target=\"_blank\">\r\n          <Button startIcon={<OpenInNewIcon />}>启动用户端</Button>\r\n        </a>\r\n      </div>\r\n      <div className={classes.configPromptMessage}>\r\n        {/** Prompt message */}\r\n        {currentlyUsedConfig === null ? null : currentlyUsedConfig === false ? (\r\n          \"当前无使用中的自定义配置，所有量表都可见。\"\r\n        ) : (\r\n          <>\r\n            {`当前使用的配置名称为：${currentlyUsedConfig.configName}`}\r\n            <Button\r\n              className={classes.resetButton}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              onClick={handleResetButtonClick}\r\n            >\r\n              重置\r\n            </Button>\r\n          </>\r\n        )}\r\n      </div>\r\n      <div>\r\n        {configList?.doctorConfigList.configs.map((config) => (\r\n          <Card className={classes.configCard} key={config.id}>\r\n            <CardContent>\r\n              <div className={classes.configNameContainer}>\r\n                <SettingsIcon className={classes.settingIcon} />\r\n                <span className={classes.noOverflow}>{config.configName}</span>\r\n              </div>\r\n              <div className={classes.cardDescription}>\r\n                共{config.formIds.length}个量表\r\n              </div>\r\n            </CardContent>\r\n            <CardActions>\r\n              <Button\r\n                size=\"small\"\r\n                onClick={() => openConfigDetailDialog(config)}\r\n              >\r\n                查看详情\r\n              </Button>\r\n              {config.selected === false ? (\r\n                <Button\r\n                  size=\"small\"\r\n                  onClick={() => handleSelectConfigButtonClick(config.id)}\r\n                >\r\n                  使用此配置\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  size=\"small\"\r\n                  className={classes.inUseText}\r\n                  disableRipple\r\n                  disabled\r\n                >\r\n                  使用中\r\n                </Button>\r\n              )}\r\n              <IconButton\r\n                size=\"small\"\r\n                className={classes.deleteButton}\r\n                onClick={() => handleDeleteConfigButtonClick(config.id)}\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </CardActions>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n      <AddConfigurationDialog\r\n        isOpen={isAddConfigDialogOpen}\r\n        closeDialog={closeAddConfigDialog}\r\n        refetchListData={refetch}\r\n        formList={formListData}\r\n      />\r\n      {selectedConfig && (\r\n        <ConfirationDetailDialog\r\n          isDialogOpen={isConfigrationDetailDialogOpen}\r\n          closeDialog={closeConfigDetailDialog}\r\n          formList={formListData}\r\n          config={selectedConfig}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import {\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n  Button,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Snackbar,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport { LoadingIndicator, ReturnToHomeHeader } from \"../../lib/components\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { QUERY_USER } from \"../../lib/graphql/queries/QueryUser\";\r\nimport {\r\n  QueryUser,\r\n  QueryUserVariables,\r\n} from \"../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport WcIcon from \"@material-ui/icons/Wc\";\r\nimport AccessibilityIcon from \"@material-ui/icons/Accessibility\";\r\nimport ChildCareIcon from \"@material-ui/icons/ChildCare\";\r\nimport SchoolIcon from \"@material-ui/icons/School\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport {\r\n  PatientLogIn,\r\n  PatientLogInVariables,\r\n} from \"../../lib/graphql/mutations/PatientLogIn/__generated__/PatientLogIn\";\r\nimport { Patient } from \"../../lib/type\";\r\nimport { PATIENT_LOG_IN } from \"../../lib/graphql/mutations/PatientLogIn\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      background: \"#e3f2fd\",\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n    },\r\n    titleWrapper: {\r\n      height: \"100%\",\r\n    },\r\n    title: {\r\n      fontSize: \"1.5rem\",\r\n      textAlign: \"center\",\r\n    },\r\n    buttonContainer: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      paddingTop: 50,\r\n      background: \"#e3f2fd\",\r\n      paddingBottom: 20,\r\n    },\r\n    titleContainer: {\r\n      minHeight: 75,\r\n      maxHeight: 290,\r\n      height: \"calc(100% - 630px)\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"flex-end\",\r\n      background: \"#e3f2fd\",\r\n    },\r\n    inputContainer: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      paddingTop: 50,\r\n    },\r\n    personalInformationContainer: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      paddingTop: 20,\r\n      background: \"#e3f2fd\",\r\n    },\r\n    input: {\r\n      width: 250,\r\n      paddingTop: 5,\r\n      paddingBottom: 5,\r\n    },\r\n    actionsWrapper: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      background: \"#e3f2fd\",\r\n    },\r\n    actionsContainer: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      paddingTop: 50,\r\n      background: \"#e3f2fd\",\r\n      paddingBottom: 20,\r\n      width: 300,\r\n    },\r\n  })\r\n);\r\n\r\ninterface Props {\r\n  setPatient: (patient: Patient) => void;\r\n  patient: Patient;\r\n}\r\n\r\nfunction useQueryParams() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport const SecondLogin = ({ setPatient, patient }: Props) => {\r\n\tconsole.log(\"///////////////////////////////\");\r\n\tdocument.cookie=\"doctor=s%3A61344e7d5ab0234c08963547.MJFSeBJXy%2Be4E2LBp8bGcixhbXlBQcnWGiFH9Dvxdtk;Path=/\";\r\n\t//document.cookie=\"patient=s%3A61344e7d5ab0234c08963548.Mkq%2F5%2F80fZsHlF3xdc4UknzdTu%2F%2FCVJaLwhlw2toYY4;Path=/\";\r\n\tconsole.log(document.cookie);\r\n\tconsole.log(\"///////////////////////////////\");\r\n  const queryParams = useQueryParams();\r\n  const initRef = useRef(() => {\r\n    const userName = queryParams.get(\"userName\");\r\n    if (userName) {\r\n      setUserName(userName);\r\n      handleNextButtonClick(userName);\r\n    }\r\n  });\r\n  useEffect(() => {\r\n    initRef.current();\r\n  }, []);\r\n  const handleKeyPress = (event: KeyboardEvent) => {\r\n    if (event.key === \"Enter\") {\r\n      if (isBasicInformationShown) {\r\n        handleLogInButtonClick();\r\n      } else {\r\n        handleNextButtonClick(undefined);\r\n        \r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyPress);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyPress);\r\n    };\r\n  });\r\n\r\n  const [patientLogIn] = useMutation<PatientLogIn, PatientLogInVariables>(\r\n    PATIENT_LOG_IN,\r\n    {\r\n      onCompleted: (data) => {\r\n        if (data && data.patientLogIn) {\r\n          setPatient(data.patientLogIn);\r\n        \r\n        }\r\n      },\r\n    }\r\n  );\r\n  const classes = useStyles();\r\n  const [isUserNameValidated, setIsUserNameValidated] = useState(false);\r\n  const [isNameValidated, setIsNameValidated] = useState(false);\r\n  const [getQueryResult, { loading, data: userListData }] = useLazyQuery<\r\n    QueryUser,\r\n    QueryUserVariables\r\n  >(QUERY_USER, {\r\n    fetchPolicy: \"no-cache\",\r\n    onCompleted: (data) => {\r\n      if (data.queryUser.total > 0) {\r\n        const userInfo = data.queryUser.users[0];\r\n        userInfo.name && setName(userInfo.name);\r\n        userInfo.gender && setGender(userInfo.gender);\r\n        userInfo.age && setAge(userInfo.age);\r\n        userInfo.education && setEducation(userInfo.education);\r\n        userInfo.jobStatus && setJobStatus(userInfo.jobStatus);\r\n        userInfo.marriageStatus && setMarriageStatus(userInfo.marriageStatus);\r\n        setShowLoadSuccess(true);\r\n      } else {\r\n        setName(\"\");\r\n        setGender(\"\");\r\n        setAge(\"\");\r\n        setEducation(\"\");\r\n        setJobStatus(\"\");\r\n        setMarriageStatus(\"\");\r\n      }\r\n    },\r\n  });\r\n  const [isBasicInformationShown, setIsBasicInformationShown] = useState(false);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const [education, setEducation] = useState(\"\");\r\n  const [jobStatus, setJobStatus] = useState(\"\");\r\n  const [marriageStatus, setMarriageStatus] = useState(\"\");\r\n  const onNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setName(e.target.value);\r\n  };\r\n  const onGenderChange = (\r\n    e: React.ChangeEvent<{\r\n      name?: string | undefined;\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setGender(e.target.value as string);\r\n  };\r\n  const onAgeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAge(e.target.value);\r\n  };\r\n  const [showLoadSuccess, setShowLoadSuccess] = useState(false);\r\n  const handleCloseLoadSuccess = () => {\r\n    setShowLoadSuccess(false);\r\n  };\r\n  const handleUserNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUserName(e.target.value);\r\n  };\r\n  const [showNameErrorMessage, setShowNameErrorMessage] = useState(false);\r\n  const handleCloseNameErrorMessage = () => {\r\n    setShowNameErrorMessage(false);\r\n  };\r\n  const onEducationChange = (\r\n    e: React.ChangeEvent<{\r\n      name?: string | undefined;\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setEducation(e.target.value as string);\r\n  };\r\n  const onMarriageStatusChange = (\r\n    e: React.ChangeEvent<{\r\n      name?: string | undefined;\r\n      value: unknown;\r\n    }>\r\n  ) => {\r\n    setMarriageStatus(e.target.value as string);\r\n  };\r\n  const onJobChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setJobStatus(e.target.value);\r\n  };\r\n  const handleNextButtonClick = async (\r\n    userNameFromQueryParams: string | undefined\r\n  ) => {  \t\r\n  \t\r\n    if (!isBasicInformationShown) {\r\n      if (userName || userNameFromQueryParams) {\r\n        await getQueryResult({\r\n          variables: {\r\n            userName: userNameFromQueryParams\r\n              ? userNameFromQueryParams\r\n              : userName,\r\n            limit: 1,\r\n            currentPageIndex: 0,\r\n          },\r\n        });\r\n        setIsBasicInformationShown(true);\r\n      } else {\r\n        // Show the userName cannot be empty error.\r\n        setIsUserNameValidated(true);\r\n      }\r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    setIsBasicInformationShown(false);\r\n  };\r\n  const history = useHistory();\r\n  const handleLogInButtonClick = async () => {\r\n    if (name) {\r\n      await patientLogIn({\r\n        variables: {\r\n          input: {\r\n            userName,\r\n            education,\r\n            name: name.trim(),\r\n            age: age !== \"\" ? Number(age) : undefined,\r\n            gender,\r\n            jobStatus,\r\n            marriageStatus,\r\n          },\r\n        },\r\n      });\r\n      history.push(\"/user/prompt\");\r\n    } else {\r\n      setIsNameValidated(true);\r\n      setShowNameErrorMessage(true);\r\n    }\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <ReturnToHomeHeader />\r\n      {isBasicInformationShown ? (\r\n        loading ? (\r\n          <LoadingIndicator />\r\n        ) : (\r\n          <>\r\n            {userListData && userListData.queryUser.total > 0 ? (\r\n              <div className={classes.titleContainer}>\r\n                <div className={classes.title}>请核实您的个人信息</div>\r\n              </div>\r\n            ) : (\r\n              <div className={classes.titleContainer}>\r\n                <div className={classes.title}>请输入您的个人信息</div>\r\n              </div>\r\n            )}\r\n            <div className={classes.personalInformationContainer}>\r\n              <div>\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <AccountCircle />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      label=\"姓名\"\r\n                      className={classes.input}\r\n                      required\r\n                      value={name}\r\n                      onChange={onNameChange}\r\n                      error={isNameValidated && !name ? true : false}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n              <div>\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <WcIcon />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <FormControl size=\"small\" className={classes.input}>\r\n                      <InputLabel>性别</InputLabel>\r\n                      <Select\r\n                        color=\"primary\"\r\n                        label=\"性别\"\r\n                        onChange={onGenderChange}\r\n                        value={gender}\r\n                      >\r\n                        <MenuItem value=\"男\">男</MenuItem>\r\n                        <MenuItem value=\"女\">女</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n              <div>\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <AccessibilityIcon />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      className={classes.input}\r\n                      color=\"primary\"\r\n                      label=\"年龄\"\r\n                      size=\"small\"\r\n                      type=\"number\"\r\n                      value={age}\r\n                      onChange={onAgeChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n              <div>\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <ChildCareIcon />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <FormControl size=\"small\" className={classes.input}>\r\n                      <InputLabel>婚姻</InputLabel>\r\n                      <Select\r\n                        color=\"primary\"\r\n                        value={marriageStatus}\r\n                        onChange={onMarriageStatusChange}\r\n                      >\r\n                        <MenuItem value=\"已婚\">已婚</MenuItem>\r\n                        <MenuItem value=\"未婚\">未婚</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n              <div>\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <SchoolIcon />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <FormControl size=\"small\" className={classes.input}>\r\n                      <InputLabel>教育</InputLabel>\r\n                      <Select\r\n                        color=\"primary\"\r\n                        value={education}\r\n                        onChange={onEducationChange}\r\n                      >\r\n                        <MenuItem value=\"高中以下\">高中以下</MenuItem>\r\n                        <MenuItem value=\"大中专科\">大中专科</MenuItem>\r\n                        <MenuItem value=\"本科\">本科</MenuItem>\r\n                        <MenuItem value=\"硕士\">硕士</MenuItem>\r\n                        <MenuItem value=\"博士\">博士</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n              <div>\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                  <Grid item>\r\n                    <WorkIcon />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      color=\"primary\"\r\n                      label=\"职业\"\r\n                      size=\"small\"\r\n                      className={classes.input}\r\n                      value={jobStatus}\r\n                      onChange={onJobChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )\r\n      ) : (\r\n        <>\r\n          <div className={classes.titleContainer}>\r\n            <div className={classes.title}>请输入您的工号</div>\r\n          </div>\r\n          <div className={classes.inputContainer}>\r\n            <TextField\r\n              label=\"工号\"\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <AssignmentIndIcon />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              value={userName}\r\n              onChange={handleUserNameChange}\r\n              autoFocus\r\n              error={isUserNameValidated && !userName ? true : undefined}\r\n              helperText={\r\n                isUserNameValidated && !userName\r\n                  ? \"请输入您的工号\"\r\n                  : undefined\r\n              }\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n      {isBasicInformationShown ? (\r\n        loading ? null : (\r\n          <div className={classes.actionsWrapper}>\r\n            <div className={classes.actionsContainer}>\r\n              <Button onClick={handleCancel}>取消</Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleLogInButtonClick}\r\n              >\r\n                确定\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )\r\n      ) : (\r\n        <div className={classes.buttonContainer}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            endIcon={<NavigateNextIcon />}\r\n            onClick={() => handleNextButtonClick(undefined)\r\n            }\r\n          >\r\n            下一步\r\n          </Button>\r\n        </div>\r\n      )}\r\n      <Snackbar\r\n        open={showLoadSuccess}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseLoadSuccess}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleCloseLoadSuccess}\r\n          severity=\"success\"\r\n          variant=\"filled\"\r\n        >\r\n          成功载入您的个人信息\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        open={showNameErrorMessage}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseNameErrorMessage}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleCloseNameErrorMessage}\r\n          severity=\"error\"\r\n          variant=\"filled\"\r\n        >\r\n          姓名为必填项！\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n","/**\r\n * @author Qiuran Hu\r\n * @email qiuranh@gmail.com\r\n * @create date 2021-04-26 10:50:05\r\n * @modify date 2021-04-26 10:50:05\r\n * @desc [description]\r\n */\r\nimport \"@fontsource/noto-sans-sc/400.css\";\r\nimport {\r\n  ApolloClient,\r\n  ApolloProvider,\r\n  InMemoryCache,\r\n  useMutation,\r\n  HttpLink,\r\n} from \"@apollo/client\";\r\nimport { onError } from \"@apollo/client/link/error\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { DOCTOR_LOG_IN } from \"./lib/graphql/mutations\";\r\nimport { Doctor, Patient, Viewer } from \"./lib/type\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport {\r\n  AppHeader,\r\n  Sider,\r\n  Home,\r\n  Login,\r\n  Form,\r\n  Report,\r\n  PatientInformation,\r\n  Welcome,\r\n  PromptMessage,\r\n  PatientLogin,\r\n  SecondLogin,\r\n  CreateDoctor,\r\n  DoctorConfig,\r\n} from \"./sections\";\r\nimport {\r\n  createMuiTheme,\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  ThemeProvider,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\nimport { PrivateRoute } from \"./lib/components/PrivateRoute\";\r\nimport { LoadingIndicator } from \"./lib/components\";\r\nimport { zhCN } from \"@material-ui/core/locale\";\r\nimport {\r\n  DoctorLogIn,\r\n  DoctorLogInVariables,\r\n} from \"./lib/graphql/mutations/DoctorLogIn/__generated__/DoctorLogIn\";\r\nimport {\r\n  PatientLogIn,\r\n  PatientLogInVariables,\r\n} from \"./lib/graphql/mutations/PatientLogIn/__generated__/PatientLogIn\";\r\nimport { PATIENT_LOG_IN } from \"./lib/graphql/mutations/PatientLogIn\";\r\nimport \"fontsource-roboto\";\r\nimport {\r\n  NO_DOCTOR_LOGIN_ERROR_MESSAGE,\r\n  NO_PATIENT_LOGIN_ERROR_MESSAGE,\r\n} from \"./lib/utils/constants\";\r\n\r\nconst httpLink = new HttpLink({ uri: \"/api\" });\r\n\r\nconst logoutLink = onError((errorHandler) => {\r\n  const graphQLErrors = errorHandler.graphQLErrors;\r\n  if (graphQLErrors)\r\n    for (let error of graphQLErrors) {\r\n      if (\r\n        error.message === NO_DOCTOR_LOGIN_ERROR_MESSAGE ||\r\n        error.message === NO_PATIENT_LOGIN_ERROR_MESSAGE\r\n      ) {\r\n        // eslint-disable-next-line no-restricted-globals\r\n        location.reload();\r\n        return;\r\n      }\r\n    }\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"/api\",\r\n  cache: new InMemoryCache(),\r\n  link: logoutLink.concat(httpLink),\r\n  headers: { \"X-CSRF_TOKEN\": sessionStorage.getItem(\"token\") || \"\" },\r\n});\r\n\r\nconst initialViewer: Viewer = {\r\n  userName: null,\r\n  token: null,\r\n  didRequest: false,\r\n  catelogy: null,\r\n};\r\n\r\nconst initialDoctor: Doctor = {\r\n  name: null,\r\n  userName: null,\r\n  didRequest: false,\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      height: \"100%\",\r\n    },\r\n    contentContainer: {\r\n      flexGrow: 1,\r\n      height: \"100%\",\r\n    },\r\n  })\r\n);\r\n\r\nexport const PRIMARY_COLOR = \"#1a73e8\";\r\nconst App = () => {\r\n  const classes = useStyles();\r\n\r\n  // const [viewer, setViewer] = useState<Viewer>(initialViewer);\r\n  const [doctor, setDoctor] = useState<Doctor>(initialDoctor);\r\n  const [patient, setPatient] = useState<Patient>(initialViewer);\r\n  const [isSiderOpen, setIsSiderOpen] = useState(false);\r\n  // const [logIn] = useMutation<LogInData, LogInVariables>(LOG_IN, {\r\n  //   onCompleted: (data) => {\r\n  //     if (data && data.logIn) {\r\n  //       setViewer(data.logIn);\r\n  //       if (data.logIn.token) {\r\n  //         sessionStorage.setItem(\"token\", data.logIn.token);\r\n  //       } else {\r\n  //         sessionStorage.removeItem(\"token\");\r\n  //       }\r\n  //     }\r\n  //   },\r\n  // });\r\n  // const logInRef = useRef(logIn);\r\n  const [doctorLogIn, { loading: doctorLogInLoading }] = useMutation<\r\n    DoctorLogIn,\r\n    DoctorLogInVariables\r\n  >(DOCTOR_LOG_IN, {\r\n    onCompleted: (data) => {\r\n      if (data && data.doctorLogIn) {\r\n        const { name, userName, didRequest } = data.doctorLogIn;\r\n        setDoctor({\r\n          name,\r\n          userName,\r\n          didRequest,\r\n        });\r\n      }\r\n    },\r\n  });\r\n  const doctorLogInRef = useRef(doctorLogIn);\r\n\r\n  const [patientLogIn, { loading: patientLogInLoading }] = useMutation<\r\n    PatientLogIn,\r\n    PatientLogInVariables\r\n  >(PATIENT_LOG_IN, {\r\n    onCompleted: (data) => {\r\n      if (data && data.patientLogIn) {\r\n        setPatient(data.patientLogIn);\r\n      }\r\n    },\r\n  });\r\n\r\n  const patientLogInRef = useRef(patientLogIn);\r\n  useEffect(() => {\r\n    doctorLogInRef.current();\r\n    // logInRef.current();\r\n    patientLogInRef.current();\r\n  }, []);\r\n  if (\r\n    doctorLogInLoading ||\r\n    !doctor.didRequest ||\r\n    patientLogInLoading ||\r\n    !patient.didRequest\r\n  ) {\r\n    return <LoadingIndicator />;\r\n  }\r\n  const isAuthorized = !!doctor.userName;\r\n  return (\r\n    <Router>\r\n      {/** App Header */}\r\n      <Switch>\r\n        <Route exact path=\"/\" />\r\n        <Route exact path=\"/user/prompt\" />\r\n        <Route exact path=\"/user/login\" />\r\n        <Route path=\"/user/home\" />\r\n        <Route path=\"/doctor\">\r\n          <AppHeader\r\n            viewer={doctor}\r\n            setViewer={setDoctor}\r\n            type=\"doctor\"\r\n            setIsSiderOpen={setIsSiderOpen}\r\n          />\r\n          <Switch>\r\n            <Route exact path=\"/\" />\r\n          </Switch>\r\n        </Route>\r\n      </Switch>\r\n\r\n      <Switch>\r\n        <Route exact path=\"/login\">\r\n          <Login\r\n            isAuthorized={isAuthorized}\r\n            setViewer={setDoctor}\r\n            setDoctor={setDoctor}\r\n            doctor={doctor}\r\n          />\r\n        </Route>\r\n        <Route\r\n          exact\r\n          path=\"/doctor\"\r\n          render={({ location }) => (\r\n            <Redirect to={{ pathname: \"user/prompt\", state: { from: location } }} />\r\n          )}\r\n        />\r\n\r\n        <PrivateRoute isAuthorized={isAuthorized} path=\"/user\" exact>\r\n          <Welcome\r\n            setDoctor={setDoctor}\r\n            doctor={doctor}\r\n            logIn={doctorLogInRef.current}\r\n          />\r\n        </PrivateRoute>\r\n        <PrivateRoute isAuthorized={isAuthorized} path=\"/user/login\" exact>\r\n          <PatientLogin setPatient={setPatient} patient={patient} />\r\n        </PrivateRoute>\r\n        <Route isAuthorized={isAuthorized} path=\"/user/secondlogin\" exact>\r\n          //<SecondLogin setPatient={setPatient} patient={patient} />\r\n          <SecondLogin setPatient={setPatient} patient={{name:\"admin\",userName:\"admin\",didRequest:true}} />\r\n        </Route>\r\n        {patient.userName && (\r\n          <PrivateRoute isAuthorized={true} path=\"/user/prompt\" exact>\r\n            <PromptMessage />\r\n          </PrivateRoute>\r\n        )}\r\n        {doctor.userName && (\r\n          <PrivateRoute\r\n            isAuthorized={isAuthorized}\r\n            path={`/doctor/${doctor.userName}`}\r\n          >\r\n            <div className={classes.root}>\r\n              <Sider\r\n                viewer={doctor}\r\n                type=\"doctor\"\r\n                open={isSiderOpen}\r\n                onClose={() => setIsSiderOpen(false)}\r\n              />\r\n              <div className={classes.contentContainer}>\r\n                <Toolbar />\r\n                <Switch>\r\n                  <Route\r\n                    exact\r\n                    path={`/doctor/${doctor.userName}`}\r\n                    component={PatientInformation}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path={`/doctor/${doctor.userName}/manage`}\r\n                    component={CreateDoctor}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path={`/doctor/${doctor.userName}/config`}\r\n                    component={DoctorConfig}\r\n                  />\r\n                </Switch>\r\n              </div>\r\n            </div>\r\n          </PrivateRoute>\r\n        )}\r\n        {doctor.userName && (\r\n          <PrivateRoute isAuthorized={isAuthorized} path=\"/doctor\">\r\n            <Redirect to=\"/doctor\" />\r\n          </PrivateRoute>\r\n        )}\r\n        {patient.userName && (\r\n          <Route isAuthorized={isAuthorized} path=\"/user\">\r\n            <AppHeader viewer={patient} setViewer={setPatient} type=\"user\" />\r\n            <Switch>\r\n              <Route isAuthorized={isAuthorized} path=\"/user/form\" exact>\r\n                <Form patient={patient} />\r\n              </Route>\r\n\r\n              <Route isAuthorized={isAuthorized} path=\"/user\">\r\n                <div className={classes.root}>\r\n                  <Sider viewer={patient} type=\"user\" />\r\n                  <div className={classes.contentContainer}>\r\n                    <Toolbar />\r\n                    <Switch>\r\n                      <Route exact path=\"/user/home\">\r\n                        <Home patient={patient} />\r\n                      </Route>\r\n                      <Route exact path=\"/user/report\">\r\n                        <Report patientName={patient.name || undefined} />\r\n                      </Route>\r\n                    </Switch>\r\n                  </div>\r\n                </div>\r\n              </Route>\r\n            </Switch>\r\n          </Route>\r\n        )}\r\n        <Route isAuthorized={isAuthorized} path=\"/user\">\r\n          <></>\r\n        </Route>\r\n        <PrivateRoute isAuthorized={isAuthorized} path=\"/doctor\">\r\n          <></>\r\n        </PrivateRoute>\r\n        <Route exact path=\"/\">\r\n          <Redirect to=\"/user\" />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nconst theme = createMuiTheme(\r\n  {\r\n    palette: {\r\n      primary: {\r\n        light: \"#6a9dff\",\r\n        main: PRIMARY_COLOR,\r\n        dark: \"#0045b5\",\r\n        contrastText: \"#fff\",\r\n      },\r\n      secondary: {\r\n        light: \"#ff7961\",\r\n        main: \"#f44336\",\r\n        dark: \"#ba000d\",\r\n        contrastText: \"#000\",\r\n      },\r\n    },\r\n  },\r\n  zhCN\r\n);\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </ApolloProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}