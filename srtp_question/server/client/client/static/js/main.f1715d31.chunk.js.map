{"version":3,"sources":["lib/graphql/mutations/Login/index.ts","lib/graphql/mutations/LogOut/index.ts","lib/graphql/mutations/CreateAccount/index.ts","lib/graphql/mutations/SaveUserAnswer/index.ts","lib/graphql/mutations/SavePartialAnswer/index.ts","lib/graphql/mutations/DoctorLogOut/index.ts","lib/graphql/mutations/DoctorLogIn/index.ts","lib/graphql/mutations/AddDiagnosis/index.ts","lib/graphql/mutations/AddDoctor/index.ts","lib/graphql/mutations/AddDoctorConfig/index.ts","lib/graphql/mutations/SelectConfig/index.ts","reportWebVitals.ts","lib/components/PrivateRoute/index.tsx","lib/components/LoadingIndicator/index.tsx","lib/components/ErrorIndicator/index.tsx","lib/components/ReportPdf/index.tsx","lib/components/ReturnToHomeHeader/index.tsx","lib/components/LineChart/index.tsx","lib/utils/constants.ts","lib/components/LineChartPopOver/index.tsx","sections/AppHeader/assets/logo.png","sections/Login/index.tsx","sections/Home/assets/cardIcon.png","lib/graphql/queries/QuestionnaireList/index.ts","lib/graphql/queries/QuestionnaireContent/index.ts","lib/graphql/queries/Report/index.ts","lib/graphql/queries/ReportForAdmin/index.ts","lib/graphql/queries/DoctorList/index.ts","lib/graphql/queries/CheckIfDoctorConfigNameUnique/index.ts","lib/graphql/queries/CheckIfDoctorNameUnique/index.ts","lib/graphql/queries/UserAnswer/index.ts","lib/graphql/queries/QueryUser/index.ts","lib/graphql/queries/DoctorConfigList/index.ts","sections/Home/components/EnterGenderAndAgeDialog/index.tsx","sections/Home/components/ChildrenEnterGenderAndAgeDialog/index.tsx","sections/Home/components/PhcssGenderAndAgeDialog/index.tsx","sections/Home/components/PsssGenderDialog/index.tsx","lib/components/SuccessIndicator/index.tsx","sections/Home/index.tsx","lib/graphql/mutations/PatientLogOut/index.ts","sections/Report/components/withReportPdfData/index.tsx","lib/graphql/globalTypes.ts","sections/AppHeader/index.tsx","sections/Sider/components/PersonalInfomation/index.tsx","sections/Sider/index.tsx","sections/Form/Components/ProgressBar/index.tsx","sections/Form/Components/Timer/index.tsx","sections/Form/Components/QuestionIndexText/index.tsx","sections/Form/Customization/embu/index.ts","sections/Form/Customization/psqi/index.tsx","sections/Form/index.tsx","sections/Form/Customization/yaleBrown/index.ts","sections/CreateAccount/index.tsx","sections/Report/index.tsx","sections/PatientInformation/components/AdditionalFieldsModal/index.tsx","sections/PatientInformation/components/SearchPatientForm/index.tsx","sections/PatientInformation/components/Header/index.tsx","sections/PatientInformation/components/LineChartsButton/index.tsx","sections/PatientInformation/components/AddDiagnosisModal/index.tsx","sections/PatientInformation/components/PatientTable/index.tsx","sections/PatientInformation/components/ChooseFormModal/index.tsx","sections/PatientInformation/components/HelpPopover/index.tsx","sections/PatientInformation/index.tsx","sections/PatientInformation/components/withReportPdfDataForAdmin/index.tsx","sections/Welcome/components/Header/index.tsx","sections/Welcome/components/DoctorLogInDialog/index.tsx","sections/Welcome/index.tsx","sections/PromptMessage/index.tsx","lib/graphql/mutations/PatientLogIn/index.ts","sections/PatientLogin/index.tsx","sections/CreateDoctor/components/AddDoctorDialog/index.tsx","sections/CreateDoctor/index.tsx","sections/DoctorConfig/components/AddConfigurationDialog/index.tsx","lib/utils/index.ts","sections/DoctorConfig/components/ConfigrationDetailDialog/index.tsx","lib/graphql/mutations/DeleteConfig/index.ts","sections/DoctorConfig/index.tsx","index.tsx"],"names":["gql","SAVE_USER_ANSWER","SAVE_PARTIAL_ANSWER","DOCTOR_LOG_OUT","DOCTOR_LOG_IN","ADD_DIAGNOSIS","ADD_DOCTOR","ADD_DOCTOR_CONFIG","SELECT_CONFIG","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","PrivateRoute","props","isAuthorized","children","rest","render","location","to","pathname","state","from","useStyles","makeStyles","theme","root","display","width","height","justifyContent","alignItems","LoadingIndicator","styles","className","CircularProgress","ErrorIndicator","showError","setShowError","errorMessage","Snackbar","open","onClose","elevation","variant","severity","pdfjs","GlobalWorkerOptions","workerSrc","createStyles","marginTop","paper","marginBottom","pdfViewer","topbar","returnButton","marginLeft","downloadButton","marginRight","printIcon","page","padding","ReportPdf","pdfData","closeReport","classes","React","useState","window","innerWidth","setWidth","updateWidth","useEffect","addEventListener","removeEventListener","numPages","setNumPages","IconButton","onClick","printJS","printable","type","base64","reader","FileReader","out","Blob","readAsDataURL","fileURL","URL","createObjectURL","a","document","createElement","href","target","download","body","appendChild","click","Divider","file","loading","onLoadSuccess","nextNumPages","Array","el","index","Paper","pageNumber","renderMode","getElementById","offsetWidth","header","overflow","actionContainer","float","paddingRight","paddingTop","fontSize","ReturnToHomeHeader","Button","color","startIcon","canvasContainer","LineChart","labelList","dataList","multipleDataList","showLabel","chartRef","useRef","initRef","current","lineChart","getContext","Chart","data","labels","datasets","label","borderColor","backgroundColor","fill","lineTension","options","tooltips","mode","intersect","hover","maintainAspectRatio","responsive","scales","yAxes","ticks","beginAtZero","plugins","datalabels","anchor","align","formatter","Math","round","id","ref","EYSCENCK_FORM_NAME","EYSCENCK_CHILDREN_FORM_NAME","YAML_BROWN_FORM_KEY","PSSS_FORM_KEY","PSQI_FORM_KEY","PHCSS_FORM_KEY","EMBU_FORM_KEY","NO_DOCTOR_LOGIN_ERROR_MESSAGE","NO_PATIENT_LOGIN_ERROR_MESSAGE","HIDE_LABEL_FORMS","HIDE_LABEL_KEYS","LineChartPopOver","formResultList","formName","formKey","fillInDateList","useMemo","map","formResult","fillInDate","resultList","Number","JSON","parse","result","total","resultObject","eTScore","pTScore","nTScore","lTScore","yaleBrownMind","yaleBrownBehavior","yaleBrownTotal","psssP","psssS","psssTotal","mdqTotal","psqiTotal","phcssTotal","listToReturn","fatherLabels","fatherColors","fatherFactorsData","embuIsFatherAnswerCompleted","embuFatherComponents","i","push","length","motherLabel","motherColors","motherFactorsData","embuIsMotherAnswerCompleted","embuMotherComponents","console","log","includes","isDialogOpen","setIsDialogOpen","size","disabled","Dialog","DialogTitle","DialogContent","logInCard","borderRadius","margin","logInText","textAlign","promptText","input","inputContainer","userNameInput","passwordInput","buttonContainer","logo","logoContainer","pageContainer","topPadding","initialAccountInfo","userName","password","Login","setDoctor","setViewer","doctor","useMutation","onCompleted","doctorLogIn","name","didRequest","setIsRedo","onError","error","setIsLogInErrorShown","doctorLoginRef","accountInfo","setAccountInfo","isNameAndPasswordValidated","setIsNameAndPasswordValidated","isLogInErrorShown","handleKeyPress","event","key","logInButtonOnClick","isRedo","detectRedoRef","history","variables","useHistory","isDoctor","Card","CardContent","src","alt","TextField","autoFocus","value","onChange","e","helperText","undefined","inputProps","QUESTIONNAIRE_LIST","QUESTIONNAIRE_CONTENT","REPORT","REPORT_FOR_ADMIN","DOCTOR_LIST","CHECK_IF_DOCTOR_CONFIG_USER_NAME_UNIQUE","CHECK_IF_DOCTOR_USER_NAME_UNIQUE","QUERY_USER","DOCTOR_CONFIG_LIST","EnterGenderAndAgeDialog","isOpen","handleClose","goToLogInPage","age","gender","DialogContentText","DialogActions","ChildrenEnterGenderAndAgeDialog","PhcssGenderAndAgeDialog","PsssGenderDialog","SuccessIndicator","showSuccess","setShowSuccess","successMessage","anchorOrigin","vertical","horizontal","content","listName","gridTemplateColumns","rowGap","columnGap","card","cardActionArea","cursor","indigo","cardIcon","unfinishedText","finishedText","questionnaireName","lineHeight","cardActionContainer","paddingLeft","noOverflow","textOverflow","whiteSpace","pageHeader","refreshButtonContainer","Home","patient","isSmallScreen","useMediaQuery","useQuery","fetchPolicy","isReport","questionnaireListError","refetch","listData","uniqueFormList","formList","formSet","Set","questionnaireList","forEach","questionnaire","has","displayedFillInDate","add","isGenderAndAgeDialogOpen","setIsGenderAndAgeDialogOpen","isChildrenGenderAndAgeDialogOpen","setIsChildrenGenderAndAgeDialogOpen","isPhcssDialogOpen","setIsPhcssDialogOpen","isPsssDialogOpen","setIsPsssDialogOpen","closeGenderAndAgeDialog","closeChildrenGenderAndAgeDialog","closePhcssDialog","isSuccessShown","setIsSuccessShown","setSuccessMessage","message","reload","reloadButtonOnClick","defaultReturn","test","nameMatchFormResult","match","abbreviationMatchFormResult","substring","abbreviation","replace","goToFormPage","formId","finishStatus","done","List","subheader","ListSubheader","ListItem","button","ListItemAvatar","CardIcon","ListItemText","primary","secondary","CardActionArea","CardActions","WrappedComponent","UsersFilter","PATIENT_LOG_OUT","flexGrow","zIndex","drawer","spacing","maxWidth","maxHeight","title","timerHeader","AppHeader","viewer","doctorLogOut","sessionStorage","removeItem","logOut","patientLogOut","handleLogout","isSiderPermanent","path","exact","AppBar","position","Toolbar","edge","aria-label","setIsSiderOpen","propertyName","propertyDivider","fields","displayNames","PersonalInformation","field","validIndexes","validIndex","flexShrink","personalInfoCard","personalInfoCardContent","paddingBottom","personalInfoText","fontWeight","drawerPaper","idChip","adminMenu","adminMenuHeader","link","Sider","useLocation","isPermanent","Drawer","ListItemIcon","Chip","icon","PROGRESS_BAR_WIDTH","finished","leftCircle","circle","circlewrapper","rightCircle","rightCircleWrapper","ProgressBar","totalNumber","currentIndex","widthOfFinishedPart","style","timeNumber","userSelect","WebkitUserSelect","WebkitTouchCallout","KhtmlUserSelect","MozUserSelect","msUserSelect","Timer","seconds","setSeconds","interval","setTimeout","clearTimeout","hour","floor","minute","second","CHINESE_INDEXES","QuestionIndexText","text","totalSize","String","embuRadioButtonOnClick","currentQuestionIndex","selectChoiceLockRef","choiceDisabled","answers","setAnswers","setIsNextButtonDisabled","setCurrentQuestionIndex","timeoutRef","setIsAllowedToSubmit","needAddOne","newAnswers","questions","timeout","embuValidationAll","questionNumber","setIsErrorDialogShown","setErrorDialogMessage","setErrorDialogQuestionIndex","isAllEvenQuestionAnswered","isAllOddQuestionAnswered","isAllEvenQuestionNotAnswered","isAllOddQuestionNotAnswered","firstUndefinedIndex","psqiValidation","setErrorMessage","formContainer","form","titleCard","titleCardColor","borderTopLeftRadius","borderTopRightRadius","PRIMARY_COLOR","titleCardContent","titleCardMainText","questionCard","questionText","questionOptionText","buttonWithRightMargin","homeLink","exitButton","right","bottom","timerContaner","left","footer","progressWrapper","progressWrapperForSmallScreen","questionParent","answerInput","embuRadioContainer","Form","URLSearchParams","search","get","partialAnswer","initChoiceDisabled","question","choices","_choice","setChoiceDisabled","newChoiceDisabled","autoChooseChoiceIndex","yaleBrownInitialLoad","localPartialAnswer","localStorage","getItem","answerObject","Date","date","answerArray","unfinishedQuestionIndex","answer","min","embuLoadPartialAnswers","saveUserAnswer","setIsDone","savePartialAnswer","saveUserAnswerRef","savePartialAnswerRef","autoSaveTimeoutRef","isDone","isAllowedToSubmit","isNextButtonDisabled","confirmed","setConfirmed","isErrorShown","setIsErrorShown","isErrorDialogShown","errorDialogMessage","errorDialogQuestionIndex","getAnswerArray","useCallback","numberOfQuestions","savePartialAnswerToBackend","questionnaireId","Promise","resolve","savePartialAnswerToLocalStorage","setItem","stringify","time","closeConfirmDialog","validation","all","onNextButtonClick","onSubmit","onBackButtonClick","goToHome","handleExitButtonClick","radioButtonOnClick","questionIndex","autoChooseChoices","yaleBrownCustomization","currentQuestionnIndex","choice","yaleBrownSkipQuestions","checkNextButtonShouldDisable","embuShouldDisableNextButton","currentQuestion","Link","preventDefault","parent","split","FormControl","component","FormControlLabel","control","Radio","checked","FormLabel","Fab","instruction","createAccountCard","createAccountText","formClassifyText","PdfViewer","userAnswerIds","report","pdf","questionnaireTable","doneIcon","Report","count","setNumberOfFinishedQuestionnaires","newselectedUserAnswers","userAnswerId","setSelectedUserAnswers","selectedUserAnswers","numberOfFinishedQuestionnaires","isReportVisible","setIsReportVisible","TableContainer","Table","aira-label","TableHead","TableRow","TableCell","Checkbox","TableBody","delete","selectQuestionnaire","CheckCircleOutline","ADDITIONAL_FIELD_KEYS","ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES","removeElementFromArray","array","element","newArray","currentElement","AdditionalFieldsModal","handleDialogClose","additionalFields","setAdditionalFields","aria-labelledby","displayName","fieldKey","AGE_NEGATIVE_ERROR_MESSAGE","rangeWrapper","ageRangeInput","dateRangeWrapper","ageRangeWrapper","dateRangeInput","ageInputIconWrapper","buttonWrapper","extraFieldsWrapper","searchButton","whiteButton","rangeFormWrapper","ageInputIcon","chip","additionalFieldButton","datePickerProps","format","okLabel","cancelLabel","invalidLabel","maxDateMessage","minDateMessage","invalidDateMessage","SearchPatientForm","forwardRef","searchPatients","limit","setCurrentPageIndex","currentPageIndex","filter","setUserName","setName","setGender","max","ageRange","setAgeRange","dateRange","setDateRange","onlyMyPatient","setOnlyMyPatient","errorField","setErrorField","isAdditionalFieldsModalOpen","setIsAdditionalFieldsModalOpen","handleSearchButtonClick","minSignUpDate","year","getFullYear","month","getMonth","day","getDate","maxSignUpDate","useImperativeHandle","noValidate","autoComplete","InputLabel","Select","MenuItem","newMinAge","newMaxAge","utils","DateFnsUtils","locale","cnLocale","DatePicker","_value","onDelete","INITAL_ONLY_MY_PATIENT","Header","LineChartsButton","finishedForms","isButtonDisabled","newResultList","reverse","setIsOpen","closeModal","diagnosisText","minWidth","AddDiagnosisModal","patientName","patientId","addDiagnosis","setDiagnosis","diagnosis","handleComfirm","indexOf","fullWidth","shrink","option","loadingIndicatorWrapper","reportButton","lineChartsButtonContainer","tableCell","iconMargin","tableColumnTexts","tableColumns","tableMinWidth","tableMaxWidth","PatientTable","patientList","selectedUserAnswerIds","setSelectedUserId","setSelectedUserAnswerIds","setIsReportShown","handleLimitChange","handleCurrentPageIndexChange","handleSortChange","isChooseFormModalShown","setIsChooseFormModalShown","finishedFormList","setFinishedFormList","isAddDiagnosisModalShown","setIsAddDiagnosisModalShown","addDiagnosisPatientId","setAddDiagnosisPatientId","addDiagnosisPatientName","setAddDiagnosisPatientName","handleEditDiagnosisButtonClick","queryUser","users","TablePagination","rowsPerPage","rowsPerPageOptions","onChangePage","_event","onChangeRowsPerPage","labelDisplayedRows","ceil","TableSortLabel","active","direction","DATE_LATEST","patientInformation","isReportButtonDisabled","column","userId","finishedForm","handleReportButtonClick","onOkButtonClick","popover","pointerEvents","ChooseFormModal","aria-describedby","currentUserAnswerId","doctorName","hiddenContent","reportForAdmin","withReportPdfDataForAdmin","PatientInformation","useLazyQuery","getQueryResult","userListData","searchFormRef","setLimit","setFilter","selectedUserId","isReportShown","getQueryResultRef","searchParams","setSearchParams","isPdfViewerShown","Boolean","params","newFilter","DATE_OLDEST","welcomeMessage","DoctorLogInDialog","handleClickLogIn","handleDoctorLogIn","hideErrorIndicator","setPassword","hideError","handleClickCancel","Grid","container","item","background","minHeight","flexDirection","enterSystemButtonContainer","extendedIcon","seuText","Welcome","logIn","doctorLogInDialogRef","logInResult","titleWrapper","promptTextContainer","titleContainer","PromptMessage","endIcon","PATIENT_LOG_IN","personalInformationContainer","actionsWrapper","actionsContainer","PatientLogin","setPatient","queryParams","handleNextButtonClick","isBasicInformationShown","handleLogInButtonClick","patientLogIn","isUserNameValidated","setIsUserNameValidated","isNameValidated","setIsNameValidated","userInfo","setAge","education","setEducation","jobStatus","setJobStatus","marriageStatus","setMarriageStatus","setShowLoadSuccess","setIsBasicInformationShown","showLoadSuccess","handleCloseLoadSuccess","showNameErrorMessage","setShowNameErrorMessage","handleCloseNameErrorMessage","userNameFromQueryParams","required","InputProps","startAdornment","InputAdornment","autoHideDuration","Alert","AddDoctorDialog","closeDialog","checkDoctorUserName","checkResult","addDoctor","refetchListData","setUserNameInput","nameInput","setNameInput","setPasswordInput","secondPasswordInput","setSecondPasswordInput","userNameDuplicate","setUserNameDubplicate","debouncedCheckDoctorUserName","debounce","checkIfDoctorUserNameUnique","handleAddButtonClick","list","paginationContainer","totalNumberText","avatar","blue","CreateDoctor","checkDoctorName","checkNameData","isAddDoctorDialogOpen","setIsAddDoctorDialogOpen","doctorList","Pagination","pageIndex","admins","admin","Fragment","Avatar","AddConfigurationDialog","checkConfigName","checkConfigNameResult","addDoctorConfig","debouncedCheckConfigName","func","waitTime","args","later","checkedFormIds","setCheckedFormIds","checkIfDoctorConfigNameUnique","doctorConfigName","ListItemSecondaryAction","Switch","currentId","configName","selected","formIds","addResult","ConfirationDetailDialog","config","DELETE_CONFIG","configCard","configNameContainer","settingIcon","configPromptMessage","inUseText","resetButton","cardDescription","deleteButton","DoctorConfig","isAddConfigDialogOpen","setIsAddConfigDialogOpen","selectedConfig","setSelectedConfig","isConfigrationDetailDialogOpen","setIsConfigrationDetailDialogOpen","configList","configListLoading","showAll","formListData","selectConfig","deleteConfig","currentlyUsedConfig","configInUseList","doctorConfigList","configs","configId","disableRipple","client","ApolloClient","uri","cache","InMemoryCache","headers","initialViewer","token","catelogy","initialDoctor","contentContainer","App","isSiderOpen","doctorLogInLoading","doctorLogInRef","patientLogInLoading","patientLogInRef","createMuiTheme","palette","light","main","dark","contrastText","zhCN","ReactDOM","ThemeProvider"],"mappings":"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","file":"static/js/main.f1715d31.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const LOG_IN = gql`\n  mutation LogIn($input: LogInInput) {\n    logIn(input: $input) {\n      ... on UserViewer {\n        token\n        name\n        userName\n        gender\n        education\n        jobStatus\n        age\n        marriageStatus\n        didRequest\n        catelogy\n      }\n      ... on AdminViewer {\n        name\n        userName\n        didRequest\n        token\n        catelogy\n      }\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const LOG_OUT = gql`\n  mutation Logout {\n    logOut {\n      ... on UserViewer {\n        id\n        token\n        didRequest\n        catelogy\n      }\n      ... on AdminViewer {\n        id\n        token\n        didRequest\n        catelogy\n      }\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const CREATE_ACCOUNT = gql`\n  mutation CreateAccount($input: CreateAccountInput) {\n    createAccount(input: $input) {\n      token\n      name\n      userName\n      gender\n      education\n      jobStatus\n      marriageStatus\n      didRequest\n      age\n      catelogy\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const SAVE_USER_ANSWER = gql`\n  mutation SaveUserAnswer($input: UserAnswerInput) {\n    saveUserAnswer(input: $input) {\n      didRequest\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const SAVE_PARTIAL_ANSWER = gql`\n  mutation SavePartialAnswer($input: UserAnswerInput) {\n    savePartialAnswer(input: $input) {\n      didRequest\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const DOCTOR_LOG_OUT = gql`\n  mutation DoctorLogOut {\n    doctorLogOut {\n      didRequest\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const DOCTOR_LOG_IN = gql`\n  mutation DoctorLogIn($input: DoctorLoginInput) {\n    doctorLogIn(input: $input) {\n      name\n      userName\n      didRequest\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const ADD_DIAGNOSIS = gql`\n  mutation AddDiagnosis($input: AddDiagnosisInput) {\n    addDiagnosis(input: $input) {\n      result\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const ADD_DOCTOR = gql`\n  mutation AddDoctor($input: AddDoctorInput) {\n    addDoctor(input: $input) {\n      result\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const ADD_DOCTOR_CONFIG = gql`\n  mutation AddDoctorConfig($input: DoctorConfigInput) {\n    addDoctorConfig(input: $input) {\n      result\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const SELECT_CONFIG = gql`\n  mutation SelectConfig($input: SelectConfigInput) {\n    selectConfig(input: $input) {\n      result\n    }\n  }\n`;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { ReactNode } from \"react\";\nimport { Redirect, Route, RouteProps } from \"react-router-dom\";\n\ninterface Props extends RouteProps {\n  isAuthorized: boolean;\n  children: ReactNode;\n}\n\nexport const PrivateRoute = (props: Props) => {\n  const { isAuthorized, children, ...rest } = props;\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuthorized ? (\n          children\n        ) : (\n          <Redirect to={{ pathname: \"/login\", state: { from: location } }} />\n        )\n      }\n    />\n  );\n};\n","import { CircularProgress, makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}));\nexport const LoadingIndicator = () => {\n  const styles = useStyles();\n  return (\n    <div className={styles.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n","import { Snackbar } from \"@material-ui/core\";\nimport React from \"react\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\ninterface Props {\n  showError: boolean;\n  setShowError: (showError: boolean) => void;\n  errorMessage: string;\n}\n\nexport const ErrorIndicator = (props: Props) => {\n  const { showError, setShowError, errorMessage } = props;\n  return (\n    <Snackbar open={showError} onClose={() => setShowError(false)}>\n      <MuiAlert\n        elevation={6}\n        variant=\"filled\"\n        severity=\"error\"\n        onClose={() => setShowError(false)}\n      >\n        {errorMessage}\n      </MuiAlert>\n    </Snackbar>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Document, Page } from \"react-pdf\";\nimport { pdfjs } from \"react-pdf\";\nimport {\n  createStyles,\n  Divider,\n  IconButton,\n  makeStyles,\n  Paper,\n  Theme,\n} from \"@material-ui/core\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport printJS from \"print-js\";\nimport PrintIcon from \"@material-ui/icons/Print\";\n\npdfjs.GlobalWorkerOptions.workerSrc = \"/pdf.worker.js\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      marginTop: 10,\n    },\n    paper: {\n      marginBottom: 10,\n    },\n    pdfViewer: {},\n    topbar: {\n      height: 48,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n    },\n    returnButton: {\n      marginLeft: 5,\n    },\n    downloadButton: {\n      marginRight: 5,\n    },\n    printIcon: {},\n    page: {\n      padding: 3,\n    },\n  })\n);\n\ninterface Props {\n  pdfData: string;\n  closeReport: () => void;\n}\n\nexport const ReportPdf = ({ pdfData, closeReport }: Props) => {\n  const classes = useStyles();\n\n  const [width, setWidth] = React.useState(window.innerWidth);\n\n  const updateWidth = () => {\n    if (window.innerWidth !== width) setWidth(window.innerWidth);\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateWidth);\n    return () => window.removeEventListener(\"resize\", updateWidth);\n  });\n  const printReport = () => {\n    printJS({\n      printable: `${pdfData}`,\n      type: \"pdf\",\n      base64: true,\n    });\n  };\n  const [numPages, setNumPages] = useState<number>(0);\n  const onDocumentLoadSuccess = ({\n    numPages: nextNumPages,\n  }: {\n    numPages: number;\n  }) => {\n    setNumPages(nextNumPages);\n  };\n\n  return (\n    <>\n      <div>\n        <div className={classes.topbar}>\n          <IconButton onClick={closeReport} className={classes.returnButton}>\n            <ArrowBackIcon />\n          </IconButton>\n          <div>\n            <IconButton className={classes.printIcon} onClick={printReport}>\n              <PrintIcon />\n            </IconButton>\n            {/* <a\n              // download=\"心理评估报告单\"\n              // href={`data:application/pdf;base64,${pdfData}`}\n              // title=\"下载心理评估报告单\"\n              // target=\"_blank\"\n              // rel=\"noreferrer\"\n              \n            > */}\n            <IconButton\n              className={classes.downloadButton}\n              onClick={() => {\n                const reader = new FileReader();\n                const out = new Blob([pdfData], {\n                  type: \"application/pdf\",\n                });\n                // reader.onload = function (e) {\n                //   if (reader.result)\n                //     window.location.href = reader.result as string;\n                // };\n                reader.readAsDataURL(out);\n                const fileURL = URL.createObjectURL(out);\n                const a = document.createElement(\"a\");\n                a.href = fileURL;\n                a.target = \"_blank\";\n                a.download = \"心理评估报告单.pdf\";\n                document.body.appendChild(a);\n                a.click();\n              }}\n            >\n              <CloudDownloadIcon />\n            </IconButton>\n            {/* </a> */}\n          </div>\n        </div>\n        <Divider />\n      </div>\n      <div className={classes.root}>\n        <Document\n          file={`data:application/pdf;base64,${pdfData}`}\n          loading={<div></div>}\n          className={classes.pdfViewer}\n          onLoadSuccess={onDocumentLoadSuccess}\n        >\n          {Array.from(new Array(numPages), (el, index) => (\n            <Paper elevation={3} className={classes.paper} key={index}>\n              <Page\n                pageNumber={index + 1}\n                loading={<></>}\n                renderMode=\"svg\"\n                width={\n                  document.getElementById(\"root\")\n                    ? (document.getElementById(\"root\")!.offsetWidth > 750\n                        ? document.getElementById(\"root\")!.offsetWidth - 240\n                        : document.getElementById(\"root\")!.offsetWidth) * 0.8\n                    : 1000\n                }\n              />\n            </Paper>\n          ))}\n        </Document>\n      </div>\n    </>\n  );\n};\n","import { makeStyles, Theme, createStyles, Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport HomeIcon from \"@material-ui/icons/Home\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    header: {\n      overflow: \"hidden\",\n    },\n    actionContainer: {\n      float: \"right\",\n      paddingRight: 10,\n      paddingTop: 10,\n      fontSize: \"0.875rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n  })\n);\nexport const ReturnToHomeHeader = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.header}>\n      <span className={classes.actionContainer}>\n        <Link to=\"/\">\n          <Button color=\"secondary\" startIcon={<HomeIcon />}>\n            返回主页\n          </Button>\n        </Link>\n      </span>\n    </div>\n  );\n};\n","import React, { useEffect, useRef } from \"react\";\nimport Chart, { ChartDataSets } from \"chart.js\";\nimport \"chartjs-plugin-datalabels\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core\";\n\ninterface Props {\n  labelList: string[];\n  dataList?: number[];\n  multipleDataList?: ChartDataSets[];\n  showLabel: boolean;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    canvasContainer: {\n      width: 550,\n      height: 400,\n    },\n  })\n);\n\nexport const LineChart = ({\n  labelList,\n  dataList,\n  multipleDataList,\n  showLabel,\n}: Props) => {\n  const classes = useStyles();\n  const chartRef = useRef<HTMLCanvasElement>(null);\n  const init = () => {\n    if (chartRef.current) {\n      const lineChart = chartRef.current.getContext(\"2d\");\n      if (lineChart)\n        new Chart(lineChart, {\n          type: \"line\",\n          data: {\n            //Bring in data\n            labels: labelList,\n            datasets: multipleDataList\n              ? multipleDataList\n              : [\n                  {\n                    label: \"得分\",\n                    data: dataList,\n                    borderColor: \"#0d47a1\",\n                    backgroundColor: \"#bbdefb\",\n                    fill: false,\n                    lineTension: 0,\n                  },\n                ],\n          },\n          options: {\n            tooltips: {\n              mode: \"index\",\n              intersect: false,\n            },\n            hover: {\n              mode: \"nearest\",\n              intersect: true,\n            },\n            maintainAspectRatio: false,\n            responsive: true,\n            scales: {\n              yAxes: [\n                {\n                  ticks: {\n                    beginAtZero: true,\n                  },\n                },\n              ],\n            },\n            plugins: {\n              datalabels: {\n                anchor: \"start\",\n                align: \"top\",\n                formatter: Math.round,\n                display: showLabel ? true : false,\n              },\n            },\n          },\n        });\n    }\n  };\n  const initRef = useRef(init);\n  useEffect(() => {\n    initRef.current();\n  }, []);\n  return (\n    <div className={classes.canvasContainer}>\n      <canvas id=\"line-chart\" ref={chartRef} />\n    </div>\n  );\n};\n","export const EYSCENCK_FORM_NAME = \"艾森克个性测试（EPQ）\";\nexport const EYSCENCK_CHILDREN_FORM_NAME = \"艾森克个性测试儿童版（EPQ）\";\nexport const SCL_90_NAME = \"90项症状清单（SCL-90）\";\nexport const YAML_BROWN_FORM_KEY = \"yale-brown\";\nexport const PSSS_FORM_KEY = \"psss\";\nexport const MDQ_FORM_KEY = \"mdq\";\nexport const PSQI_FORM_KEY = \"psqi\";\nexport const PHCSS_FORM_KEY = \"phcss\";\nexport const EMBU_FORM_KEY = \"embu\";\nexport const NO_DOCTOR_LOGIN_ERROR_MESSAGE = \"No doctor login!\";\nexport const NO_PATIENT_LOGIN_ERROR_MESSAGE = \"No patient login!\";\n","import {\n  Button,\n  // createStyles,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  // makeStyles,\n  // Theme,\n} from \"@material-ui/core\";\nimport React, { useMemo, useState } from \"react\";\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport {\n  EysenckFormResult,\n  MdqResult,\n  PsqiResult,\n  PsssResult,\n  YamlBrownResult,\n  PhcssResult,\n  EmbuResult,\n} from \"./type\";\nimport { ChartDataSets } from \"chart.js\";\nimport {\n  EMBU_FORM_KEY,\n  EYSCENCK_CHILDREN_FORM_NAME,\n  EYSCENCK_FORM_NAME,\n  MDQ_FORM_KEY,\n  PHCSS_FORM_KEY,\n  PSQI_FORM_KEY,\n  PSSS_FORM_KEY,\n  SCL_90_NAME,\n  YAML_BROWN_FORM_KEY,\n} from \"../../utils/constants\";\nimport { FormResult } from \"../../../sections\";\nimport { LineChart } from \"..\";\n\n// const useStyles = makeStyles((theme: Theme) => createStyles({}));\n\ninterface Props {\n  formResultList: FormResult[];\n  formName: string;\n  formKey: string;\n}\n\nconst HIDE_LABEL_FORMS = [EYSCENCK_FORM_NAME, EYSCENCK_CHILDREN_FORM_NAME];\nconst HIDE_LABEL_KEYS: string[] = [EMBU_FORM_KEY];\n\nexport const LineChartPopOver = (props: Props) => {\n  const { formResultList, formName, formKey } = props;\n  const fillInDateList = useMemo(\n    () => formResultList.map((formResult) => formResult.fillInDate),\n    [formResultList]\n  );\n  const resultList = useMemo(() => {\n    if (formName === SCL_90_NAME) {\n      return formResultList.map((formResult) =>\n        Number(JSON.parse(formResult.result).total)\n      );\n    }\n    return formResultList.map((formResult) => Number(formResult.result));\n  }, [formResultList, formName]);\n  const multipleDataList: undefined | ChartDataSets[] = useMemo(() => {\n    if (\n      formName === EYSCENCK_FORM_NAME ||\n      formName === EYSCENCK_CHILDREN_FORM_NAME\n    ) {\n      const eArray = formResultList.map((formResult) => {\n        const resultObject: EysenckFormResult = JSON.parse(formResult.result);\n        return Number(resultObject.eTScore);\n      });\n      const pArray = formResultList.map((formResult) => {\n        const resultObject: EysenckFormResult = JSON.parse(formResult.result);\n        return Number(resultObject.pTScore);\n      });\n      const nArray = formResultList.map((formResult) => {\n        const resultObject: EysenckFormResult = JSON.parse(formResult.result);\n        return Number(resultObject.nTScore);\n      });\n      const lArray = formResultList.map((formResult) => {\n        const resultObject: EysenckFormResult = JSON.parse(formResult.result);\n        return Number(resultObject.lTScore);\n      });\n      return [\n        {\n          label: \"E量表得分\",\n          data: eArray,\n          borderColor: \"#0d47a1\",\n          backgroundColor: \"#0d47a1\",\n          lineTension: 0,\n          fill: false,\n        },\n        {\n          label: \"P量表得分\",\n          data: pArray,\n          borderColor: \"#4caf50\",\n          backgroundColor: \"#4caf50\",\n          fill: false,\n          lineTension: 0,\n        },\n        {\n          label: \"N量表得分\",\n          data: nArray,\n          borderColor: \"#ffeb3b\",\n          backgroundColor: \"#ffeb3b\",\n          fill: false,\n          lineTension: 0,\n        },\n        {\n          label: \"L量表得分\",\n          data: lArray,\n          borderColor: \"#d32f2f\",\n          backgroundColor: \"#d32f2f\",\n          fill: false,\n          lineTension: 0,\n        },\n      ];\n    } else if (formKey === YAML_BROWN_FORM_KEY) {\n      const mindArray = formResultList.map((formResult) => {\n        const resultObject: YamlBrownResult = JSON.parse(formResult.result);\n        return resultObject.yaleBrownMind;\n      });\n      const behaviorArray = formResultList.map((formResult) => {\n        const resultObject: YamlBrownResult = JSON.parse(formResult.result);\n        return resultObject.yaleBrownBehavior;\n      });\n      const totalArray = formResultList.map((formResult) => {\n        const resultObject: YamlBrownResult = JSON.parse(formResult.result);\n        return resultObject.yaleBrownTotal;\n      });\n      return [\n        {\n          label: \"强迫思维部分分数\",\n          data: mindArray,\n          borderColor: \"#0d47a1\",\n          backgroundColor: \"#0d47a1\",\n          lineTension: 0,\n          fill: false,\n        },\n        {\n          label: \"强迫行为部分分数\",\n          data: behaviorArray,\n          borderColor: \"#4caf50\",\n          backgroundColor: \"#4caf50\",\n          fill: false,\n          lineTension: 0,\n        },\n        {\n          label: \"两部分总分\",\n          data: totalArray,\n          borderColor: \"#d32f2f\",\n          backgroundColor: \"#d32f2f\",\n          fill: false,\n          lineTension: 0,\n        },\n      ];\n    } else if (formKey === PSSS_FORM_KEY) {\n      const pArray = formResultList.map((formResult) => {\n        const resultObject: PsssResult = JSON.parse(formResult.result);\n        return resultObject.psssP;\n      });\n      const sArray = formResultList.map((formResult) => {\n        const resultObject: PsssResult = JSON.parse(formResult.result);\n        return resultObject.psssS;\n      });\n      const totalArray = formResultList.map((formResult) => {\n        const resultObject: PsssResult = JSON.parse(formResult.result);\n        return resultObject.psssTotal;\n      });\n      return [\n        {\n          label: \"心理（P）因子分数\",\n          data: pArray,\n          borderColor: \"#0d47a1\",\n          backgroundColor: \"#0d47a1\",\n          lineTension: 0,\n          fill: false,\n        },\n        {\n          label: \"躯体（S）因子分数\",\n          data: sArray,\n          borderColor: \"#4caf50\",\n          backgroundColor: \"#4caf50\",\n          fill: false,\n          lineTension: 0,\n        },\n        {\n          label: \"总分\",\n          data: totalArray,\n          borderColor: \"#d32f2f\",\n          backgroundColor: \"#d32f2f\",\n          fill: false,\n          lineTension: 0,\n        },\n      ];\n    } else if (formKey === MDQ_FORM_KEY) {\n      const totalArray = formResultList.map((formResult) => {\n        const resultObject: MdqResult = JSON.parse(formResult.result);\n        return resultObject.mdqTotal;\n      });\n      return [\n        {\n          label: \"总分\",\n          data: totalArray,\n          borderColor: \"#d32f2f\",\n          backgroundColor: \"#d32f2f\",\n          fill: false,\n          lineTension: 0,\n        },\n      ];\n    } else if (formKey === PSQI_FORM_KEY) {\n      const totalArray = formResultList.map((formResult) => {\n        const resultObject: PsqiResult = JSON.parse(formResult.result);\n        return resultObject.psqiTotal;\n      });\n      // const aArray = formResultList.map((formResult) => {\n      //   const resultObject: PsqiResult = JSON.parse(formResult.result);\n      //   return resultObject.psqiA;\n      // });\n      // const bArray = formResultList.map((formResult) => {\n      //   const resultObject: PsqiResult = JSON.parse(formResult.result);\n      //   return resultObject.psqiB;\n      // });\n      // const cArray = formResultList.map((formResult) => {\n      //   const resultObject: PsqiResult = JSON.parse(formResult.result);\n      //   return resultObject.psqiC;\n      // });\n      // const dArray = formResultList.map((formResult) => {\n      //   const resultObject: PsqiResult = JSON.parse(formResult.result);\n      //   return resultObject.psqiD;\n      // });\n      // const eArray = formResultList.map((formResult) => {\n      //   const resultObject: PsqiResult = JSON.parse(formResult.result);\n      //   return resultObject.psqiE;\n      // });\n      // const fArray = formResultList.map((formResult) => {\n      //   const resultObject: PsqiResult = JSON.parse(formResult.result);\n      //   return resultObject.psqiF;\n      // });\n      // const gArray = formResultList.map((formResult) => {\n      //   const resultObject: PsqiResult = JSON.parse(formResult.result);\n      //   return resultObject.psqiG;\n      // });\n      return [\n        {\n          label: \"总分\",\n          data: totalArray,\n          borderColor: \"#d32f2f\",\n          backgroundColor: \"#d32f2f\",\n          fill: false,\n          lineTension: 0,\n        },\n        // {\n        //   label: \"因子A（主观睡眠质量）\",\n        //   data: aArray,\n        //   borderColor: \"#ffeb3b\",\n        //   backgroundColor: \"#ffeb3b\",\n        //   fill: false,\n        //   lineTension: 0,\n        // },\n        // {\n        //   label: \"因子B（睡眠潜伏期）\",\n        //   data: bArray,\n        //   borderColor: \"#4caf50\",\n        //   backgroundColor: \"#4caf50\",\n        //   fill: false,\n        //   lineTension: 0,\n        // },\n        // {\n        //   label: \"因子C（睡眠持续性）\",\n        //   data: cArray,\n        //   borderColor: \"#0d47a1\",\n        //   backgroundColor: \"#0d47a1\",\n        //   fill: false,\n        //   lineTension: 0,\n        // },\n        // {\n        //   label: \"因子D（习惯性睡眠效率）\",\n        //   data: dArray,\n        //   borderColor: \"#9E9E9E\",\n        //   backgroundColor: \"#9E9E9E\",\n        //   fill: false,\n        //   lineTension: 0,\n        // },\n        // {\n        //   label: \"因子E（睡眠紊乱\",\n        //   data: eArray,\n        //   borderColor: \"#FF5722\",\n        //   backgroundColor: \"#FF5722\",\n        //   fill: false,\n        //   lineTension: 0,\n        // },\n        // {\n        //   label: \"因子F（使用睡眠药物）\",\n        //   data: fArray,\n        //   borderColor: \"#26A69A\",\n        //   backgroundColor: \"#26A69A\",\n        //   fill: false,\n        //   lineTension: 0,\n        // },\n        // {\n        //   label: \"因子G（白天功能紊乱）\",\n        //   data: gArray,\n        //   borderColor: \"#4DD0E1\",\n        //   backgroundColor: \"#4DD0E1\",\n        //   fill: false,\n        //   lineTension: 0,\n        // },\n      ];\n    } else if (formKey === PHCSS_FORM_KEY) {\n      const totalArray = formResultList.map((formResult) => {\n        const resultObject: PhcssResult = JSON.parse(formResult.result);\n        return resultObject.phcssTotal;\n      });\n      return [\n        {\n          label: \"总分\",\n          data: totalArray,\n          borderColor: \"#d32f2f\",\n          backgroundColor: \"#d32f2f\",\n          fill: false,\n          lineTension: 0,\n        },\n      ];\n    } else if (formKey === EMBU_FORM_KEY) {\n      const listToReturn = [];\n\n      // const fatherLabels = [\n      //   \"父亲 因子I（情感温暖、理解）\",\n      //   \"父亲 因子II（惩罚、严厉）\",\n      //   \"父亲 因子III（过分干涉）\",\n      //   \"父亲 因子IV（偏爱被试）\",\n      //   \"父亲 因子V（拒绝、否认）\",\n      //   \"父亲 因子VI（过度保护）\",\n      // ];\n      const fatherLabels = [\n        \"父亲 因子I\",\n        \"父亲 因子II\",\n        \"父亲 因子III\",\n        \"父亲 因子IV\",\n        \"父亲 因子V\",\n        \"父亲 因子VI\",\n      ];\n      const fatherColors = [\n        \"#B71C1C\",\n        \"#880E4F\",\n        \"#4A148C\",\n        \"#757575\",\n        \"#FF8F00\",\n        \"#0D47A1\",\n      ];\n      const fatherFactorsData = formResultList.map((formResult) => {\n        const resultObject: EmbuResult = JSON.parse(formResult.result);\n        if (resultObject.embuIsFatherAnswerCompleted)\n          return resultObject.embuFatherComponents;\n        else return [];\n      });\n\n      for (let i = 0; i < fatherLabels.length; i++) {\n        listToReturn.push({\n          label: fatherLabels[i],\n          data: fatherFactorsData.map((data) => data[i]),\n          backgroundColor: fatherColors[i],\n          borderColor: fatherColors[i],\n          fill: false,\n          lineTension: 0,\n        });\n      }\n      // const motherLabel = [\n      //   \"母亲 因子I（情感温暖、理解）\",\n      //   \"母亲 因子II（过干涉、过保护）\",\n      //   \"母亲 因子III（拒绝、否认）\",\n      //   \"母亲 因子IV（惩罚、严厉）\",\n      //   \"母亲 因子V（偏爱被试）\",\n      // ];\n      const motherLabel = [\n        \"母亲 因子I\",\n        \"母亲 因子II\",\n        \"母亲 因子III\",\n        \"母亲 因子IV\",\n        \"母亲 因子V\",\n      ];\n      const motherColors = [\n        \"#B3E5FC\",\n        \"#B2EBF2\",\n        \"#B2DFDB\",\n        \"#C8E6C9\",\n        \"#FFCC80\",\n      ];\n      const motherFactorsData = formResultList.map((formResult) => {\n        const resultObject: EmbuResult = JSON.parse(formResult.result);\n        if (resultObject.embuIsMotherAnswerCompleted)\n          return resultObject.embuMotherComponents;\n        else return [];\n      });\n\n      for (let i = 0; i < motherLabel.length; i++) {\n        listToReturn.push({\n          label: motherLabel[i],\n          data: motherFactorsData.map((data) => data[i]),\n          backgroundColor: motherColors[i],\n          borderColor: motherColors[i],\n          fill: false,\n          lineTension: 0,\n        });\n      }\n      console.log(listToReturn);\n      return listToReturn;\n    }\n    return undefined;\n  }, [formKey, formName, formResultList]);\n  let showLabel = true;\n  if (\n    HIDE_LABEL_FORMS.includes(formName) ||\n    HIDE_LABEL_KEYS.includes(formKey)\n  ) {\n    showLabel = false;\n  }\n  // const classes = useStyles();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const handleCloseDialog = () => {\n    setIsDialogOpen(false);\n  };\n  const openDialog = () => {\n    setIsDialogOpen(true);\n  };\n  return (\n    <div>\n      <div>\n        <Button\n          startIcon={<EqualizerIcon />}\n          size=\"small\"\n          color=\"primary\"\n          disabled={formResultList.length <= 1}\n          onClick={openDialog}\n        >\n          趋势\n        </Button>\n      </div>\n      <Dialog onClose={handleCloseDialog} open={isDialogOpen}>\n        <DialogTitle>{formName}分数趋势</DialogTitle>\n        <DialogContent>\n          <LineChart\n            labelList={fillInDateList}\n            dataList={resultList}\n            multipleDataList={multipleDataList}\n            showLabel={showLabel}\n          />\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo.bcf589ff.png\";","import { useMutation } from \"@apollo/client\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  createStyles,\n  makeStyles,\n  TextField,\n  Theme,\n} from \"@material-ui/core\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { ErrorIndicator, LoadingIndicator } from \"../../lib/components\";\nimport { DOCTOR_LOG_IN } from \"../../lib/graphql/mutations\";\nimport {\n  DoctorLogIn,\n  DoctorLogInVariables,\n} from \"../../lib/graphql/mutations/DoctorLogIn/__generated__/DoctorLogIn\";\n// import {\n//   LogIn as LogInData,\n//   LogInVariables,\n// } from \"../../lib/graphql/mutations/Login/__generated__/LogIn\";\nimport { Doctor, Viewer } from \"../../lib/type\";\nimport logo from \"../AppHeader/assets/logo.png\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    logInCard: {\n      borderRadius: 8,\n      width: \"min(450px, 90%)\",\n      margin: \"0 auto 0\",\n    },\n    logInText: {\n      fontSize: \"1.5rem\",\n      textAlign: \"center\",\n      marginBottom: 20,\n      marginTop: 25,\n    },\n    promptText: {\n      marginBottom: 24,\n      fontSize: \"1rem\",\n      textAlign: \"center\",\n    },\n    input: {\n      width: \"100%\",\n    },\n    inputContainer: {\n      margin: \"0 40px\",\n    },\n    userNameInput: {\n      marginBottom: 15,\n    },\n    passwordInput: {\n      marginBottom: 30,\n    },\n    buttonContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n    logo: {\n      height: 92,\n    },\n    logoContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n    pageContainer: {\n      backgroundColor: \"#f5f5f5\",\n      width: \"100%\",\n      height: \"100%\",\n    },\n    topPadding: {\n      height: \"min(100px, 30%)\",\n    },\n  })\n);\n\ninterface AccountInfo {\n  userName: string;\n  password: string;\n}\n\nconst initialAccountInfo = {\n  userName: \"\",\n  password: \"\",\n};\n\ninterface Props {\n  isAuthorized: boolean;\n  setViewer: (viewer: Viewer) => void;\n  setDoctor: (doctor: Doctor) => void;\n  doctor: Doctor;\n}\n\nexport const Login = ({\n  isAuthorized,\n  setViewer,\n  setDoctor,\n  doctor,\n}: Props) => {\n  const classes = useStyles();\n  // const [logIn] = useMutation<LogInData, LogInVariables>(LOG_IN, {\n  //   onCompleted: (data) => {\n  //     if (data && data.logIn && data.logIn.token) {\n  //       setViewer(data.logIn);\n  //     }\n  //   },\n  //   onError: (error) => {\n  //     setIsLogInErrorShown(true);\n  //   },\n  // });\n  // const logInRef = useRef(logIn);\n  const [doctorLogIn] = useMutation<DoctorLogIn, DoctorLogInVariables>(\n    DOCTOR_LOG_IN,\n    {\n      onCompleted: (data) => {\n        if (data && data.doctorLogIn) {\n          const { name, userName, didRequest } = data.doctorLogIn;\n          setDoctor({\n            name,\n            userName,\n            didRequest,\n          });\n          setIsRedo(false);\n        }\n      },\n      onError: (error) => {\n        setIsLogInErrorShown(true);\n      },\n    }\n  );\n  const doctorLoginRef = useRef(doctorLogIn);\n  const [accountInfo, setAccountInfo] = useState<AccountInfo>(\n    initialAccountInfo\n  );\n  const [isNameAndPasswordValidated, setIsNameAndPasswordValidated] = useState(\n    false\n  );\n  const [isLogInErrorShown, setIsLogInErrorShown] = useState(false);\n  const handleKeyPress = (event: KeyboardEvent) => {\n    if (event.key === \"Enter\") {\n      logInButtonOnClick();\n    }\n  };\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyPress);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  });\n  const [isRedo, setIsRedo] = useState(true);\n  const detectRedoRef = useRef(() => {\n    if (\n      history.location.state &&\n      history.location.state.from.pathname === \"/doctor\"\n    ) {\n      setIsRedo(true);\n    } else {\n      setIsRedo(false);\n    }\n  });\n\n  useEffect(() => {\n    detectRedoRef.current();\n  }, []);\n  const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setAccountInfo({ ...accountInfo, userName: e.target.value });\n  };\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setAccountInfo({ ...accountInfo, password: e.target.value });\n  };\n  const logInButtonOnClick = () => {\n    setIsNameAndPasswordValidated(true);\n    if (accountInfo.userName && accountInfo.password)\n      doctorLoginRef.current({\n        variables: {\n          input: {\n            userName: accountInfo.userName,\n            password: accountInfo.password,\n          },\n        },\n      });\n  };\n  const history = useHistory<\n    { from: Location; redo: boolean | undefined } | undefined\n  >();\n  const isDoctor =\n    history.location.state &&\n    history.location.state.from.pathname.includes(\"doctor\")\n      ? true\n      : false;\n  if (isAuthorized) {\n    // let redirectUrl = \"/user\";\n    // if (history.location.state) {\n    //   redirectUrl = history.location.state.from.pathname;\n    // }\n    if (!isRedo) {\n      if (isDoctor) {\n        if (!doctor.userName) {\n          return <LoadingIndicator />;\n        } else {\n          return <Redirect to={`/doctor/${doctor.userName}`} />;\n        }\n      }\n      return <Redirect to=\"/user\" />;\n    }\n  }\n\n  return (\n    <div className={classes.pageContainer}>\n      <div className={classes.topPadding} />\n      <Card className={classes.logInCard}>\n        <CardContent>\n          <div className={classes.logoContainer}>\n            <img src={logo} className={classes.logo} alt=\"医院标志\" />\n          </div>\n          <div className={classes.logInText}>\n            {isDoctor ? \"医生端\" : \"用户端\"}\n          </div>\n          <div className={classes.promptText}>请输入医生的用户名和密码</div>\n          <form>\n            <div className={classes.inputContainer}>\n              <TextField\n                autoFocus\n                className={classes.input + \" \" + classes.userNameInput}\n                color=\"primary\"\n                value={accountInfo.userName}\n                label=\"用户名\"\n                onChange={handleNameChange}\n                helperText={\n                  isNameAndPasswordValidated && !accountInfo.userName\n                    ? \"请输入您的用户名\"\n                    : undefined\n                }\n                error={\n                  isNameAndPasswordValidated && !accountInfo.userName\n                    ? true\n                    : undefined\n                }\n                inputProps={{ \"aira-label\": \"用户名\" }}\n              />\n              <TextField\n                className={classes.input + \" \" + classes.passwordInput}\n                color=\"primary\"\n                value={accountInfo.password}\n                label=\"密码\"\n                helperText={\n                  isNameAndPasswordValidated && !accountInfo.password\n                    ? \"请输入您的密码\"\n                    : undefined\n                }\n                error={\n                  isNameAndPasswordValidated && !accountInfo.password\n                    ? true\n                    : undefined\n                }\n                onChange={handlePasswordChange}\n                type=\"password\"\n                inputProps={{ \"aira-label\": \"密码\" }}\n              />\n            </div>\n            <div className={classes.buttonContainer}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={logInButtonOnClick}\n              >\n                登录\n              </Button>\n            </div>\n          </form>\n        </CardContent>\n      </Card>\n      <ErrorIndicator\n        showError={isLogInErrorShown}\n        setShowError={setIsLogInErrorShown}\n        errorMessage={\"用户名或密码不正确！\"}\n      />\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/cardIcon.2b436e10.png\";","import { gql } from \"@apollo/client\";\n\nexport const QUESTIONNAIRE_LIST = gql`\n  query QuestionnaireList($isReport: Boolean!, $showAll: Boolean) {\n    questionnaireList(isReport: $isReport, showAll: $showAll) {\n      name\n      description\n      id\n      done\n      displayedFillInDate\n      userAnswerId\n      result\n      key\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const QUESTIONNAIRE_CONTENT = gql`\n  query QuestionnaireContent($id: String!) {\n    questionnaire(id: $id) {\n      instruction\n      name\n      questions {\n        choices\n        content\n        parent\n      }\n      key\n    }\n    partialAnswer(questionnaireId: $id) {\n      answers\n      date\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const REPORT = gql`\n  query Report($userAnswerIds: [String!]!) {\n    report(userAnswerIds: $userAnswerIds) {\n      pdf\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const REPORT_FOR_ADMIN = gql`\n  query ReportForAdmin($userId: String, $userAnswerIds: [String!]!) {\n    reportForAdmin(userId: $userId, userAnswerIds: $userAnswerIds) {\n      pdf\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const DOCTOR_LIST = gql`\n  query DoctorList($limit: Int!, $currentPageIndex: Int!) {\n    doctorList(limit: $limit, currentPageIndex: $currentPageIndex) {\n      total\n      admins {\n        name\n        userName\n      }\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const CHECK_IF_DOCTOR_CONFIG_USER_NAME_UNIQUE = gql`\n  query CheckIfDoctorConfigNameUnique($doctorConfigName: String!) {\n    checkIfDoctorConfigNameUnique(doctorConfigName: $doctorConfigName) {\n      result\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const CHECK_IF_DOCTOR_USER_NAME_UNIQUE = gql`\n  query CheckIfDoctorNameUnique($userName: String!) {\n    checkIfDoctorUserNameUnique(userName: $userName) {\n      result\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const USER_ANSWER = gql`\n  query UserAnsewr($questionnaireId: String!) {\n    userAnswer(questionnaireId: $questionnaireId) {\n      answers\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const QUERY_USER = gql`\n  query QueryUser(\n    $userName: String\n    $name: String\n    $gender: String\n    $ageRange: AgeRange\n    $minSignUpDate: SignUpDate\n    $maxSignUpDate: SignUpDate\n    $limit: Int!\n    $currentPageIndex: Int!\n    $filter: UsersFilter\n    $onlyMyPatient: Boolean\n    $additionalFields: [String!]\n  ) {\n    queryUser(\n      userName: $userName\n      name: $name\n      gender: $gender\n      ageRange: $ageRange\n      minSignUpDate: $minSignUpDate\n      maxSignUpDate: $maxSignUpDate\n      limit: $limit\n      currentPageIndex: $currentPageIndex\n      filter: $filter\n      onlyMyPatient: $onlyMyPatient\n      additionalFields: $additionalFields\n    ) {\n      total\n      users {\n        id\n        name\n        userName\n        gender\n        education\n        jobStatus\n        age\n        marriageStatus\n        signUpDate\n        doctorName\n        doctorUserName\n        doctorId\n        finishedForms {\n          name\n          id\n          displayedFillInDate\n          userAnswerId\n          result\n          doctorUserName\n          doctorName\n          doctorId\n          key\n        }\n        diagnosis\n      }\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const DOCTOR_CONFIG_LIST = gql`\n  query DoctorConfigList {\n    doctorConfigList {\n      configs {\n        selected\n        formIds\n        configName\n        id\n      }\n    }\n  }\n`;\n","// Error dialog for EPQ (adult version).\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface Props {\n  isOpen: boolean;\n  handleClose: () => void;\n  goToLogInPage: () => void;\n  age?: null | number;\n  gender?: null | string;\n}\n\nexport const EnterGenderAndAgeDialog = ({\n  isOpen,\n  handleClose,\n  goToLogInPage,\n  age,\n  gender,\n}: Props) => {\n  return (\n    <Dialog open={isOpen} onClose={handleClose}>\n      <DialogTitle>\n        {!age || (age >= 16 && !gender)\n          ? \"请您完善信息\"\n          : age >= 7 && age < 16\n          ? \"请使用儿童版量表\"\n          : \"年龄不符合条件\"}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {(!age || !gender) && \"请您填写性别和年龄信息。\"}\n          {age !== undefined && age !== null && age < 16\n            ? \"填写该量表最小年龄为16岁。\"\n            : null}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={!age || age >= 16 ? goToLogInPage : handleClose}\n          color=\"primary\"\n          autoFocus\n        >\n          确定\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","// Error dialog for EPQ (children version).\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface Props {\n  isOpen: boolean;\n  handleClose: () => void;\n  goToLogInPage: () => void;\n  age?: null | number;\n  gender?: null | string;\n}\n\nexport const ChildrenEnterGenderAndAgeDialog = ({\n  isOpen,\n  handleClose,\n  goToLogInPage,\n  age,\n  gender,\n}: Props) => {\n  return (\n    <Dialog open={isOpen} onClose={handleClose}>\n      <DialogTitle>\n        {!age || (age < 16 && age > 7 && !gender)\n          ? \"请您完善信息\"\n          : age >= 16\n          ? \"请使用成人版量表\"\n          : \"年龄不符合条件\"}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {(!age || !gender) && \"请您填写性别和年龄信息。\"}\n          {age !== undefined && age !== null && (age >= 16 || age < 7)\n            ? \"填写该量表年龄应在7岁到15岁之间。\"\n            : null}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={\n            !age || !(age >= 16 || age < 7) ? goToLogInPage : handleClose\n          }\n          color=\"primary\"\n          autoFocus\n        >\n          确定\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","// Error dialog for EPQ (children version).\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface Props {\n  isOpen: boolean;\n  handleClose: () => void;\n  goToLogInPage: () => void;\n  age?: null | number;\n  gender?: null | string;\n}\n\nexport const PhcssGenderAndAgeDialog = ({\n  isOpen,\n  handleClose,\n  goToLogInPage,\n  age,\n  gender,\n}: Props) => {\n  return (\n    <Dialog open={isOpen} onClose={handleClose}>\n      <DialogTitle>\n        {!age || (age < 17 && age > 7 && !gender)\n          ? \"请您完善信息\"\n          : \"年龄不符合条件\"}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {(!age || !gender) && \"请您填写性别和年龄信息。\"}\n          {age !== undefined && age !== null && (age >= 17 || age <= 7)\n            ? \"填写该量表年龄应在8岁到16岁之间。\"\n            : null}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={\n            !age || !(age >= 17 || age <= 7) ? goToLogInPage : handleClose\n          }\n          color=\"primary\"\n          autoFocus\n        >\n          确定\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","// Error dialog for EPQ (children version).\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface Props {\n  isOpen: boolean;\n  handleClose: () => void;\n  goToLogInPage: () => void;\n  gender?: null | string;\n}\n\nexport const PsssGenderDialog = ({\n  isOpen,\n  handleClose,\n  goToLogInPage,\n  gender,\n}: Props) => {\n  return (\n    <Dialog open={isOpen} onClose={handleClose}>\n      <DialogTitle>请您完善信息</DialogTitle>\n      <DialogContent>\n        <DialogContentText>请您填写性别信息。</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={goToLogInPage} color=\"primary\" autoFocus>\n          确定\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import { Snackbar } from \"@material-ui/core\";\nimport React from \"react\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\ninterface Props {\n  showSuccess: boolean;\n  setShowSuccess: (showError: boolean) => void;\n  successMessage: string;\n}\n\nexport const SuccessIndicator = (props: Props) => {\n  const { showSuccess, setShowSuccess, successMessage } = props;\n  return (\n    <Snackbar\n      open={showSuccess}\n      onClose={() => setShowSuccess(false)}\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n    >\n      <MuiAlert\n        elevation={6}\n        variant=\"filled\"\n        severity=\"success\"\n        onClose={() => setShowSuccess(false)}\n      >\n        {successMessage}\n      </MuiAlert>\n    </Snackbar>\n  );\n};\n","import { useQuery } from \"@apollo/client\";\nimport {\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  createStyles,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ListSubheader,\n  makeStyles,\n  Theme,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport indigo from \"@material-ui/core/colors/indigo\";\nimport React, { useMemo, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport CardIcon from \"./assets/cardIcon.png\";\nimport {\n  QuestionnaireList as QuestionnaireListData,\n  QuestionnaireListVariables,\n  QuestionnaireList_questionnaireList as QuestionnaireData,\n} from \"../../lib/graphql/queries/QuestionnaireList/__generated__/QuestionnaireList\";\nimport { QUESTIONNAIRE_LIST } from \"../../lib/graphql/queries\";\nimport { LineChartPopOver, LoadingIndicator } from \"../../lib/components\";\nimport { Patient } from \"../../lib/type\";\nimport {\n  EYSCENCK_CHILDREN_FORM_NAME,\n  EYSCENCK_FORM_NAME,\n  NO_DOCTOR_LOGIN_ERROR_MESSAGE,\n  NO_PATIENT_LOGIN_ERROR_MESSAGE,\n  PHCSS_FORM_KEY,\n  PSSS_FORM_KEY,\n} from \"../../lib/utils/constants\";\nimport {\n  EnterGenderAndAgeDialog,\n  PhcssGenderAndAgeDialog,\n  PsssGenderDialog,\n} from \"./components\";\nimport { ChildrenEnterGenderAndAgeDialog } from \"./components/ChildrenEnterGenderAndAgeDialog\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport { SuccessIndicator } from \"../../lib/components/SuccessIndicator\";\n\nconst CARD_WIDTH = 250;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    content: {\n      padding: \"5px 10px\",\n    },\n    listName: {\n      fontSize: \"1rem\",\n      color: \"rgba(0, 0, 0, .654)\",\n      marginTop: 20,\n      marginBottom: 20,\n    },\n    root: {\n      display: \"grid\",\n      gridTemplateColumns: `repeat(auto-fill, ${CARD_WIDTH}px)`,\n      rowGap: \"20px\",\n      columnGap: \"20px\",\n    },\n    card: {\n      height: 212,\n    },\n    cardActionArea: {\n      width: CARD_WIDTH,\n      cursor: \"pointer\",\n      \"&:hover\": {\n        backgroundColor: indigo[50],\n      },\n      height: 160,\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"flex-start\",\n    },\n    cardIcon: {\n      width: 40,\n      height: 40,\n    },\n    unfinishedText: {\n      fontSize: \"0.8125rem\",\n      color: \"rgba(0, 0, 0, .54)\",\n      margin: \"5px 0\",\n    },\n    finishedText: {\n      fontSize: \"0.8125rem\",\n      color: \"#4caf50\",\n      margin: \"5px 0\",\n    },\n    questionnaireName: {\n      fontSize: \"1rem\",\n      color: \"#111\",\n      lineHeight: \"1.5rem\",\n    },\n    cardActionContainer: {\n      paddingLeft: 20,\n      height: 50,\n    },\n    noOverflow: {\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n    },\n    pageHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    refreshButtonContainer: {\n      marginLeft: 15,\n    },\n  })\n);\n\nexport type FormResult = { result: string; fillInDate: string };\n\ninterface Props {\n  patient: Patient;\n}\n\nexport const Home = ({ patient }: Props) => {\n  const isSmallScreen = useMediaQuery(\"(max-width:780px)\");\n  const classes = useStyles();\n  const { loading, data, error: questionnaireListError, refetch } = useQuery<\n    QuestionnaireListData,\n    QuestionnaireListVariables\n  >(QUESTIONNAIRE_LIST, {\n    fetchPolicy: \"no-cache\",\n    variables: { isReport: false },\n  });\n  const listData: {\n    uniqueFormList: QuestionnaireData[];\n    resultList: FormResult[][];\n  } = useMemo(() => {\n    if (!data) return { uniqueFormList: [], resultList: [] as FormResult[][] };\n    const formList: QuestionnaireData[] = [];\n    const resultList: FormResult[][] = [];\n    const formSet: Set<string> = new Set();\n    data.questionnaireList.forEach((questionnaire) => {\n      if (!formSet.has(questionnaire.id)) {\n        formSet.add(questionnaire.id);\n        formList.push(questionnaire);\n        if (questionnaire.result && questionnaire.displayedFillInDate) {\n          resultList.push([\n            {\n              result: questionnaire.result,\n              fillInDate: questionnaire.displayedFillInDate,\n            },\n          ]);\n        } else {\n          resultList.push([] as FormResult[]);\n        }\n      } else if (questionnaire.result && questionnaire.displayedFillInDate) {\n        let index = 0;\n        while (index <= formList.length) {\n          if (formList[index].id === questionnaire.id) {\n            resultList[index].push({\n              result: questionnaire.result,\n              fillInDate: questionnaire.displayedFillInDate,\n            });\n            break;\n          }\n          index += 1;\n        }\n      }\n    });\n    return { uniqueFormList: formList, resultList };\n  }, [data]);\n  const { uniqueFormList, resultList } = listData;\n  const [isGenderAndAgeDialogOpen, setIsGenderAndAgeDialogOpen] = useState(\n    false\n  );\n  const [\n    isChildrenGenderAndAgeDialogOpen,\n    setIsChildrenGenderAndAgeDialogOpen,\n  ] = useState(false);\n  const [isPhcssDialogOpen, setIsPhcssDialogOpen] = useState(false);\n  const [isPsssDialogOpen, setIsPsssDialogOpen] = useState(false);\n  const closeGenderAndAgeDialog = () => {\n    setIsGenderAndAgeDialogOpen(false);\n  };\n  const closeChildrenGenderAndAgeDialog = () => {\n    setIsChildrenGenderAndAgeDialogOpen(false);\n  };\n  const closePhcssDialog = () => {\n    setIsPhcssDialogOpen(false);\n  };\n  const closePsssDialog = () => {\n    setIsPsssDialogOpen(false);\n  };\n  const goToLogInPage = () => {\n    history.push(`/user/login?userName=${patient.userName}`);\n  };\n  const [isSuccessShown, setIsSuccessShown] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const history = useHistory();\n  if (questionnaireListError?.message === NO_DOCTOR_LOGIN_ERROR_MESSAGE) {\n    // eslint-disable-next-line no-restricted-globals\n    location.reload();\n  }\n  if (questionnaireListError?.message === NO_PATIENT_LOGIN_ERROR_MESSAGE) {\n    // eslint-disable-next-line no-restricted-globals\n    location.reload();\n  }\n  const reloadButtonOnClick = async () => {\n    await refetch();\n    setSuccessMessage(\"成功更新列表\");\n    setIsSuccessShown(true);\n  };\n  if (loading) {\n    return <LoadingIndicator />;\n  }\n  if (data) {\n    const questionnaireName = (questionnaire: QuestionnaireData) => {\n      const defaultReturn = (\n        <span className={classes.questionnaireName}>{questionnaire.name}</span>\n      );\n      // Note that this is Chinese parentheses!\n      if (!/^.*（.*）$/.test(questionnaire.name)) {\n        return defaultReturn;\n      } else {\n        const nameMatchFormResult = questionnaire.name.match(/^.*（/);\n        const abbreviationMatchFormResult = questionnaire.name.match(/（.*）/);\n        if (nameMatchFormResult && abbreviationMatchFormResult) {\n          const name = nameMatchFormResult[0].substring(\n            0,\n            nameMatchFormResult[0].length - 1\n          );\n          const abbreviation = abbreviationMatchFormResult[0];\n          return (\n            <span\n              className={classes.questionnaireName + \" \" + classes.noOverflow}\n            >\n              <span className={classes.noOverflow}>{name}</span>\n              <br />\n              {abbreviation.replace(\"（\", \"(\").replace(\"）\", \")\")}\n            </span>\n          );\n        }\n        return defaultReturn;\n      }\n    };\n    const goToFormPage = (\n      formId: string,\n      formName: string,\n      formKey: string\n    ) => {\n      if (formName === EYSCENCK_FORM_NAME) {\n        if (!patient.gender || !patient.age || patient.age < 16) {\n          setIsGenderAndAgeDialogOpen(true);\n          return;\n        }\n      } else if (formName === EYSCENCK_CHILDREN_FORM_NAME) {\n        if (\n          !patient.gender ||\n          !patient.age ||\n          patient.age >= 16 ||\n          patient.age <= 6\n        ) {\n          setIsChildrenGenderAndAgeDialogOpen(true);\n          return;\n        }\n      } else if (formKey === PHCSS_FORM_KEY) {\n        if (\n          !patient.gender ||\n          !patient.age ||\n          patient.age >= 17 || // Age should be a number between 8 - 16.\n          patient.age <= 7\n        ) {\n          setIsPhcssDialogOpen(true);\n          return;\n        }\n      } else if (formKey === PSSS_FORM_KEY) {\n        if (!patient.gender) {\n          setIsPsssDialogOpen(true);\n          return;\n        }\n      }\n      history.push(`/user/form?id=${formId}`);\n    };\n    const finishStatus = (questionnaire: QuestionnaireData) => (\n      <span\n        className={\n          questionnaire.done ? classes.finishedText : classes.unfinishedText\n        }\n      >\n        {questionnaire.done ? \"已完成\" : \"未完成\"}\n      </span>\n    );\n    if (isSmallScreen) {\n      return (\n        <>\n          <List subheader={<ListSubheader>量表</ListSubheader>}>\n            {uniqueFormList.map((questionnaire, index) => (\n              <ListItem\n                button\n                onClick={() =>\n                  goToFormPage(\n                    questionnaire.id,\n                    questionnaire.name,\n                    questionnaire.key\n                  )\n                }\n                key={questionnaire.id}\n              >\n                <ListItemAvatar>\n                  <img\n                    src={CardIcon}\n                    alt=\"量表图标\"\n                    className={classes.cardIcon}\n                  />\n                </ListItemAvatar>\n                <ListItemText\n                  primary={\n                    <div className={classes.questionnaireName}>\n                      {questionnaire.name}\n                    </div>\n                  }\n                  secondary={finishStatus(questionnaire)}\n                />\n              </ListItem>\n            ))}\n          </List>\n          <EnterGenderAndAgeDialog\n            isOpen={isGenderAndAgeDialogOpen}\n            handleClose={closeGenderAndAgeDialog}\n            goToLogInPage={goToLogInPage}\n            age={patient.age}\n            gender={patient.gender}\n          />\n          <ChildrenEnterGenderAndAgeDialog\n            isOpen={isChildrenGenderAndAgeDialogOpen}\n            handleClose={closeChildrenGenderAndAgeDialog}\n            goToLogInPage={goToLogInPage}\n            age={patient.age}\n            gender={patient.gender}\n          />\n          <PhcssGenderAndAgeDialog\n            isOpen={isPhcssDialogOpen}\n            handleClose={closePhcssDialog}\n            goToLogInPage={goToLogInPage}\n            age={patient.age}\n            gender={patient.gender}\n          />\n        </>\n      );\n    }\n    return (\n      <>\n        <div className={classes.content}>\n          <div className={classes.pageHeader}>\n            <p className={classes.listName}>量表</p>\n            <span className={classes.refreshButtonContainer}>\n              <IconButton\n                size=\"small\"\n                color=\"primary\"\n                onClick={reloadButtonOnClick}\n              >\n                <RefreshIcon />\n              </IconButton>\n            </span>\n          </div>\n          <div className={classes.root}>\n            {uniqueFormList.map((questionnaire, index) => (\n              <Card\n                variant=\"outlined\"\n                className={classes.card + \" \" + classes.noOverflow}\n                key={questionnaire.id}\n              >\n                <CardActionArea\n                  className={classes.cardActionArea}\n                  onClick={() =>\n                    goToFormPage(\n                      questionnaire.id,\n                      questionnaire.name,\n                      questionnaire.key\n                    )\n                  }\n                >\n                  <CardContent>\n                    <div>\n                      <img\n                        src={CardIcon}\n                        alt=\"量表图标\"\n                        className={classes.cardIcon}\n                      />\n                    </div>\n                    <div className={classes.noOverflow}>\n                      {questionnaireName(questionnaire)}\n                    </div>\n                    {finishStatus(questionnaire)}\n                  </CardContent>\n                </CardActionArea>\n\n                <Divider />\n\n                <CardActions className={classes.cardActionContainer}>\n                  <LineChartPopOver\n                    formResultList={resultList[index]}\n                    formName={questionnaire.name}\n                    formKey={questionnaire.key}\n                  />\n                </CardActions>\n              </Card>\n            ))}\n          </div>\n        </div>\n        <EnterGenderAndAgeDialog\n          isOpen={isGenderAndAgeDialogOpen}\n          handleClose={closeGenderAndAgeDialog}\n          goToLogInPage={goToLogInPage}\n          age={patient.age}\n          gender={patient.gender}\n        />\n        <ChildrenEnterGenderAndAgeDialog\n          isOpen={isChildrenGenderAndAgeDialogOpen}\n          handleClose={closeChildrenGenderAndAgeDialog}\n          goToLogInPage={goToLogInPage}\n          age={patient.age}\n          gender={patient.gender}\n        />\n        <PhcssGenderAndAgeDialog\n          isOpen={isPhcssDialogOpen}\n          handleClose={closePhcssDialog}\n          goToLogInPage={goToLogInPage}\n          age={patient.age}\n          gender={patient.gender}\n        />\n        <PsssGenderDialog\n          isOpen={isPsssDialogOpen}\n          handleClose={closePsssDialog}\n          goToLogInPage={goToLogInPage}\n          gender={patient.gender}\n        />\n        <SuccessIndicator\n          showSuccess={isSuccessShown}\n          setShowSuccess={setIsSuccessShown}\n          successMessage={successMessage}\n        />\n      </>\n    );\n  }\n  return null;\n};\n","import { gql } from \"@apollo/client\";\n\nexport const PATIENT_LOG_OUT = gql`\n  mutation PatientLogOut {\n    patientLogOut {\n      didRequest\n    }\n  }\n`;\n","import { useQuery } from \"@apollo/client\";\nimport React, { ComponentType, PropsWithChildren } from \"react\";\nimport { LoadingIndicator } from \"../../../../lib/components\";\nimport { REPORT } from \"../../../../lib/graphql/queries\";\nimport {\n  Report as ReportData,\n  ReportVariables,\n} from \"../../../../lib/graphql/queries/Report/__generated__/Report\";\n\nexport const withReportPdfData = (\n  WrappedComponent: ComponentType<\n    PropsWithChildren<{ pdfData: string; closeReport: () => void }>\n  >\n) => {\n  return ({\n    children,\n    userAnswerIds,\n    closeReport,\n  }: PropsWithChildren<{\n    userAnswerIds: string[];\n    closeReport: () => void;\n  }>) => {\n    // Get PDF data.\n    const { data, loading } = useQuery<ReportData, ReportVariables>(REPORT, {\n      variables: {\n        userAnswerIds,\n      },\n      fetchPolicy: \"no-cache\",\n    });\n\n    if (loading || !data) {\n      return <LoadingIndicator />;\n    }\n\n    if (data.report && data.report.pdf) {\n      return (\n        <WrappedComponent pdfData={data.report.pdf} closeReport={closeReport}>\n          {children}\n        </WrappedComponent>\n      );\n    }\n\n    return null;\n  };\n};\n","/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n//==============================================================\n// START Enums and Input Objects\n//==============================================================\n\nexport enum UsersFilter {\n  DATE_LATEST = \"DATE_LATEST\",\n  DATE_OLDEST = \"DATE_OLDEST\",\n}\n\nexport interface AddDiagnosisInput {\n  patientId: string;\n  diagnosis: string;\n}\n\nexport interface AddDoctorInput {\n  userName: string;\n  name: string;\n  password: string;\n}\n\nexport interface AgeRange {\n  min?: number | null;\n  max?: number | null;\n}\n\nexport interface CreateAccountInput {\n  userName: string;\n  password: string;\n  name: string;\n  education: string;\n  jobStatus: string;\n  gender: string;\n  marriageStatus: string;\n  age?: number | null;\n}\n\nexport interface DeleteConfigInput {\n  configId: string;\n}\n\nexport interface DoctorConfigInput {\n  selected: boolean;\n  formIds: string[];\n  configName: string;\n}\n\nexport interface DoctorLoginInput {\n  userName: string;\n  password: string;\n}\n\nexport interface LogInInput {\n  userName: string;\n  password: string;\n}\n\nexport interface SelectConfigInput {\n  configId?: string | null;\n}\n\nexport interface SignUpDate {\n  year: number;\n  month: number;\n  day: number;\n}\n\nexport interface UserAnswerInput {\n  questionnaireId: string;\n  answers: number[];\n}\n\nexport interface UserLoginInput {\n  userName: string;\n  name: string;\n  education?: string | null;\n  jobStatus?: string | null;\n  gender?: string | null;\n  marriageStatus?: string | null;\n  age?: number | null;\n}\n\n//==============================================================\n// END Enums and Input Objects\n//==============================================================\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { AppBar, Button, IconButton, Toolbar } from \"@material-ui/core\";\nimport logo from \"./assets/logo.png\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { Viewer } from \"../../lib/type\";\nimport { useMutation } from \"@apollo/client\";\nimport { DOCTOR_LOG_OUT } from \"../../lib/graphql/mutations\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport { PatientLogOut } from \"../../lib/graphql/mutations/PatientLogOut/__generated__/PatientLogOut\";\nimport { PATIENT_LOG_OUT } from \"../../lib/graphql/mutations/PatientLogOut\";\nimport { DoctorLogOut } from \"../../lib/graphql/mutations/DoctorLogOut/__generated__/doctorLogOut\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    header: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n    logo: {\n      marginRight: theme.spacing(2),\n      maxWidth: 30,\n      maxHeight: 30,\n    },\n    title: {\n      flexGrow: 1,\n      fontSize: \"1.25rem\",\n    },\n    timerHeader: {\n      overflow: \"hidden\",\n      backgroundColor: \"rgb(236, 238, 248)\",\n    },\n    actionContainer: {\n      float: \"right\",\n      paddingRight: 20,\n      paddingTop: 10,\n      fontSize: \"0.875rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n  })\n);\n\ninterface Props {\n  viewer: Viewer;\n  setViewer: (viewer: Viewer) => void;\n  type: \"doctor\" | \"user\";\n  setIsSiderOpen?: (isSiderOpen: boolean) => void;\n}\n\nexport const AppHeader = (props: Props) => {\n  const { viewer, setViewer, type } = props;\n  const history = useHistory();\n\n  const [width, setWidth] = React.useState(window.innerWidth);\n\n  const updateWidth = () => {\n    if (window.innerWidth !== width) setWidth(window.innerWidth);\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateWidth);\n    return () => window.removeEventListener(\"resize\", updateWidth);\n  });\n\n  const [logOut] = useMutation<DoctorLogOut>(DOCTOR_LOG_OUT, {\n    onCompleted: (data) => {\n      if (data && data.doctorLogOut.didRequest) {\n        setViewer(data.doctorLogOut);\n        sessionStorage.removeItem(\"token\");\n        console.log(\"log out successfully\");\n      }\n    },\n    onError: (error) => {\n      console.log(error);\n      console.log(\"log out failed\");\n    },\n  });\n  const [patientLogOut] = useMutation<PatientLogOut>(PATIENT_LOG_OUT, {\n    onCompleted: (data) => {\n      if (data && data.patientLogOut) {\n        setViewer(data.patientLogOut);\n        console.log(\"log out successfully\");\n      }\n    },\n    onError: (error) => {\n      console.log(error);\n      console.log(\"log out failed\");\n    },\n  });\n  const handleLogout = async () => {\n    if (type === \"doctor\") {\n      await logOut();\n      history.push(\"/doctor\");\n    } else {\n      await patientLogOut();\n      history.push(\"/user\");\n    }\n  };\n  const classes = useStyles();\n  const isSiderPermanent = type !== \"doctor\" || window.innerWidth > 1150;\n\n  return (\n    <Switch>\n      <Route path=\"/user/form\" exact />\n      <Route path=\"/\">\n        <div className={classes.root}>\n          <AppBar position=\"fixed\" className={classes.header}>\n            <Toolbar>\n              {!isSiderPermanent && (\n                <IconButton\n                  edge=\"start\"\n                  color=\"inherit\"\n                  aria-label=\"menu\"\n                  onClick={() =>\n                    props.setIsSiderOpen && props.setIsSiderOpen(true)\n                  }\n                >\n                  <MenuIcon />\n                </IconButton>\n              )}\n              <img src={logo} alt=\"中大医院\" className={classes.logo} />\n              <div className={classes.title}>\n                {window.innerWidth >= 650\n                  ? \"东南大学附属中大医院心理健康评估系统\"\n                  : \"心理健康评估系统\"}\n              </div>\n\n              <Switch>\n                <Route path={[\"/doctor\", \"/user\"]}>\n                  {viewer && viewer.userName && (\n                    <Button\n                      color=\"inherit\"\n                      startIcon={<ExitToAppIcon />}\n                      onClick={handleLogout}\n                    >\n                      {type === \"doctor\" ? \"退出医生登录\" : \"退出系统\"}\n                    </Button>\n                  )}\n                </Route>\n              </Switch>\n            </Toolbar>\n          </AppBar>\n        </div>\n      </Route>\n    </Switch>\n  );\n};\n","import { createStyles, Divider, makeStyles, Theme } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Viewer } from \"../../../../lib/type\";\n\ninterface Props {\n  viewer: Viewer;\n}\n\nconst checkIsFieldValid = (field: string | number | undefined | null) => {\n  return field !== undefined && field !== null && field !== \"\";\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    propertyName: {\n      color: \"#5f6368\",\n      fontSize: \"0.75rem\",\n      margin: \"8px 0\",\n    },\n    propertyDivider: {\n      marginTop: 5,\n      marginBottom: 5,\n    },\n  })\n);\n\nconst fields = [\n  \"name\",\n  \"gender\",\n  \"age\",\n  \"education\",\n  \"jobStatus\",\n  \"marriageStatus\",\n] as const;\nconst displayNames = [\"姓名\", \"性别\", \"年龄\", \"教育\", \"工作\", \"婚姻\"];\nexport const PersonalInformation = (props: Props) => {\n  const classes = useStyles();\n  const { viewer } = props;\n  const validIndexes: number[] = [];\n  for (let i = 0; i < fields.length; i++) {\n    if (checkIsFieldValid(viewer[fields[i]])) {\n      validIndexes.push(i);\n    }\n  }\n  return (\n    <>\n      {validIndexes.map((validIndex, index) => (\n        <div key={`property-${index}`}>\n          <div className={classes.propertyName}>{displayNames[validIndex]}</div>\n          <div>{viewer[fields[validIndex]]}</div>\n          {index !== validIndexes.length - 1 ? (\n            <Divider className={classes.propertyDivider} />\n          ) : null}\n        </div>\n      ))}\n    </>\n  );\n};\n","import {\n  Card,\n  CardContent,\n  Chip,\n  createStyles,\n  Divider,\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  Theme,\n  Toolbar,\n} from \"@material-ui/core\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\nimport React from \"react\";\nimport { Viewer } from \"../../lib/type\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { PersonalInformation } from \"./components\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport LocalHospitalIcon from \"@material-ui/icons/LocalHospital\";\nimport SettingsApplicationsIcon from \"@material-ui/icons/SettingsApplications\";\nimport NoteIcon from \"@material-ui/icons/Note\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      \"@media (max-width:780px)\": {\n        display: \"none\",\n      },\n    },\n    personalInfoCard: {\n      margin: 5,\n      overflow: \"auto\",\n    },\n    personalInfoCardContent: {\n      \"&:last-child\": {\n        paddingBottom: 16,\n      },\n    },\n    personalInfoText: {\n      fontWeight: 400,\n      fontSize: \"1.25rem\",\n      marginBottom: 10,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    idChip: {\n      marginTop: 3,\n      marginBottom: 3,\n    },\n    adminMenu: {\n      padding: 0,\n    },\n    adminMenuHeader: {\n      height: 48,\n      display: \"flex\",\n      alignItems: \"center\",\n      fontWeight: 500,\n      fontSize: \"1.125rem\",\n      paddingLeft: 10,\n    },\n    link: {\n      color: \"#111\",\n    },\n  })\n);\n\ninterface Props {\n  viewer: Viewer;\n  type: \"doctor\" | \"user\";\n  open?: boolean;\n  onClose?: () => void;\n}\n\nexport const Sider = (props: Props) => {\n  const classes = useStyles();\n  const location = useLocation();\n  const { viewer, type } = props;\n\n  const [width, setWidth] = React.useState(window.innerWidth);\n\n  const updateWidth = () => {\n    if (window.innerWidth !== width) setWidth(window.innerWidth);\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateWidth);\n    return () => window.removeEventListener(\"resize\", updateWidth);\n  });\n\n  const isPermanent = type !== \"doctor\" || window.innerWidth > 1150;\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant={isPermanent ? \"permanent\" : undefined}\n      open={isPermanent ? true : props.open}\n      classes={{ paper: classes.drawerPaper }}\n      onClose={props.onClose}\n      // style={{\n      //   display:\n      //     type === \"doctor\" && window.innerWidth <= 1150 ? \"none\" : undefined,\n      // }}\n    >\n      {isPermanent ? <Toolbar /> : null}\n      {type === \"doctor\" ? (\n        <>\n          <div className={classes.adminMenuHeader}>{viewer.name}医生已登入</div>\n          <Divider />\n          <List className={classes.adminMenu}>\n            <Link to={`/doctor/${viewer.userName}`} className={classes.link}>\n              <ListItem button key=\"patientInfo\" onClick={props.onClose}>\n                <ListItemIcon>\n                  <PeopleIcon\n                    color={\n                      location.pathname === `/doctor/${viewer.userName}`\n                        ? \"primary\"\n                        : \"inherit\"\n                    }\n                  />\n                </ListItemIcon>\n                <ListItemText primary={\"病人信息\"} />\n              </ListItem>\n            </Link>\n            <Divider />\n            <Link\n              to={`/doctor/${viewer.userName}/manage`}\n              className={classes.link}\n            >\n              <ListItem button key=\"doctorInfo\" onClick={props.onClose}>\n                <ListItemIcon>\n                  <LocalHospitalIcon\n                    color={\n                      location.pathname === `/doctor/${viewer.userName}/manage`\n                        ? \"primary\"\n                        : \"inherit\"\n                    }\n                  />\n                </ListItemIcon>\n                <ListItemText primary={\"医生信息\"} />\n              </ListItem>\n            </Link>\n            <Divider />\n            <Link\n              to={`/doctor/${viewer.userName}/config`}\n              className={classes.link}\n            >\n              <ListItem button key=\"doctorInfo\" onClick={props.onClose}>\n                <ListItemIcon>\n                  <SettingsApplicationsIcon\n                    color={\n                      location.pathname === `/doctor/${viewer.userName}/config`\n                        ? \"primary\"\n                        : \"inherit\"\n                    }\n                  />\n                </ListItemIcon>\n                <ListItemText primary={\"患者端\"} />\n              </ListItem>\n            </Link>\n            <Divider />\n          </List>\n        </>\n      ) : (\n        <>\n          <Card variant=\"outlined\" className={classes.personalInfoCard}>\n            <CardContent className={classes.personalInfoCardContent}>\n              <div className={classes.personalInfoText}>个人信息</div>\n              <div className={classes.idChip}>\n                <Chip\n                  size=\"small\"\n                  icon={<AssignmentIndIcon />}\n                  color=\"primary\"\n                  label={`门诊号：${viewer.userName}`}\n                  variant=\"outlined\"\n                />\n              </div>\n              <PersonalInformation viewer={viewer} />\n            </CardContent>\n          </Card>\n          <List>\n            <Link to=\"/user/home\" className={classes.link}>\n              <ListItem button key=\"form\">\n                <ListItemIcon>\n                  <DescriptionIcon\n                    color={\n                      location.pathname === \"/user/home\" ? \"primary\" : \"inherit\"\n                    }\n                  />\n                </ListItemIcon>\n                <ListItemText primary={\"量表\"} />\n              </ListItem>\n            </Link>\n            <Link to=\"/user/report\" className={classes.link}>\n              <ListItem button key=\"report\">\n                <ListItemIcon>\n                  <NoteIcon\n                    color={\n                      location.pathname === \"/user/report\"\n                        ? \"primary\"\n                        : \"inherit\"\n                    }\n                  />\n                </ListItemIcon>\n                <ListItemText primary={\"报告\"} />\n              </ListItem>\n            </Link>\n          </List>\n        </>\n      )}\n    </Drawer>\n  );\n};\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface Props {\n  totalNumber: number;\n  currentIndex: number;\n}\nconst PROGRESS_BAR_WIDTH = 100;\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: PROGRESS_BAR_WIDTH,\n      backgroundColor: \"rgba(0, 0, 0, 0.12)\",\n      display: \"flex\",\n      marginRight: 10,\n      height: 12,\n      borderRadius: 6,\n    },\n    finished: {\n      width: 0,\n      height: 12,\n      borderRadius: \"6px 0 0 6px\",\n      backgroundColor: \"#5eb8ff\",\n      maxWidth: PROGRESS_BAR_WIDTH - 6,\n    },\n    leftCircle: {\n      borderRadius: \"6px 0 0 6px\",\n    },\n    circle: {\n      height: 12,\n      width: 12,\n      backgroundColor: \"#5eb8ff\",\n    },\n    circlewrapper: {\n      overflow: \"hidden\",\n    },\n    rightCircle: {\n      borderRadius: 6,\n      backgroundColor: \"#5eb8ff\",\n    },\n    rightCircleWrapper: {\n      marginLeft: -6,\n    },\n  })\n);\n\nexport const ProgressBar = ({ totalNumber, currentIndex }: Props) => {\n  const classes = useStyles();\n  const widthOfFinishedPart =\n    (PROGRESS_BAR_WIDTH * (currentIndex + 1)) / totalNumber;\n  return (\n    <div className={classes.root}>\n      {widthOfFinishedPart > 12 ? (\n        <>\n          <div\n            className={classes.finished}\n            style={{\n              width: widthOfFinishedPart,\n            }}\n          />\n          {PROGRESS_BAR_WIDTH - widthOfFinishedPart <= 6 ? (\n            <div\n              className={\n                classes.rightCircleWrapper + \" \" + classes.circlewrapper\n              }\n              style={{ width: 12 - (PROGRESS_BAR_WIDTH - widthOfFinishedPart) }}\n            >\n              <div className={classes.rightCircle + \" \" + classes.circle} />\n            </div>\n          ) : null}\n        </>\n      ) : (\n        <div\n          className={classes.circlewrapper}\n          style={{\n            width: widthOfFinishedPart,\n          }}\n        >\n          <div className={classes.leftCircle + \" \" + classes.circle} />\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Timer as TimerIcon } from \"@material-ui/icons\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    timeNumber: {\n      marginLeft: 10,\n      userSelect: \"none\",\n      WebkitUserSelect: \"none\",\n      WebkitTouchCallout: \"none\",\n      KhtmlUserSelect: \"none\",\n      MozUserSelect: \"none\",\n      msUserSelect: \"none\",\n    },\n  })\n);\nexport const Timer = () => {\n  const classes = useStyles();\n  const [seconds, setSeconds] = useState(0);\n  useEffect(() => {\n    const interval = setTimeout(() => {\n      setSeconds(seconds + 1);\n    }, 1000);\n    return () => {\n      clearTimeout(interval);\n    };\n  }, [seconds]);\n  const hour = Math.floor(seconds / 3600);\n  const minute = Math.floor(seconds / 60);\n  const second = seconds % 60;\n  return (\n    <div className={classes.root}>\n      <TimerIcon />\n      <span className={classes.timeNumber}>{`${hour < 10 ? \"0\" + hour : hour}:${\n        minute < 10 ? \"0\" + minute : minute\n      }:${second < 10 ? \"0\" + second : second}`}</span>\n    </div>\n  );\n};\n","import React from \"react\";\n\ninterface Props {\n  index: number;\n  totalSize: number;\n}\n\nconst CHINESE_INDEXES = [\n  \"一\",\n  \"二\",\n  \"三\",\n  \"四\",\n  \"五\",\n  \"六\",\n  \"七\",\n  \"八\",\n  \"九\",\n  \"十\",\n];\n\nexport const QuestionIndexText = ({ index, totalSize }: Props) => {\n  let text: string;\n  if (totalSize <= 10) {\n    text = CHINESE_INDEXES[index] + \"、\";\n  } else {\n    text = String(index + 1) + \". \";\n  }\n  return <>{text}</>;\n};\n","import {\n  QuestionnaireContent,\n  QuestionnaireContent_partialAnswer,\n  QuestionnaireContent_questionnaire,\n} from \"../../../../lib/graphql/queries/QuestionnaireContent/__generated__/QuestionnaireContent\";\n\nexport const embuRadioButtonOnClick = (\n  e: React.MouseEvent<HTMLLabelElement>,\n  index: number,\n  currentQuestionIndex: number,\n  selectChoiceLockRef: React.MutableRefObject<boolean>,\n  choiceDisabled: boolean[][] | null | undefined,\n  answers: {\n    [x: number]: number;\n  },\n  setAnswers: (answers: { [x: number]: number }) => void,\n  questionnaire: QuestionnaireContent_questionnaire,\n  setIsNextButtonDisabled: (isNextButtonDisabled: boolean) => void,\n  setCurrentQuestionIndex: (currentQuestionIndex: number) => void,\n  timeoutRef: React.MutableRefObject<NodeJS.Timeout | null>,\n  setIsAllowedToSubmit: (isAllowedToSubmit: boolean) => void,\n  needAddOne: boolean\n) => {\n  if (\n    selectChoiceLockRef.current ||\n    (choiceDisabled && choiceDisabled[currentQuestionIndex][index])\n  ) {\n    return;\n  }\n  const newAnswers = { ...answers };\n  if (needAddOne) newAnswers[currentQuestionIndex * 2 + 1] = index;\n  else newAnswers[currentQuestionIndex * 2] = index;\n\n  setAnswers(newAnswers);\n  if (currentQuestionIndex !== questionnaire.questions.length - 1) {\n    if (\n      newAnswers[currentQuestionIndex * 2] !== undefined &&\n      newAnswers[currentQuestionIndex * 2 + 1] !== undefined\n    ) {\n      // Go to the next question.\n      setIsNextButtonDisabled(true);\n      selectChoiceLockRef.current = true;\n      const timeout = setTimeout(() => {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n        if (timeoutRef.current) {\n          clearTimeout(timeoutRef.current);\n        }\n        setIsNextButtonDisabled(false);\n        selectChoiceLockRef.current = false;\n      }, 190);\n      timeoutRef.current = timeout;\n    }\n  } else {\n    setIsAllowedToSubmit(true);\n  }\n};\n\nexport const embuLoadPartialAnswers = (\n  partialAnswer: { answers: number[] } | null,\n  data: QuestionnaireContent,\n  setIsAllowedToSubmit: (isAllowedToSubmit: boolean) => void,\n  setAnswers: (answers: { [x: number]: number }) => void,\n  setCurrentQuestionIndex: (currentQuestionIndex: number) => void\n) => {\n  if (partialAnswer?.answers?.length) {\n    const newAnswers = {} as { [index: number]: number };\n    let unfinishedQuestionIndex: number | undefined = undefined;\n    partialAnswer.answers.forEach((answer, index) => {\n      if (answer !== -1) newAnswers[index] = answer;\n      else if (unfinishedQuestionIndex === undefined)\n        unfinishedQuestionIndex = index;\n    });\n    if (\n      partialAnswer.answers.length ===\n        data.questionnaire.questions.length * 2 &&\n      unfinishedQuestionIndex === undefined\n    ) {\n      setIsAllowedToSubmit(true);\n    } else {\n      if (\n        embuValidationAll(\n          newAnswers,\n          data.questionnaire.questions.length,\n          undefined,\n          undefined,\n          undefined,\n          false\n        )\n      ) {\n        setIsAllowedToSubmit(true);\n      }\n    }\n    setAnswers(newAnswers);\n    if (unfinishedQuestionIndex === undefined)\n      setCurrentQuestionIndex(\n        Math.min(\n          partialAnswer.answers.length,\n          data.questionnaire.questions.length - 1\n        )\n      );\n    else setCurrentQuestionIndex(Math.floor(unfinishedQuestionIndex / 2));\n  }\n};\n\nexport const embuShouldDisableNextButton = (\n  answers: {\n    [x: number]: number;\n  },\n  currentQuestionIndex: number,\n  questionNumber: number,\n  isNextButtonDisabled: boolean\n) => {\n  return (currentQuestionIndex === questionNumber - 1 || // Last question.\n    (answers[currentQuestionIndex * 2] === undefined &&\n      answers[currentQuestionIndex * 2 + 1] === undefined) || // Current question is not answered.\n    isNextButtonDisabled) && // A variable in state to try to disable the button.\n    !(\n      // If the button is disabled, then current question is not answered and next question is not answered.\n      (\n        (answers[currentQuestionIndex * 2] !== undefined ||\n          answers[currentQuestionIndex * 2 + 1] !== undefined) &&\n        (answers[(currentQuestionIndex + 1) * 2] !== undefined ||\n          answers[(currentQuestionIndex + 1) * 2 + 1] !== undefined)\n      )\n    )\n    ? true\n    : false;\n};\n\nexport const embuValidationAll = (\n  answers: {\n    [x: number]: number;\n  },\n  questionNumber: number,\n  setIsErrorDialogShown?: (isErrorDialogShown: boolean) => void,\n  setErrorDialogMessage?: (errorMessage: string) => void,\n  setErrorDialogQuestionIndex?: (index: number) => void,\n  showError = true\n): boolean => {\n  let isAllEvenQuestionAnswered = true;\n  let isAllOddQuestionAnswered = true;\n  let isAllEvenQuestionNotAnswered = true;\n  let isAllOddQuestionNotAnswered = true;\n  let firstUndefinedIndex = -1;\n  for (let i = 0; i < questionNumber; i++) {\n    if (answers[i * 2] === undefined) {\n      isAllEvenQuestionAnswered = false;\n      if (firstUndefinedIndex === -1) {\n        firstUndefinedIndex = i * 2;\n      }\n    } else {\n      isAllEvenQuestionNotAnswered = false;\n    }\n    if (answers[i * 2 + 1] === undefined) {\n      isAllOddQuestionAnswered = false;\n      if (firstUndefinedIndex === -1) {\n        firstUndefinedIndex = i * 2 + 1;\n      }\n    } else {\n      isAllOddQuestionNotAnswered = false;\n    }\n  }\n  // If all even questions and odd questions is answered, return true.\n  if (isAllEvenQuestionAnswered === true && isAllOddQuestionAnswered === true) {\n    return true;\n  }\n  if (isAllEvenQuestionAnswered && isAllOddQuestionNotAnswered) {\n    return true;\n  }\n  if (isAllOddQuestionAnswered && isAllEvenQuestionNotAnswered) {\n    return true;\n  }\n  // Open a dialog to tell the user to answer a specific question.\n  if (firstUndefinedIndex !== -1) {\n    if (\n      showError &&\n      setIsErrorDialogShown &&\n      setErrorDialogQuestionIndex &&\n      setErrorDialogMessage\n    ) {\n      setErrorDialogQuestionIndex(Math.floor(firstUndefinedIndex / 2));\n      if (firstUndefinedIndex % 2 === 0) {\n        setErrorDialogMessage(\n          `您未填写第${Math.floor(firstUndefinedIndex / 2) + 1}题的父亲部分。`\n        );\n      } else {\n        setErrorDialogMessage(\n          `您未填写第${Math.floor(firstUndefinedIndex / 2) + 1}题的母亲部分。`\n        );\n      }\n      setIsErrorDialogShown(true);\n    }\n    return false;\n  }\n  return true;\n};\n","export const psqiValidation = (\n  currentQuestionIndex: number,\n  value: number | string,\n  setErrorMessage: (errorMessage: string) => void,\n  showError: () => void\n) => {\n  console.log(currentQuestionIndex, value);\n  if (value === undefined || value === null || value === \"\") {\n    setErrorMessage(\"未填写数值！\");\n    showError();\n    return false;\n  }\n  if (currentQuestionIndex === 0) {\n    if (value >= 24 || value < 0) {\n      setErrorMessage(\"数值不符合要求！\");\n      showError();\n      return false;\n    }\n  } else if (currentQuestionIndex === 1) {\n    if (value >= 1440 || value < 0) {\n      setErrorMessage(\"数值不符合要求！\");\n      showError();\n      return false;\n    }\n  } else if (currentQuestionIndex === 2) {\n    if (value >= 24 || value < 0) {\n      setErrorMessage(\"数值不符合要求！\");\n      showError();\n      return false;\n    }\n  } else if (currentQuestionIndex === 3) {\n    if (value < 0 || value >= 24) {\n      setErrorMessage(\"数值不符合要求！\");\n      showError();\n      return false;\n    }\n  }\n  return true;\n};\n","import { useMutation, useQuery } from \"@apollo/client\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  createStyles,\n  FormControl,\n  FormControlLabel,\n  makeStyles,\n  Radio,\n  Theme,\n  Link,\n  Fab,\n  useMediaQuery,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n  FormLabel,\n} from \"@material-ui/core\";\nimport React, {\n  SyntheticEvent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { ErrorIndicator, LoadingIndicator } from \"../../lib/components\";\nimport {\n  SAVE_PARTIAL_ANSWER,\n  SAVE_USER_ANSWER,\n} from \"../../lib/graphql/mutations\";\nimport {\n  SaveUserAnswer as SaveUserAnswerData,\n  SaveUserAnswerVariables,\n} from \"../../lib/graphql/mutations/SaveUserAnswer/__generated__/SaveUserAnswer\";\nimport { QUESTIONNAIRE_CONTENT } from \"../../lib/graphql/queries\";\nimport {\n  QuestionnaireContent as QuestionnaireContentData,\n  QuestionnaireContentVariables,\n} from \"../../lib/graphql/queries/QuestionnaireContent/__generated__/QuestionnaireContent\";\nimport { ProgressBar, QuestionIndexText } from \"./Components\";\nimport DirectionsRunIcon from \"@material-ui/icons/DirectionsRun\";\nimport {\n  SavePartialAnswer as SavePartialAnswerData,\n  SavePartialAnswerVariables,\n} from \"../../lib/graphql/mutations/SavePartialAnswer/__generated__/SavePartialAnswer\";\nimport { Timer } from \"./Components\";\nimport {\n  EMBU_FORM_KEY,\n  PSQI_FORM_KEY,\n  YAML_BROWN_FORM_KEY,\n} from \"../../lib/utils/constants\";\nimport {\n  yaleBrownCustomization,\n  yaleBrownSkipQuestions,\n  yaleBrownInitialLoad,\n  embuRadioButtonOnClick,\n  embuLoadPartialAnswers,\n  embuShouldDisableNextButton,\n  embuValidationAll,\n} from \"./Customization\";\nimport { PRIMARY_COLOR } from \"../..\";\nimport { psqiValidation } from \"./Customization/psqi\";\nimport { Patient } from \"../../lib/type\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formContainer: {\n      height: \"100%\",\n      width: \"100%\",\n      backgroundColor: \"#e8f1fd\",\n    },\n    form: {\n      width: 768,\n      maxWidth: \"90vw\",\n      margin: \"auto\",\n      paddingTop: 10,\n    },\n    titleCard: {\n      borderRadius: 8,\n      paddingBottom: 5,\n    },\n    titleCardColor: {\n      height: 10,\n      borderTopLeftRadius: 8,\n      borderTopRightRadius: 8,\n      backgroundColor: PRIMARY_COLOR,\n    },\n    titleCardContent: {\n      paddingTop: 5,\n      marginLeft: 5,\n      marginRight: 5,\n    },\n    titleCardMainText: {\n      fontSize: \"2rem\",\n      fontWeight: 400,\n      marginTop: 10,\n      marginBottom: 10,\n    },\n    questionCard: {\n      marginTop: 10,\n      borderRadius: 8,\n      marginBottom: 10,\n      paddingLeft: 5,\n      paddingRight: 5,\n    },\n    questionText: {\n      fontSize: \"1rem\",\n      fontWeight: 400,\n      marginBottom: 16,\n      marginTop: 10,\n      lineHeight: \"1.4rem\",\n    },\n    questionOptionText: {\n      fontSize: \"0.9rem\",\n      userSelect: \"none\",\n      WebkitUserSelect: \"none\",\n      WebkitTouchCallout: \"none\",\n      KhtmlUserSelect: \"none\",\n      MozUserSelect: \"none\",\n      msUserSelect: \"none\",\n    },\n    button: {\n      backgroundColor: \"#fff\",\n      color: PRIMARY_COLOR,\n      \"&:hover\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n    buttonWithRightMargin: {\n      marginRight: 10,\n    },\n    finishedText: {\n      fontSize: \"0.875rem\",\n      marginTop: 26,\n      marginBottom: 26,\n    },\n    homeLink: {\n      fontSize: \"0.875rem\",\n    },\n    exitButton: {\n      position: \"absolute\",\n      right: 20,\n      bottom: 20,\n      backgroundColor: \"#fff\",\n      \"&:hover\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n    timerContaner: {\n      position: \"absolute\",\n      left: 20,\n      bottom: 20,\n    },\n    footer: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n    },\n    progressWrapper: {\n      display: \"flex\",\n      alignItems: \"center\",\n      userSelect: \"none\",\n      WebkitUserSelect: \"none\",\n      WebkitTouchCallout: \"none\",\n      KhtmlUserSelect: \"none\",\n      MozUserSelect: \"none\",\n      msUserSelect: \"none\",\n    },\n    progressWrapperForSmallScreen: {\n      marginTop: 20,\n    },\n    questionParent: {\n      lineHeight: \"1.4rem\",\n      color: \"#757575\",\n    },\n    answerInput: {\n      marginRight: 10,\n      marginLeft: 10,\n    },\n    embuRadioContainer: {\n      width: \"50%\",\n    },\n  })\n);\n\ninterface Props {\n  patient: Patient;\n}\n\nexport const Form = ({ patient }: Props) => {\n  const isSmallScreen = useMediaQuery(\"(max-width:780px)\");\n  const classes = useStyles();\n  const query = new URLSearchParams(useLocation().search);\n  const id = query.get(\"id\");\n  const { loading, data } = useQuery<\n    QuestionnaireContentData,\n    QuestionnaireContentVariables\n  >(QUESTIONNAIRE_CONTENT, {\n    variables: {\n      id: id || \"\",\n    },\n    onCompleted: (data: QuestionnaireContentData) => {\n      const { partialAnswer } = data;\n      const initChoiceDisabled = data.questionnaire.questions.map(\n        (question) => {\n          return question.choices.map((_choice) => false);\n        }\n      );\n      if (data.questionnaire.key !== YAML_BROWN_FORM_KEY)\n        setChoiceDisabled(initChoiceDisabled);\n      else yaleBrownInitialLoad(data, initChoiceDisabled, setChoiceDisabled);\n\n      const localPartialAnswer = localStorage.getItem(\n        `${patient.userName}@${questionnaire.key}`\n      );\n      let answers: number[] = [];\n      if (partialAnswer?.answers?.length) {\n        answers = partialAnswer?.answers;\n        if (localPartialAnswer) {\n          const answerObject = JSON.parse(localPartialAnswer);\n          if (new Date(partialAnswer.date) > new Date(answerObject.date)) {\n            answers = partialAnswer?.answers;\n          } else {\n            answers = answerObject.answerArray;\n          }\n        }\n      } else if (localPartialAnswer) {\n        const answerObject = JSON.parse(localPartialAnswer);\n        answers = answerObject.answerArray;\n      }\n      if (data.questionnaire.key === EMBU_FORM_KEY) {\n        embuLoadPartialAnswers(\n          { answers },\n          data,\n          setIsAllowedToSubmit,\n          setAnswers,\n          setCurrentQuestionIndex\n        );\n      } else if (\n        partialAnswer?.answers?.length ||\n        localStorage.getItem(`${patient.userName}@${questionnaire.key}`)\n      ) {\n        const newAnswers = {} as { [index: number]: number };\n        let unfinishedQuestionIndex: number | undefined = undefined;\n        answers.forEach((answer, index) => {\n          if (answer !== -1) newAnswers[index] = answer;\n          else if (unfinishedQuestionIndex === undefined)\n            unfinishedQuestionIndex = index;\n        });\n        if (\n          answers.length === data.questionnaire.questions.length &&\n          unfinishedQuestionIndex === undefined\n        ) {\n          setIsAllowedToSubmit(true);\n        }\n        setAnswers(newAnswers);\n        if (unfinishedQuestionIndex === undefined)\n          setCurrentQuestionIndex(\n            Math.min(answers.length, data.questionnaire.questions.length - 1)\n          );\n        else setCurrentQuestionIndex(unfinishedQuestionIndex);\n      }\n    },\n    fetchPolicy: \"no-cache\",\n  });\n\n  const [saveUserAnswer] = useMutation<\n    SaveUserAnswerData,\n    SaveUserAnswerVariables\n  >(SAVE_USER_ANSWER, {\n    onCompleted: (data) => {\n      if (data.saveUserAnswer.didRequest) {\n        setIsDone(true);\n      }\n    },\n  });\n\n  const [savePartialAnswer] = useMutation<\n    SavePartialAnswerData,\n    SavePartialAnswerVariables\n  >(SAVE_PARTIAL_ANSWER);\n\n  const saveUserAnswerRef = useRef(saveUserAnswer);\n  const savePartialAnswerRef = useRef(savePartialAnswer);\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const autoSaveTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState<number>(0);\n  const [choiceDisabled, setChoiceDisabled] = useState<null | boolean[][]>();\n  const [answers, setAnswers] = useState<{ [index: number]: number }>({});\n  const [isDone, setIsDone] = useState(false);\n  const [isAllowedToSubmit, setIsAllowedToSubmit] = useState(false);\n  const [isNextButtonDisabled, setIsNextButtonDisabled] = useState(false);\n  const [confirmed, setConfirmed] = useState(false);\n  const history = useHistory();\n  const selectChoiceLockRef = useRef(false);\n  const [isErrorShown, setIsErrorShown] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const showError = () => {\n    setIsErrorShown(true);\n  };\n  // Error dialog.\n  const [isErrorDialogShown, setIsErrorDialogShown] = useState(false);\n  const closeErrorDialog = () => {\n    setIsErrorDialogShown(false);\n  };\n  const [errorDialogMessage, setErrorDialogMessage] = useState(\"\");\n  const [errorDialogQuestionIndex, setErrorDialogQuestionIndex] = useState<\n    number | null\n  >(null);\n  const goToCertainQuestion = () => {\n    if (errorDialogQuestionIndex !== null) {\n      setCurrentQuestionIndex(errorDialogQuestionIndex);\n    }\n    setIsErrorDialogShown(false);\n  };\n\n  const getAnswerArray = useCallback((): number[] => {\n    const questionnaire = data?.questionnaire;\n    if (!questionnaire) {\n      return [];\n    }\n    const answerArray = [];\n    let numberOfQuestions = questionnaire.questions.length;\n    if (questionnaire.key === EMBU_FORM_KEY) {\n      numberOfQuestions *= 2;\n    }\n    for (let i = 0; i < numberOfQuestions; i++) {\n      if (answers[i] !== undefined) answerArray.push(answers[i]);\n      else answerArray.push(-1);\n    }\n    return answerArray;\n  }, [answers, data?.questionnaire]);\n  const savePartialAnswerToBackend = useCallback(() => {\n    const answerArray = getAnswerArray();\n    if (id && answerArray.length !== 0)\n      return savePartialAnswerRef.current({\n        variables: {\n          input: { questionnaireId: id, answers: answerArray },\n        },\n      });\n    return Promise.resolve();\n  }, [getAnswerArray, id]);\n  const savePartialAnswerToLocalStorage = useCallback(() => {\n    if (data) {\n      const answerArray = getAnswerArray();\n      localStorage.setItem(\n        `${patient.userName}@${data.questionnaire.key}`,\n        JSON.stringify({\n          time: new Date(),\n          answerArray,\n        })\n      );\n    }\n  }, [getAnswerArray, patient.userName, data]);\n  useEffect(() => {\n    savePartialAnswerToLocalStorage();\n  }, [savePartialAnswerToLocalStorage]);\n  // // Don't send partial answers to backend automatically.\n  // useEffect(() => {\n  //   autoSaveTimeoutRef.current = setInterval(() => {\n  //     savePartialAnswerToBackend();\n  //   }, 10000);\n  //   return () => {\n  //     if (autoSaveTimeoutRef.current) {\n  //       clearInterval(autoSaveTimeoutRef.current);\n  //       autoSaveTimeoutRef.current = null;\n  //     }\n  //   };\n  // }, [savePartialAnswerToBackend]);\n\n  if (loading) {\n    return <LoadingIndicator />;\n  }\n  if (!data) {\n    return <div>Error</div>;\n  }\n\n  const { questionnaire } = data;\n\n  const closeConfirmDialog = () => {\n    setConfirmed(true);\n  };\n\n  const validation = async (all = false) => {\n    if (questionnaire.key === PSQI_FORM_KEY) {\n      if (all === true) {\n        for (let i = 0; i < questionnaire.questions.length; i++) {\n          if (!psqiValidation(i, answers[i], setErrorMessage, showError)) {\n            return false;\n          }\n        }\n        return true;\n      }\n      return psqiValidation(\n        currentQuestionIndex,\n        answers[currentQuestionIndex],\n        setErrorMessage,\n        showError\n      );\n    } else if (questionnaire.key === EMBU_FORM_KEY) {\n      if (all === true) {\n        return embuValidationAll(\n          answers,\n          questionnaire.questions.length,\n          setIsErrorDialogShown,\n          setErrorDialogMessage,\n          setErrorDialogQuestionIndex\n        );\n      }\n    }\n    return true;\n  };\n  const onNextButtonClick = async () => {\n    const validationResult = await validation();\n    if (validationResult === false) {\n      return;\n    }\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n  };\n\n  const onSubmit = async () => {\n    const validationResult = await validation(true);\n    if (validationResult === false) {\n      return;\n    }\n    if (autoSaveTimeoutRef.current) {\n      clearTimeout(autoSaveTimeoutRef.current);\n      autoSaveTimeoutRef.current = null;\n    }\n    if (id) {\n      const answerArray = getAnswerArray();\n      await saveUserAnswerRef.current({\n        variables: {\n          input: { questionnaireId: id, answers: answerArray },\n        },\n      });\n      localStorage.removeItem(`${patient.userName}@${questionnaire.key}`);\n    }\n  };\n\n  const onBackButtonClick = async () => {\n    // const validationResult = await validation();\n    // if (validationResult === false) {\n    //   return;\n    // }\n    setCurrentQuestionIndex(currentQuestionIndex - 1);\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n  };\n\n  const goToHome = () => {\n    history.push(\"/user/home\");\n  };\n\n  const handleExitButtonClick = async () => {\n    if (autoSaveTimeoutRef.current) {\n      clearTimeout(autoSaveTimeoutRef.current);\n      autoSaveTimeoutRef.current = null;\n    }\n    await savePartialAnswerToBackend();\n    goToHome();\n  };\n\n  const goToHomeLinkOnClick = (e: SyntheticEvent) => {\n    e.preventDefault();\n    goToHome();\n  };\n  const onAnswerInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newAnswers = { ...answers };\n    if (\n      e.target.value !== undefined &&\n      e.target.value !== null &&\n      e.target.value !== \"\"\n    )\n      newAnswers[currentQuestionIndex] = Number(e.target.value);\n    else delete newAnswers[currentQuestionIndex];\n    setAnswers(newAnswers);\n  };\n  const radioButtonOnClick = (\n    e: React.MouseEvent<HTMLLabelElement>,\n    index: number,\n    questionIndex: number\n  ) => {\n    if (\n      selectChoiceLockRef.current ||\n      (choiceDisabled && choiceDisabled[currentQuestionIndex][index])\n    ) {\n      return;\n    }\n    const newAnswers = { ...answers };\n    newAnswers[currentQuestionIndex] = index;\n    if (questionnaire.key === YAML_BROWN_FORM_KEY) {\n      yaleBrownCustomization(\n        setAnswers,\n        setChoiceDisabled,\n        choiceDisabled,\n        newAnswers,\n        currentQuestionIndex\n      );\n    } else {\n      setAnswers(newAnswers);\n    }\n    if (currentQuestionIndex !== questionnaire.questions.length - 1) {\n      setIsNextButtonDisabled(true);\n      selectChoiceLockRef.current = true;\n      const timeout = setTimeout(() => {\n        if (questionnaire.key === YAML_BROWN_FORM_KEY) {\n          yaleBrownSkipQuestions(\n            currentQuestionIndex,\n            setCurrentQuestionIndex,\n            index,\n            setIsAllowedToSubmit\n          );\n        } else {\n          setCurrentQuestionIndex(currentQuestionIndex + 1);\n          if (timeoutRef.current) {\n            clearTimeout(timeoutRef.current);\n          }\n        }\n        setIsNextButtonDisabled(false);\n        selectChoiceLockRef.current = false;\n      }, 190);\n      timeoutRef.current = timeout;\n    } else {\n      setIsAllowedToSubmit(true);\n    }\n  };\n  let checkNextButtonShouldDisable =\n    (currentQuestionIndex === questionnaire.questions.length - 1 || // Last question.\n      answers[currentQuestionIndex] === undefined || // Current question is not answered.\n      isNextButtonDisabled) && // A variable in state to try to disable the button.\n    !(\n      // If the button is disabled, then current question is not answered and next question is not answered.\n      (\n        answers[currentQuestionIndex] !== undefined &&\n        answers[currentQuestionIndex + 1] !== undefined\n      )\n    )\n      ? true\n      : false;\n  if (questionnaire.key === EMBU_FORM_KEY) {\n    checkNextButtonShouldDisable = embuShouldDisableNextButton(\n      answers,\n      currentQuestionIndex,\n      questionnaire.questions.length,\n      isNextButtonDisabled\n    );\n  }\n\n  const currentQuestion = questionnaire.questions[currentQuestionIndex];\n  return (\n    <div className={classes.formContainer}>\n      <div className={classes.form}>\n        <Card className={classes.titleCard} variant=\"outlined\">\n          <div className={classes.titleCardColor} />\n          <CardContent className={classes.titleCardContent}>\n            <div className={classes.titleCardMainText}>\n              {questionnaire.name}\n            </div>\n            {isDone && (\n              <>\n                <div className={classes.finishedText}>\n                  您已完成此量表的填写。\n                </div>\n                <Link\n                  onClick={goToHomeLinkOnClick}\n                  className={classes.homeLink}\n                  href=\"/\"\n                >\n                  回到主页\n                </Link>\n              </>\n            )}\n          </CardContent>\n        </Card>\n        {!isDone && (\n          <>\n            <Card className={classes.questionCard} variant=\"outlined\">\n              <CardContent>\n                {currentQuestion.parent ? (\n                  <div className={classes.questionParent}>\n                    {currentQuestion.parent}\n                  </div>\n                ) : null}\n                <div className={classes.questionText}>\n                  <QuestionIndexText\n                    index={currentQuestionIndex}\n                    totalSize={questionnaire.questions.length}\n                  />\n                  {currentQuestion.choices.length === 0 &&\n                  currentQuestion.content &&\n                  currentQuestion.content.includes(\"{input}\") ? (\n                    <>\n                      {currentQuestion.content.split(\"{input}\")[0]}\n                      <TextField\n                        type=\"number\"\n                        className={classes.answerInput}\n                        value={\n                          answers[currentQuestionIndex] !== null &&\n                          answers[currentQuestionIndex] !== undefined\n                            ? answers[currentQuestionIndex]\n                            : \"\"\n                        }\n                        onChange={onAnswerInputChange}\n                      />\n                      {currentQuestion.content.split(\"{input}\")[1]}\n                    </>\n                  ) : (\n                    currentQuestion.content\n                  )}\n                </div>\n                {questionnaire.key !== EMBU_FORM_KEY ? (\n                  <FormControl component=\"fieldset\">\n                    {currentQuestion.choices.map((choice, index) => (\n                      <FormControlLabel\n                        value={choice}\n                        control={<Radio color=\"primary\" />}\n                        key={`choice-${index}`}\n                        label={\n                          <span className={classes.questionOptionText}>\n                            {choice}\n                          </span>\n                        }\n                        disabled={\n                          choiceDisabled &&\n                          choiceDisabled[currentQuestionIndex][index]\n                            ? true\n                            : undefined\n                        }\n                        checked={answers[currentQuestionIndex] === index}\n                        onClick={(e: React.MouseEvent<HTMLLabelElement>) =>\n                          radioButtonOnClick(e, index, currentQuestionIndex)\n                        }\n                      />\n                    ))}\n                  </FormControl>\n                ) : (\n                  <>\n                    <FormControl\n                      component=\"fieldset\"\n                      className={classes.embuRadioContainer}\n                    >\n                      <FormLabel component=\"legend\">父亲</FormLabel>\n                      {currentQuestion.choices.map((choice, index) => (\n                        <FormControlLabel\n                          value={choice}\n                          control={<Radio color=\"primary\" />}\n                          key={`choice-${index}`}\n                          label={\n                            <span className={classes.questionOptionText}>\n                              {choice}\n                            </span>\n                          }\n                          checked={answers[currentQuestionIndex * 2] === index}\n                          onClick={(e) =>\n                            embuRadioButtonOnClick(\n                              e,\n                              index,\n                              currentQuestionIndex,\n                              selectChoiceLockRef,\n                              choiceDisabled,\n                              answers,\n                              setAnswers,\n                              questionnaire,\n                              setIsNextButtonDisabled,\n                              setCurrentQuestionIndex,\n                              timeoutRef,\n                              setIsAllowedToSubmit,\n                              false\n                            )\n                          }\n                        />\n                      ))}\n                    </FormControl>\n                    <FormControl component=\"fieldset\">\n                      <FormLabel component=\"legend\">母亲</FormLabel>\n                      {currentQuestion.choices.map((choice, index) => (\n                        <FormControlLabel\n                          value={choice}\n                          control={<Radio color=\"primary\" />}\n                          key={`choice-${index}`}\n                          label={\n                            <span className={classes.questionOptionText}>\n                              {choice}\n                            </span>\n                          }\n                          checked={\n                            answers[currentQuestionIndex * 2 + 1] === index\n                          }\n                          onClick={(e) =>\n                            embuRadioButtonOnClick(\n                              e,\n                              index,\n                              currentQuestionIndex,\n                              selectChoiceLockRef,\n                              choiceDisabled,\n                              answers,\n                              setAnswers,\n                              questionnaire,\n                              setIsNextButtonDisabled,\n                              setCurrentQuestionIndex,\n                              timeoutRef,\n                              setIsAllowedToSubmit,\n                              true\n                            )\n                          }\n                        />\n                      ))}\n                    </FormControl>\n                  </>\n                )}\n              </CardContent>\n            </Card>\n\n            <div className={isSmallScreen ? \"\" : classes.footer}>\n              <div>\n                <Button\n                  className={\n                    classes.buttonWithRightMargin + \" \" + classes.button\n                  }\n                  variant=\"contained\"\n                  onClick={onBackButtonClick}\n                  disabled={currentQuestionIndex !== 0 ? false : true}\n                >\n                  上一题\n                </Button>\n                <Button\n                  className={\n                    classes.buttonWithRightMargin + \" \" + classes.button\n                  }\n                  variant=\"contained\"\n                  onClick={onNextButtonClick}\n                  disabled={checkNextButtonShouldDisable}\n                >\n                  下一题\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={onSubmit}\n                  disabled={!isAllowedToSubmit}\n                >\n                  提交\n                </Button>\n              </div>\n              <div\n                className={\n                  classes.progressWrapper +\n                  \" \" +\n                  (isSmallScreen ? classes.progressWrapperForSmallScreen : \"\")\n                }\n              >\n                <ProgressBar\n                  totalNumber={questionnaire.questions.length}\n                  currentIndex={currentQuestionIndex}\n                />\n                {`第 ${currentQuestionIndex + 1} 题（共\n                 ${questionnaire.questions.length} 题）`}\n              </div>\n            </div>\n            <div className={classes.timerContaner}>\n              <Timer />\n            </div>\n            <Fab\n              className={classes.exitButton}\n              onClick={handleExitButtonClick}\n              variant=\"extended\"\n            >\n              <DirectionsRunIcon color=\"primary\" />\n              暂存并退出\n            </Fab>\n          </>\n        )}\n      </div>\n      <Dialog\n        open={!confirmed && !!questionnaire.instruction}\n        onClose={closeConfirmDialog}\n      >\n        <DialogTitle>指导语</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{questionnaire.instruction}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeConfirmDialog} color=\"primary\" autoFocus>\n            继续\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <ErrorIndicator\n        showError={isErrorShown}\n        setShowError={setIsErrorShown}\n        errorMessage={errorMessage}\n      />\n      <Dialog open={isErrorDialogShown} onClose={closeErrorDialog}>\n        <DialogTitle>提示</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{errorDialogMessage}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={goToCertainQuestion} color=\"primary\" autoFocus>\n            前往该题\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import { QuestionnaireContent } from \"../../../../lib/graphql/queries/QuestionnaireContent/__generated__/QuestionnaireContent\";\n\nexport const yaleBrownCustomization = (\n  setAnswers: (\n    value: React.SetStateAction<{\n      [index: number]: number;\n    }>\n  ) => void,\n  setChoiceDisabled: (\n    value: React.SetStateAction<boolean[][] | null | undefined>\n  ) => void,\n  choiceDisabled: boolean[][] | null | undefined,\n  newAnswers: {\n    [x: number]: number;\n  },\n  currentQuestionIndex: number\n) => {\n  if (currentQuestionIndex === 0) {\n    const autoChooseChoices = [1, 2, 3, 4];\n    if (newAnswers[currentQuestionIndex] === 0) {\n      for (const autoChooseChoiceIndex of autoChooseChoices) {\n        newAnswers[autoChooseChoiceIndex] = 0;\n      }\n      setAnswers(newAnswers);\n      if (choiceDisabled) {\n        const newChoiceDisabled = choiceDisabled.map((choices) => [...choices]);\n        for (const autoChooseChoiceIndex of autoChooseChoices) {\n          for (\n            let i = 0;\n            i < newChoiceDisabled[autoChooseChoiceIndex].length;\n            i++\n          ) {\n            if (i !== 0) {\n              newChoiceDisabled[autoChooseChoiceIndex][i] = true;\n            }\n          }\n        }\n        setChoiceDisabled(newChoiceDisabled);\n      }\n    } else {\n      setAnswers(newAnswers);\n      if (choiceDisabled) {\n        const newChoiceDisabled = choiceDisabled.map((choices) => [...choices]);\n        for (const autoChooseChoiceIndex of autoChooseChoices) {\n          for (\n            let i = 0;\n            i < newChoiceDisabled[autoChooseChoiceIndex].length;\n            i++\n          ) {\n            if (i !== 0) {\n              newChoiceDisabled[autoChooseChoiceIndex][i] = false;\n            }\n          }\n        }\n        setChoiceDisabled(newChoiceDisabled);\n      }\n    }\n  } else if (currentQuestionIndex === 5) {\n    const autoChooseChoices = [6, 7, 8, 9];\n    if (newAnswers[currentQuestionIndex] === 0) {\n      for (const autoChooseChoiceIndex of autoChooseChoices) {\n        newAnswers[autoChooseChoiceIndex] = 0;\n      }\n      setAnswers(newAnswers);\n      if (choiceDisabled) {\n        const newChoiceDisabled = choiceDisabled.map((choices) => [...choices]);\n        for (const autoChooseChoiceIndex of autoChooseChoices) {\n          for (\n            let i = 0;\n            i < newChoiceDisabled[autoChooseChoiceIndex].length;\n            i++\n          ) {\n            if (i !== 0) {\n              newChoiceDisabled[autoChooseChoiceIndex][i] = true;\n            }\n          }\n        }\n        setChoiceDisabled(newChoiceDisabled);\n      }\n    } else {\n      setAnswers(newAnswers);\n      if (choiceDisabled) {\n        const newChoiceDisabled = choiceDisabled.map((choices) => [...choices]);\n        for (const autoChooseChoiceIndex of autoChooseChoices) {\n          for (\n            let i = 0;\n            i < newChoiceDisabled[autoChooseChoiceIndex].length;\n            i++\n          ) {\n            if (i !== 0) {\n              newChoiceDisabled[autoChooseChoiceIndex][i] = false;\n            }\n          }\n        }\n        setChoiceDisabled(newChoiceDisabled);\n      }\n    }\n  } else {\n    setAnswers(newAnswers);\n  }\n};\n\nexport const yaleBrownSkipQuestions = (\n  currentQuestionnIndex: number,\n  setCurrentQuestionIndex: (value: React.SetStateAction<number>) => void,\n  choice: number,\n  setIsAllowedToSubmit: (value: React.SetStateAction<boolean>) => void\n) => {\n  if (currentQuestionnIndex === 0 && choice === 0) {\n    setCurrentQuestionIndex(5);\n  } else if (currentQuestionnIndex === 5 && choice === 0) {\n    setCurrentQuestionIndex(9);\n    setIsAllowedToSubmit(true);\n  } else {\n    setCurrentQuestionIndex(currentQuestionnIndex + 1);\n  }\n};\n\nexport const yaleBrownInitialLoad = (\n  data: QuestionnaireContent,\n  choiceDisabled: boolean[][],\n  setChoiceDisabled: (choiceDisabled: null | boolean[][]) => void\n) => {\n  const newChoiceDisabled = choiceDisabled.map((choices) => [...choices]);\n  if (\n    data.partialAnswer &&\n    data.partialAnswer.answers &&\n    data.partialAnswer.answers[0] === 0\n  ) {\n    const autoChooseChoices = [1, 2, 3, 4];\n    for (const autoChooseChoiceIndex of autoChooseChoices) {\n      for (\n        let i = 0;\n        i < newChoiceDisabled[autoChooseChoiceIndex].length;\n        i++\n      ) {\n        if (i !== 0) {\n          newChoiceDisabled[autoChooseChoiceIndex][i] = true;\n        }\n      }\n    }\n  }\n  if (\n    data.partialAnswer &&\n    data.partialAnswer.answers &&\n    data.partialAnswer.answers[5] === 0\n  ) {\n    const autoChooseChoices = [6, 7, 8, 9];\n    for (const autoChooseChoiceIndex of autoChooseChoices) {\n      for (\n        let i = 0;\n        i < newChoiceDisabled[autoChooseChoiceIndex].length;\n        i++\n      ) {\n        if (i !== 0) {\n          newChoiceDisabled[autoChooseChoiceIndex][i] = true;\n        }\n      }\n    }\n  }\n  setChoiceDisabled(newChoiceDisabled);\n};\n","import { useMutation } from \"@apollo/client\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  createStyles,\n  FormControl,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Theme,\n  Toolbar,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { ErrorIndicator } from \"../../lib/components\";\nimport { CREATE_ACCOUNT } from \"../../lib/graphql/mutations\";\nimport {\n  CreateAccount as CreateAccountData,\n  CreateAccountVariables,\n} from \"../../lib/graphql/mutations/CreateAccount/__generated__/CreateAccount\";\nimport { Viewer } from \"../../lib/type\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    createAccountCard: {\n      borderRadius: 8,\n      width: 800,\n      margin: \"30px auto 0\",\n    },\n    createAccountText: {\n      fontSize: \"1.5rem\",\n      textAlign: \"left\",\n      marginBottom: 10,\n      marginTop: 15,\n      paddingLeft: 40,\n    },\n    promptText: {\n      marginBottom: 24,\n      marginLeft: 40,\n      fontSize: \"1rem\",\n    },\n    inputContainer: {\n      margin: \"0 40px\",\n    },\n    input: {\n      width: \"30%\",\n      paddingRight: 10,\n      marginBottom: 10,\n    },\n    buttonContainer: {\n      marginTop: 30,\n      marginLeft: 40,\n      marginRight: 40,\n      marginBottom: 30,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n    },\n    formClassifyText: {\n      color: \"#5f6368\",\n      fontSize: \"0.8em\",\n      marginBottom: 5,\n      marginTop: 10,\n    },\n  })\n);\n\ninterface Props {\n  isAuthorized: boolean;\n  setViewer: (viewer: Viewer) => void;\n}\n\ninterface UserInfo {\n  name: string;\n  userName: string;\n  gender: string;\n  password: string;\n  education: string;\n  marriageStatus: string;\n  jobStatus: string;\n  age: string;\n}\n\nconst initialUserInfo = {\n  name: \"\",\n  userName: \"\",\n  gender: \"\",\n  password: \"\",\n  education: \"\",\n  marriageStatus: \"\",\n  jobStatus: \"\",\n  age: \"\",\n};\n\nexport const CreateAccount = ({ isAuthorized, setViewer }: Props) => {\n  const classes = useStyles();\n  const [userInfo, setUserInfo] = useState<UserInfo>(initialUserInfo);\n  const [reenteredPassword, setReenteredPassword] = useState<string>(\"\");\n  const [createAccount] = useMutation<\n    CreateAccountData,\n    CreateAccountVariables\n  >(CREATE_ACCOUNT, {\n    onCompleted: (data) => {\n      if (data && data.createAccount && data.createAccount.token) {\n        setViewer(data.createAccount);\n      }\n    },\n    onError: (error) => {\n      if (\n        error.message.includes(\"One user with this userName already exists.\")\n      ) {\n        setErrorMessage(\"此门诊号已被注册！\");\n        setShowError(true);\n        setErrorField(\"userNameDuplicate\");\n      }\n    },\n  });\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\n  const [showError, setShowError] = useState(false);\n  const [errorField, setErrorField] = useState<string>();\n  const createAccountButtonOnClick = () => {\n    if (!userInfo.userName) {\n      setErrorMessage(\"请输入您的门诊号！\");\n      setShowError(true);\n      setErrorField(\"userName\");\n      return;\n    }\n    if (!userInfo.password) {\n      setErrorMessage(\"请输入您的密码！\");\n      setShowError(true);\n      setErrorField(\"password\");\n      return;\n    }\n    if (!reenteredPassword) {\n      setErrorMessage(\"请确认您输入的密码！\");\n      setShowError(true);\n      setErrorField(\"reenteredPassword\");\n      return;\n    }\n    if (userInfo.password !== reenteredPassword) {\n      setErrorMessage(\"两次输入的密码不一致！\");\n      setShowError(true);\n      setErrorField(\"reenteredPasswordNotSame\");\n      return;\n    }\n    if (!userInfo.name) {\n      setErrorMessage(\"请输入您的姓名！\");\n      setShowError(true);\n      setErrorField(\"name\");\n      return;\n    }\n    createAccount({\n      variables: {\n        input: {\n          ...userInfo,\n          age: userInfo.age === \"\" ? undefined : Number(userInfo.age),\n        },\n      },\n    });\n  };\n  const onUserNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserInfo({ ...userInfo, userName: e.target.value });\n    if (\n      errorField === \"userName\" ||\n      (errorField === \"userNameDuplicate\" && e.target.value)\n    ) {\n      setErrorField(undefined);\n    }\n  };\n  const onPasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserInfo({ ...userInfo, password: e.target.value });\n    if (errorField === \"password\" && e.target.value) {\n      setErrorField(undefined);\n    }\n  };\n  const onReenteredPasswordChange = (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setReenteredPassword(e.target.value);\n    if (errorField === \"reenteredPassword\" && e.target.value) {\n      setErrorField(undefined);\n    } else if (\n      errorField === \"reenteredPasswordNotSame\" &&\n      e.target.value === userInfo.password\n    ) {\n      setErrorField(undefined);\n    }\n  };\n  const onNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserInfo({ ...userInfo, name: e.target.value });\n    if (errorField === \"name\" && e.target.value) {\n      setErrorField(undefined);\n    }\n  };\n  const onGenderChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setUserInfo({ ...userInfo, gender: e.target.value as string });\n  };\n  const onAgeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserInfo({ ...userInfo, age: e.target.value });\n  };\n  const onEducationChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setUserInfo({ ...userInfo, education: e.target.value as string });\n  };\n  const onJobChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserInfo({ ...userInfo, jobStatus: e.target.value });\n  };\n  const onMarraigeChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setUserInfo({ ...userInfo, marriageStatus: e.target.value as string });\n  };\n  if (isAuthorized) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <>\n      <Toolbar />\n      <Card className={classes.createAccountCard} variant=\"outlined\">\n        <CardContent>\n          <div className={classes.createAccountText}>注册</div>\n          <div className={classes.promptText}>请输入您的个人信息</div>\n          <form>\n            <div className={classes.inputContainer}>\n              <div className={classes.formClassifyText}>登录信息</div>\n              <div>\n                <TextField\n                  required\n                  className={classes.input}\n                  color=\"primary\"\n                  label=\"门诊号\"\n                  size=\"small\"\n                  value={userInfo.userName}\n                  onChange={onUserNameChange}\n                  helperText={\n                    errorField === \"userName\"\n                      ? \"请输入您的门诊号！\"\n                      : errorField === \"userNameDuplicate\"\n                      ? \"此门诊号已被注册！\"\n                      : undefined\n                  }\n                  error={\n                    errorField === \"userName\" ||\n                    errorField === \"userNameDuplicate\"\n                      ? true\n                      : undefined\n                  }\n                />\n              </div>\n              <div>\n                <TextField\n                  required\n                  className={classes.input}\n                  color=\"primary\"\n                  type=\"password\"\n                  label=\"密码\"\n                  size=\"small\"\n                  value={userInfo.password}\n                  onChange={onPasswordChange}\n                  helperText={\n                    errorField === \"password\" ? \"请输入您的密码！\" : undefined\n                  }\n                  error={errorField === \"password\" ? true : undefined}\n                />\n                <TextField\n                  required\n                  type=\"password\"\n                  className={classes.input}\n                  color=\"primary\"\n                  label=\"确认密码\"\n                  size=\"small\"\n                  value={reenteredPassword}\n                  onChange={onReenteredPasswordChange}\n                  helperText={\n                    errorField === \"reenteredPassword\"\n                      ? \"请确认您的密码！\"\n                      : errorField === \"reenteredPasswordNotSame\"\n                      ? \"两次输入的密码不一致！\"\n                      : undefined\n                  }\n                  error={\n                    errorField === \"reenteredPassword\" ||\n                    errorField === \"reenteredPasswordNotSame\"\n                      ? true\n                      : undefined\n                  }\n                />\n              </div>\n              <div className={classes.formClassifyText}>个人信息</div>\n              <TextField\n                required\n                className={classes.input}\n                color=\"primary\"\n                label=\"姓名\"\n                size=\"small\"\n                value={userInfo.name}\n                onChange={onNameChange}\n                helperText={\n                  errorField === \"name\" ? \"请输入您的姓名!\" : undefined\n                }\n                error={errorField === \"name\" ? true : undefined}\n              />\n              <FormControl className={classes.input} size=\"small\">\n                <InputLabel>性别</InputLabel>\n                <Select\n                  color=\"primary\"\n                  label=\"性别\"\n                  value={userInfo.gender}\n                  onChange={onGenderChange}\n                >\n                  <MenuItem value=\"男\">男</MenuItem>\n                  <MenuItem value=\"女\">女</MenuItem>\n                </Select>\n              </FormControl>\n              <TextField\n                className={classes.input}\n                color=\"primary\"\n                label=\"年龄\"\n                size=\"small\"\n                value={userInfo.age}\n                onChange={onAgeChange}\n              />\n              <FormControl className={classes.input} size=\"small\">\n                <InputLabel>教育</InputLabel>\n                <Select\n                  color=\"primary\"\n                  value={userInfo.education}\n                  onChange={onEducationChange}\n                >\n                  <MenuItem value=\"高中以下\">高中以下</MenuItem>\n                  <MenuItem value=\"大中专科\">大中专科</MenuItem>\n                  <MenuItem value=\"本科\">本科</MenuItem>\n                  <MenuItem value=\"硕士\">硕士</MenuItem>\n                  <MenuItem value=\"博士\">博士</MenuItem>\n                </Select>\n              </FormControl>\n              <TextField\n                className={classes.input}\n                color=\"primary\"\n                label=\"职业\"\n                size=\"small\"\n                value={userInfo.jobStatus}\n                onChange={onJobChange}\n              />\n              <FormControl className={classes.input} size=\"small\">\n                <InputLabel>婚姻</InputLabel>\n                <Select\n                  color=\"primary\"\n                  value={userInfo.marriageStatus}\n                  onChange={onMarraigeChange}\n                >\n                  <MenuItem value=\"已婚\">已婚</MenuItem>\n                  <MenuItem value=\"未婚\">未婚</MenuItem>\n                </Select>\n              </FormControl>\n            </div>\n\n            <div className={classes.buttonContainer}>\n              <Link to=\"/login\">\n                <Button>我已有账号</Button>\n              </Link>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={createAccountButtonOnClick}\n              >\n                注册\n              </Button>\n            </div>\n          </form>\n        </CardContent>\n      </Card>\n      <ErrorIndicator\n        showError={showError}\n        setShowError={setShowError}\n        errorMessage={errorMessage}\n      />\n    </>\n  );\n};\n","import { useQuery } from \"@apollo/client\";\nimport {\n  Button,\n  Checkbox,\n  createStyles,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Theme,\n} from \"@material-ui/core\";\nimport { CheckCircleOutline } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\nimport { LoadingIndicator } from \"../../lib/components\";\nimport { QUESTIONNAIRE_LIST } from \"../../lib/graphql/queries\";\nimport {\n  QuestionnaireList as QuestionnaireListData,\n  QuestionnaireListVariables,\n} from \"../../lib/graphql/queries/QuestionnaireList/__generated__/QuestionnaireList\";\nimport { ReportPdf } from \"../../lib/components\";\nimport { withReportPdfData } from \"./components\";\nimport {\n  NO_DOCTOR_LOGIN_ERROR_MESSAGE,\n  NO_PATIENT_LOGIN_ERROR_MESSAGE,\n} from \"../../lib/utils/constants\";\nimport { Redirect } from \"react-router-dom\";\n\nconst PdfViewer = withReportPdfData(ReportPdf);\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    content: {\n      padding: \"5px 10px\",\n    },\n    questionnaireTable: {\n      marginTop: 20,\n      marginBottom: 20,\n    },\n    doneIcon: {\n      color: \"#4caf50\",\n    },\n  })\n);\n\nexport const Report = () => {\n  const classes = useStyles();\n  const { loading, data, error: questionnaireListError } = useQuery<\n    QuestionnaireListData,\n    QuestionnaireListVariables\n  >(QUESTIONNAIRE_LIST, {\n    variables: { isReport: true },\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      const questionnaireList = data.questionnaireList;\n      let count = 0;\n      for (const questionnaire of questionnaireList) {\n        if (questionnaire.done) {\n          count += 1;\n        }\n      }\n      setNumberOfFinishedQuestionnaires(count);\n      const newselectedUserAnswers = new Set<string>();\n      for (const questionnaire of questionnaireList) {\n        if (questionnaire.done && questionnaire.userAnswerId)\n          newselectedUserAnswers.add(questionnaire.userAnswerId);\n      }\n      setSelectedUserAnswers(newselectedUserAnswers);\n    },\n  });\n  const [selectedUserAnswers, setSelectedUserAnswers] = useState<Set<string>>(\n    new Set<string>()\n  );\n  const [\n    numberOfFinishedQuestionnaires,\n    setNumberOfFinishedQuestionnaires,\n  ] = useState<number | null>(null);\n  const [isReportVisible, setIsReportVisible] = useState(false);\n\n  if (isReportVisible) {\n    return (\n      <PdfViewer\n        userAnswerIds={Array.from(selectedUserAnswers)}\n        closeReport={() => setIsReportVisible(false)}\n      />\n    );\n  }\n  if (questionnaireListError?.message === NO_DOCTOR_LOGIN_ERROR_MESSAGE) {\n    // eslint-disable-next-line no-restricted-globals\n    location.reload();\n  }\n  if (questionnaireListError?.message === NO_PATIENT_LOGIN_ERROR_MESSAGE) {\n    // eslint-disable-next-line no-restricted-globals\n    location.reload();\n  }\n  if (loading || !data || numberOfFinishedQuestionnaires === null) {\n    return <LoadingIndicator />;\n  }\n  const questionnaireList = data.questionnaireList;\n\n  const selectQuestionnaire = (\n    event: React.ChangeEvent<HTMLInputElement>,\n    userAnswerId: string\n  ) => {\n    const checked = event.target.checked;\n    const newselectedUserAnswers = new Set(selectedUserAnswers);\n    if (checked) {\n      newselectedUserAnswers.add(userAnswerId);\n    } else {\n      newselectedUserAnswers.delete(userAnswerId);\n    }\n    setSelectedUserAnswers(newselectedUserAnswers);\n  };\n  const selectAllQuestionnaires = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const checked = event.target.checked;\n    const newselectedUserAnswers = new Set<string>();\n    if (checked) {\n      for (const questionnaire of questionnaireList) {\n        if (questionnaire.done && questionnaire.userAnswerId)\n          newselectedUserAnswers.add(questionnaire.userAnswerId);\n      }\n    }\n    setSelectedUserAnswers(newselectedUserAnswers);\n  };\n  const generateReport = () => {\n    setIsReportVisible(true);\n  };\n  return (\n    <div className={classes.content}>\n      <TableContainer component={Paper} className={classes.questionnaireTable}>\n        <Table size=\"small\" aira-label=\"选择已完成的量表，生成报告\">\n          <TableHead>\n            <TableRow>\n              <TableCell padding=\"checkbox\">\n                <Checkbox\n                  checked={\n                    selectedUserAnswers.size ===\n                      numberOfFinishedQuestionnaires &&\n                    selectedUserAnswers.size !== 0\n                  }\n                  disabled={numberOfFinishedQuestionnaires === 0}\n                  onChange={selectAllQuestionnaires}\n                />\n              </TableCell>\n              <TableCell>量表</TableCell>\n              <TableCell>完成状态</TableCell>\n              <TableCell>完成日期</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {questionnaireList.map((questionnaire, index) => (\n              <TableRow key={`questionnaire-${index}`}>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    disabled={!questionnaire.done}\n                    checked={\n                      !!questionnaire.userAnswerId &&\n                      selectedUserAnswers.has(questionnaire.userAnswerId)\n                    }\n                    onChange={(e) =>\n                      questionnaire.userAnswerId &&\n                      selectQuestionnaire(e, questionnaire.userAnswerId)\n                    }\n                  />\n                </TableCell>\n                <TableCell>{questionnaire.name}</TableCell>\n                <TableCell>\n                  {questionnaire.done ? (\n                    <CheckCircleOutline\n                      className={classes.doneIcon}\n                      fontSize=\"small\"\n                    />\n                  ) : null}\n                </TableCell>\n                <TableCell>\n                  {questionnaire.displayedFillInDate || null}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        disabled={selectedUserAnswers.size === 0}\n        onClick={generateReport}\n      >\n        生成报告\n      </Button>\n    </div>\n  );\n};\n","import {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface Props {\n  isDialogOpen: boolean;\n  handleDialogClose: () => void;\n  additionalFields: string[];\n  setAdditionalFields: (additionalFields: string[]) => void;\n}\n\nexport const ADDITIONAL_FIELD_KEYS = [\n  \"depressed\",\n  \"anxious\",\n  \"biphasic\",\n  \"schizophrenia\",\n] as const;\nexport const ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES = [\n  \"抑郁障碍\",\n  \"焦虑障碍\",\n  \"双相障碍\",\n  \"精神分裂症\",\n] as const;\n\nexport const removeElementFromArray = <T,>(array: T[], element: T) => {\n  const newArray: T[] = [];\n  for (let currentElement of array) {\n    if (currentElement !== element) {\n      newArray.push(currentElement);\n    }\n  }\n  return newArray;\n};\n\nexport const AdditionalFieldsModal = ({\n  isDialogOpen,\n  handleDialogClose,\n  additionalFields,\n  setAdditionalFields,\n}: Props) => {\n  const selectAdditionalField = (\n    fieldKey: typeof ADDITIONAL_FIELD_KEYS[number],\n    isSelected: boolean\n  ) => {\n    if (!isSelected) {\n      setAdditionalFields(removeElementFromArray(additionalFields, fieldKey));\n    } else if (!additionalFields.includes(fieldKey)) {\n      setAdditionalFields([...additionalFields, fieldKey]);\n    }\n  };\n  return (\n    <Dialog\n      open={isDialogOpen}\n      onClose={handleDialogClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">高级筛选</DialogTitle>\n      <DialogContent>\n        {ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES.map((displayName, index) => {\n          return (\n            <div key={displayName}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={additionalFields.includes(\n                      ADDITIONAL_FIELD_KEYS[index]\n                    )}\n                    onChange={(event) => {\n                      selectAdditionalField(\n                        ADDITIONAL_FIELD_KEYS[index],\n                        event.target.checked\n                      );\n                    }}\n                  />\n                }\n                label={displayName}\n              />\n            </div>\n          );\n        })}\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  Button,\n  Checkbox,\n  Chip,\n  createStyles,\n  FormControl,\n  FormControlLabel,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Theme,\n} from \"@material-ui/core\";\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport React, { forwardRef, useImperativeHandle, useState } from \"react\";\nimport \"moment/locale/zh-cn\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport SettingsBackupRestoreIcon from \"@material-ui/icons/SettingsBackupRestore\";\nimport cnLocale from \"date-fns/locale/zh-CN\";\nimport { ErrorIndicator } from \"../../../../lib/components\";\nimport { QueryUserVariables } from \"../../../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\nimport { UsersFilter } from \"../../../../lib/graphql/globalTypes\";\nimport { INITAL_ONLY_MY_PATIENT } from \"../..\";\nimport TuneIcon from \"@material-ui/icons/Tune\";\nimport {\n  AdditionalFieldsModal,\n  ADDITIONAL_FIELD_KEYS,\n  ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES,\n  removeElementFromArray,\n} from \"../AdditionalFieldsModal\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport { PRIMARY_COLOR } from \"../../../..\";\n\nconst AGE_RANGE_ERROR_MESSAGE_TEXT = \"最小年龄应小于最大年龄！\";\nconst AGE_NEGATIVE_ERROR_MESSAGE = \"年龄不能为负数！\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    promptText: {\n      color: \"#5f6368\",\n      fontSize: \"0.8em\",\n      paddingBottom: 5,\n      paddingTop: 5,\n    },\n    input: {\n      width: \"30%\",\n      paddingRight: 10,\n      paddingBottom: 5,\n    },\n    rangeWrapper: {\n      display: \"inline-block\",\n    },\n    ageRangeInput: {\n      width: \"40%\",\n    },\n    dateRangeWrapper: {\n      width: \"60%\",\n    },\n    ageRangeWrapper: {\n      width: \"30%\",\n      paddingRight: 10,\n    },\n    dateRangeInput: {\n      width: \"50%\",\n      paddingRight: 10,\n    },\n    ageInputIconWrapper: {\n      width: \"20%\",\n      display: \"inline-flex\",\n      justifyContent: \"center\",\n      paddingTop: 20,\n    },\n    buttonWrapper: {\n      paddingTop: 10,\n    },\n    extraFieldsWrapper: {\n      paddingTop: 10,\n    },\n    searchButton: {\n      marginRight: 10,\n    },\n    whiteButton: {\n      backgroundColor: \"#fff\",\n      color: PRIMARY_COLOR,\n      \"&:hover\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n    rangeFormWrapper: {\n      width: \"100%\",\n      alignItems: \"flex-start\",\n      display: \"flex\",\n    },\n    ageInputIcon: {\n      width: 16,\n      height: 16,\n      color: \"rgba(0, 0, 0, 0.54)\",\n    },\n    chip: {\n      marginRight: 5,\n    },\n    additionalFieldButton: {\n      marginRight: 5,\n    },\n  })\n);\n\nconst datePickerProps = {\n  format: \"yyyy/MM/dd\",\n  okLabel: \"确定\",\n  cancelLabel: \"取消\",\n  invalidLabel: \"输入的日期有误！\",\n  maxDateMessage: \"输入的日期太大！\",\n  minDateMessage: \"输入的日期太小！\",\n  invalidDateMessage: \"输入的日期有误！\",\n  size: \"small\" as const,\n};\n\ninterface Props {\n  searchPatients: (searchParams: QueryUserVariables) => void;\n  limit: number;\n  currentPageIndex: number;\n  setCurrentPageIndex: (currentPageIndex: number) => void;\n  filter: UsersFilter;\n}\n\nexport interface SearchPatientFormHandle {\n  search: () => void;\n}\n\nexport const SearchPatientForm = forwardRef<SearchPatientFormHandle, Props>(\n  (\n    { searchPatients, limit, currentPageIndex, setCurrentPageIndex, filter },\n    ref\n  ) => {\n    const classes = useStyles();\n    const [userName, setUserName] = useState(\"\");\n    const onUserNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setUserName(e.target.value);\n    };\n\n    const [name, setName] = useState(\"\");\n    const onNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setName(e.target.value);\n    };\n\n    const [gender, setGender] = useState<\"男\" | \"女\" | \"全部\" | \"\">(\"\");\n    const onGenderChange = (\n      e: React.ChangeEvent<{\n        name?: string | undefined;\n        value: unknown;\n      }>\n    ) => {\n      setGender(e.target.value as typeof gender);\n    };\n\n    const [ageRange, setAgeRange] = useState({\n      min: \"\",\n      max: \"\",\n    });\n    const onMinAgeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const newMinAge = Number(e.target.value);\n      if (errorField === \"ageRange\") {\n        if (newMinAge <= Number(ageRange.max) || newMinAge === 0) {\n          setErrorField(null);\n        }\n      }\n      if (errorField === \"minAge\") {\n        if (newMinAge >= 0) {\n          setErrorField(null);\n        }\n      }\n      setAgeRange({ ...ageRange, min: e.target.value });\n    };\n    const onMaxAgeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const newMaxAge = Number(e.target.value);\n      if (errorField === \"ageRange\") {\n        if (newMaxAge >= Number(ageRange.min) || newMaxAge === 0) {\n          setErrorField(null);\n        }\n      }\n      if (errorField === \"maxAge\") {\n        if (newMaxAge >= 0) {\n          setErrorField(null);\n        }\n      }\n      setAgeRange({ ...ageRange, max: e.target.value });\n    };\n\n    const [dateRange, setDateRange] = useState<{\n      min: Date | null;\n      max: Date | null;\n    }>({\n      min: null,\n      max: null,\n    });\n    const onMinDateChange = (date: Date | null, _value?: string | null) => {\n      if (errorField === \"dateRange\") {\n        if (date === null || (dateRange.max && +date <= +dateRange.max)) {\n          setErrorField(null);\n        }\n      }\n      setDateRange({\n        ...dateRange,\n        min: date,\n      });\n    };\n    const onMaxDateChange = (date: Date | null, _value?: string | null) => {\n      if (errorField === \"dateRange\") {\n        if (date === null || (dateRange.min && +date >= +dateRange.min)) {\n          setErrorField(null);\n        }\n      }\n      setDateRange({\n        ...dateRange,\n        max: date,\n      });\n    };\n\n    const [onlyMyPatient, setOnlyMyPatient] = useState(false);\n    const handleOnlyMyPatientCheckboxChange = (\n      event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n      setOnlyMyPatient(event.target.checked);\n    };\n\n    const [showError, setShowError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [errorField, setErrorField] = useState<null | string>(null);\n    const [\n      isAdditionalFieldsModalOpen,\n      setIsAdditionalFieldsModalOpen,\n    ] = useState(false);\n    const [additionalFields, setAdditionalFields] = useState<string[]>([]);\n\n    const handleAdditionalFieldsModalClose = () => {\n      setIsAdditionalFieldsModalOpen(false);\n    };\n\n    const handleAdditionalFieldsModalOpen = () => {\n      setIsAdditionalFieldsModalOpen(true);\n    };\n\n    const handleSearchButtonClick = () => {\n      if (ageRange.min && Number(ageRange.min) < 0) {\n        setErrorMessage(AGE_NEGATIVE_ERROR_MESSAGE);\n        setShowError(true);\n        setErrorField(\"minAge\");\n        return;\n      }\n      if (ageRange.max && Number(ageRange.max) < 0) {\n        setErrorMessage(AGE_NEGATIVE_ERROR_MESSAGE);\n        setShowError(true);\n        setErrorField(\"maxAge\");\n        return;\n      }\n      if (\n        ageRange.min &&\n        ageRange.max &&\n        Number(ageRange.min) > Number(ageRange.max)\n      ) {\n        setErrorMessage(AGE_RANGE_ERROR_MESSAGE_TEXT);\n        setShowError(true);\n        setErrorField(\"ageRange\");\n        return;\n      }\n\n      if (dateRange.min && dateRange.max && dateRange.min > dateRange.max) {\n        setErrorMessage(\"起始日期应在截止日期之前！\");\n        setShowError(true);\n        setErrorField(\"dateRange\");\n        return;\n      }\n\n      setCurrentPageIndex(0);\n      searchPatients({\n        userName,\n        name,\n        gender,\n        ageRange: {\n          min: ageRange.min ? Number(ageRange.min) : null,\n          max: ageRange.max ? Number(ageRange.max) : null,\n        },\n        minSignUpDate: dateRange.min\n          ? {\n              year: dateRange.min.getFullYear(),\n              month: dateRange.min.getMonth(),\n              day: dateRange.min.getDate(),\n            }\n          : null,\n        maxSignUpDate: dateRange.max\n          ? {\n              year: dateRange.max.getFullYear(),\n              month: dateRange.max.getMonth(),\n              day: dateRange.max.getDate(),\n            }\n          : null,\n        limit,\n        currentPageIndex: 0,\n        onlyMyPatient,\n        filter,\n        additionalFields,\n      });\n    };\n\n    useImperativeHandle(ref, () => ({\n      search: () => {\n        handleSearchButtonClick();\n      },\n    }));\n    const handleResetButtonClick = () => {\n      setUserName(\"\");\n      setName(\"\");\n      setGender(\"\");\n      setAgeRange({\n        min: \"\",\n        max: \"\",\n      });\n      setDateRange({\n        min: null,\n        max: null,\n      });\n      setErrorField(null);\n      setCurrentPageIndex(0);\n      setOnlyMyPatient(INITAL_ONLY_MY_PATIENT);\n      searchPatients({\n        limit,\n        currentPageIndex: 0,\n        filter,\n        onlyMyPatient: INITAL_ONLY_MY_PATIENT,\n      });\n      setAdditionalFields([]);\n    };\n    return (\n      <form noValidate autoComplete=\"off\">\n        <div className={classes.promptText}>个人信息</div>\n        <div>\n          <TextField\n            label=\"门诊号\"\n            size=\"small\"\n            className={classes.input}\n            value={userName}\n            onChange={onUserNameChange}\n          />\n          <TextField\n            label=\"姓名\"\n            size=\"small\"\n            className={classes.input}\n            value={name}\n            onChange={onNameChange}\n          />\n          <FormControl className={classes.input} size=\"small\">\n            <InputLabel>性别</InputLabel>\n            <Select\n              color=\"primary\"\n              label=\"性别\"\n              value={gender}\n              onChange={onGenderChange}\n            >\n              <MenuItem value=\"男\">男</MenuItem>\n              <MenuItem value=\"女\">女</MenuItem>\n              <MenuItem value=\"全部\">全部</MenuItem>\n            </Select>\n          </FormControl>\n          <div className={classes.rangeFormWrapper}>\n            <div\n              className={classes.ageRangeWrapper + \" \" + classes.rangeWrapper}\n            >\n              <div className={classes.promptText}>年龄</div>\n              <div>\n                <TextField\n                  label=\"最小年龄\"\n                  size=\"small\"\n                  type=\"number\"\n                  className={classes.ageRangeInput}\n                  value={ageRange.min}\n                  onChange={onMinAgeChange}\n                  error={\n                    errorField === \"ageRange\" || errorField === \"minAge\"\n                      ? true\n                      : undefined\n                  }\n                />\n                <span className={classes.ageInputIconWrapper}>\n                  <ArrowForwardIcon className={classes.ageInputIcon} />\n                </span>\n                <TextField\n                  label=\"最大年龄\"\n                  size=\"small\"\n                  type=\"number\"\n                  className={classes.ageRangeInput}\n                  value={ageRange.max}\n                  onChange={onMaxAgeChange}\n                  error={\n                    errorField === \"ageRange\" || errorField === \"maxAge\"\n                      ? true\n                      : undefined\n                  }\n                />\n              </div>\n            </div>\n            <div\n              className={classes.dateRangeWrapper + \" \" + classes.rangeWrapper}\n            >\n              <div className={classes.promptText}>注册时间</div>\n              <MuiPickersUtilsProvider utils={DateFnsUtils} locale={cnLocale}>\n                <DatePicker\n                  value={dateRange.min}\n                  onChange={onMinDateChange}\n                  label={\"起始日期\"}\n                  className={classes.dateRangeInput}\n                  {...datePickerProps}\n                  error={errorField === \"dateRange\" ? true : undefined}\n                />\n                <DatePicker\n                  value={dateRange.max}\n                  onChange={onMaxDateChange}\n                  label={\"截止日期\"}\n                  className={classes.dateRangeInput}\n                  {...datePickerProps}\n                  error={errorField === \"dateRange\" ? true : undefined}\n                />\n              </MuiPickersUtilsProvider>\n            </div>\n          </div>\n        </div>\n        <div className={classes.extraFieldsWrapper}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={onlyMyPatient}\n                onChange={handleOnlyMyPatientCheckboxChange}\n              />\n            }\n            label=\"只选择我的病人\"\n          />\n          <Button\n            startIcon={<TuneIcon />}\n            onClick={handleAdditionalFieldsModalOpen}\n            color=\"primary\"\n            className={classes.additionalFieldButton}\n          >\n            高级筛选\n          </Button>\n          {ADDITIONAL_FIELD_KEYS.map((fieldKey, index) => {\n            if (additionalFields.includes(fieldKey)) {\n              const onChipDelete = () => {\n                setAdditionalFields(\n                  removeElementFromArray(additionalFields, fieldKey)\n                );\n              };\n              return (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  onDelete={onChipDelete}\n                  icon={<InfoIcon />}\n                  color=\"primary\"\n                  label={ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES[index]}\n                  key={fieldKey}\n                  className={\n                    index !== additionalFields.length - 1 ? classes.chip : \"\"\n                  }\n                />\n              );\n            }\n            return null;\n          })}\n        </div>\n        <div className={classes.buttonWrapper}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<SearchIcon />}\n            className={classes.searchButton}\n            onClick={handleSearchButtonClick}\n          >\n            搜索\n          </Button>\n          <Button\n            variant=\"contained\"\n            startIcon={<SettingsBackupRestoreIcon />}\n            className={classes.whiteButton}\n            onClick={handleResetButtonClick}\n          >\n            重置\n          </Button>\n        </div>\n        <ErrorIndicator\n          showError={showError}\n          setShowError={setShowError}\n          errorMessage={errorMessage}\n        />\n        <AdditionalFieldsModal\n          isDialogOpen={isAdditionalFieldsModalOpen}\n          handleDialogClose={handleAdditionalFieldsModalClose}\n          additionalFields={additionalFields}\n          setAdditionalFields={setAdditionalFields}\n        />\n      </form>\n    );\n  }\n);\n","import { createStyles, Divider, makeStyles, Theme } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 48,\n      display: \"flex\",\n      alignItems: \"center\",\n      paddingLeft: 10,\n      fontWeight: 500,\n      fontSize: \"1.125rem\",\n    },\n  })\n);\n\ninterface Props {\n  text: string;\n}\n\nexport const Header = ({ text }: Props) => {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.root}>{text}</div>\n      <Divider />\n    </>\n  );\n};\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport React, { useMemo, useState } from \"react\";\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport { QueryUser_queryUser_users_finishedForms as FinishedForms } from \"../../../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\nimport { FormResult } from \"../../..\";\nimport { LineChartPopOver } from \"../../../../lib/components\";\n\ninterface Props {\n  finishedForms: FinishedForms[] | null;\n}\n\nexport const LineChartsButton = ({ finishedForms }: Props) => {\n  const isButtonDisabled =\n    finishedForms === null || finishedForms.length === 0 ? true : false;\n  const listData: {\n    uniqueFormList: FinishedForms[];\n    resultList: FormResult[][];\n  } = useMemo(() => {\n    if (!finishedForms)\n      return { uniqueFormList: [], resultList: [] as FormResult[][] };\n    const formList: FinishedForms[] = [];\n    const resultList: FormResult[][] = [];\n    const formSet: Set<string> = new Set();\n    finishedForms.forEach((questionnaire) => {\n      if (!formSet.has(questionnaire.id)) {\n        formSet.add(questionnaire.id);\n        formList.push(questionnaire);\n        if (questionnaire.result && questionnaire.displayedFillInDate) {\n          resultList.push([\n            {\n              result: questionnaire.result,\n              fillInDate: questionnaire.displayedFillInDate,\n            },\n          ]);\n        } else {\n          resultList.push([] as FormResult[]);\n        }\n      } else if (questionnaire.result && questionnaire.displayedFillInDate) {\n        let index = 0;\n        while (index <= formList.length) {\n          if (formList[index].id === questionnaire.id) {\n            resultList[index].push({\n              result: questionnaire.result,\n              fillInDate: questionnaire.displayedFillInDate,\n            });\n            break;\n          }\n          index += 1;\n        }\n      }\n    });\n    const newResultList = resultList.map((result) => [...result].reverse());\n    return { uniqueFormList: formList, resultList: newResultList };\n  }, [finishedForms]);\n  const { uniqueFormList, resultList } = listData;\n  const [isOpen, setIsOpen] = useState(false);\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n  const openModal = () => {\n    setIsOpen(true);\n  };\n  return (\n    <>\n      <Button\n        startIcon={<EqualizerIcon />}\n        color=\"primary\"\n        disabled={isButtonDisabled}\n        onClick={openModal}\n        size=\"small\"\n      >\n        趋势\n      </Button>\n      <Dialog open={isOpen} onClose={closeModal}>\n        <DialogTitle>查看趋势</DialogTitle>\n        <DialogContent>\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>量表</TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {uniqueFormList.map((form, index) => (\n                  <TableRow key={`questionnaire-${index}`}>\n                    <TableCell>{form.name}</TableCell>\n                    <TableCell>\n                      <LineChartPopOver\n                        formResultList={resultList[index]}\n                        formName={form.name}\n                        formKey={form.key}\n                      />\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <DialogActions>\n            <Button onClick={closeModal} color=\"primary\">\n              关闭\n            </Button>\n          </DialogActions>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n};\n","import { useMutation } from \"@apollo/client\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  DialogContentText,\n  createStyles,\n  makeStyles,\n  Theme,\n  Button,\n  DialogActions,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ADDITIONAL_FIELD_KEYS,\n  ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES,\n} from \"..\";\nimport { ADD_DIAGNOSIS } from \"../../../../lib/graphql/mutations\";\nimport {\n  AddDiagnosis,\n  AddDiagnosisVariables,\n} from \"../../../../lib/graphql/mutations/AddDiagnosis/__generated__/AddDiagnosis\";\n\ninterface Props {\n  isDialogOpen: boolean;\n  handleDialogClose: () => void;\n  patientName: string;\n  patientId: string;\n  refetch: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    diagnosisText: {\n      minWidth: 250,\n    },\n  })\n);\n\nexport const AddDiagnosisModal = ({\n  isDialogOpen,\n  handleDialogClose,\n  patientName,\n  patientId,\n  refetch,\n}: Props) => {\n  const [addDiagnosis] = useMutation<AddDiagnosis, AddDiagnosisVariables>(\n    ADD_DIAGNOSIS\n  );\n  useEffect(() => {\n    setDiagnosis(\"\");\n  }, [patientName]);\n  const classes = useStyles();\n  const [diagnosis, setDiagnosis] = useState(\"\");\n  const handleDiagnosisSelectChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setDiagnosis(e.target.value as string);\n  };\n  const handleComfirm = async () => {\n    if (diagnosis !== \"\") {\n      await addDiagnosis({\n        variables: {\n          input: {\n            patientId,\n            diagnosis:\n              ADDITIONAL_FIELD_KEYS[\n                ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES.indexOf(\n                  diagnosis as typeof ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES[number]\n                )\n              ],\n          },\n        },\n      });\n    } else {\n      await addDiagnosis({\n        variables: {\n          input: {\n            patientId,\n            diagnosis,\n          },\n        },\n      });\n    }\n    handleDialogClose();\n    refetch();\n  };\n  return (\n    <Dialog open={isDialogOpen} onClose={handleDialogClose}>\n      <DialogTitle>诊断</DialogTitle>\n      <DialogContent>\n        <DialogContentText className={classes.diagnosisText}>\n          给{patientName}添加诊断\n        </DialogContentText>\n        <FormControl fullWidth>\n          <InputLabel shrink>诊断</InputLabel>\n          <Select value={diagnosis} onChange={handleDiagnosisSelectChange}>\n            {ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES.map((option) => (\n              <MenuItem value={option} key={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleDialogClose}>取消</Button>\n        <Button onClick={handleComfirm} color=\"primary\">\n          确认\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import {\n  Button,\n  createStyles,\n  IconButton,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n  Theme,\n} from \"@material-ui/core\";\nimport React, { ChangeEvent, useEffect, useState, MouseEvent } from \"react\";\nimport { ErrorIndicator, LoadingIndicator } from \"../../../../lib/components\";\nimport {\n  QueryUser,\n  QueryUser_queryUser_users_finishedForms as QuestionnaireData,\n} from \"../../../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\nimport NoteIcon from \"@material-ui/icons/Note\";\n// import { HelpPopover } from \"../HelpPopover\";\nimport {\n  ADDITIONAL_FIELD_KEYS,\n  ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES,\n  ChooseFormModal,\n} from \"..\";\nimport { UsersFilter } from \"../../../../lib/graphql/globalTypes\";\nimport { LineChartsButton } from \"../LineChartsButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { AddDiagnosisModal } from \"../AddDiagnosisModal\";\nimport { PRIMARY_COLOR } from \"../../../..\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      marginTop: 20,\n      width: \"min(calc(100% - 20px), calc(100vw - 20px))\",\n      maxWidth: \"100vw\",\n      fontSize: \"0.8rem\",\n    },\n    loadingIndicatorWrapper: {\n      width: \"100%\",\n      height: 200,\n    },\n    reportButton: {\n      backgroundColor: \"#fff\",\n      color: PRIMARY_COLOR,\n      \"&:hover\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n    lineChartsButtonContainer: {\n      marginRight: 5,\n    },\n    tableCell: {\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n    },\n    iconMargin: {\n      marginRight: 5,\n    },\n  })\n);\nconst tableColumnTexts = [\n  \"门诊号\",\n  \"姓名\",\n  \"性别\",\n  \"年龄\",\n  \"教育\",\n  \"职业\",\n  \"婚姻\",\n  \"注册时间\",\n  \"医生\",\n  \"诊断\",\n];\nconst tableColumns = [\n  \"userName\",\n  \"name\",\n  \"gender\",\n  \"age\",\n  \"education\",\n  \"jobStatus\",\n  \"marriageStatus\",\n  \"signUpDate\",\n  \"doctorName\",\n  \"diagnosis\",\n] as const;\n\nconst tableMinWidth = [70, 80, 60, 60, 90, 70, 60, 150, 80, 140] as const;\nconst tableMaxWidth = [140, 80, 60, 60, 90, 70, 60, 150, 80, 140] as const;\n\ninterface Props {\n  loading: boolean;\n  patientList?: QueryUser;\n  selectedUserAnswerIds: string[] | null;\n  setSelectedUserId: (userId: string | null) => void;\n  setSelectedUserAnswerIds: (selectedFormIds: string[] | null) => void;\n  setIsReportShown: (isReportShown: boolean) => void;\n  limit: number;\n  currentPageIndex: number;\n  handleLimitChange: (limit: number) => void;\n  handleCurrentPageIndexChange: (currentPageIndex: number) => void;\n  filter: UsersFilter;\n  setFilter: (filter: UsersFilter) => void;\n  handleSortChange: () => void;\n  refetch: () => void;\n}\nexport const PatientTable = (props: Props) => {\n  const classes = useStyles();\n  const {\n    loading,\n    patientList,\n    selectedUserAnswerIds,\n    setSelectedUserId,\n    setSelectedUserAnswerIds,\n    setIsReportShown,\n    limit,\n    currentPageIndex,\n    handleLimitChange,\n    handleCurrentPageIndexChange,\n    filter,\n    handleSortChange,\n    refetch,\n  } = props;\n  const [showError, setShowError] = useState(false);\n  const [isChooseFormModalShown, setIsChooseFormModalShown] = useState(false);\n  const [finishedFormList, setFinishedFormList] = useState<\n    QuestionnaireData[] | null\n  >(null);\n\n  const handleReportButtonClick = (\n    finishedForms: QuestionnaireData[],\n    userId: string\n  ) => {\n    setSelectedUserId(userId);\n    setFinishedFormList(finishedForms);\n    const selectedUserAnswerIds = finishedForms\n      .map((finishedForm) => finishedForm.userAnswerId)\n      .filter((finishedForm): finishedForm is string => finishedForm !== null);\n    setSelectedUserAnswerIds(selectedUserAnswerIds);\n    setIsChooseFormModalShown(true);\n  };\n  const closeModal = () => {\n    setIsChooseFormModalShown(false);\n  };\n  const onOkButtonClick = () => {\n    setIsReportShown(true);\n  };\n  const [isAddDiagnosisModalShown, setIsAddDiagnosisModalShown] = useState(\n    false\n  );\n  const [addDiagnosisPatientId, setAddDiagnosisPatientId] = useState<\n    string | null\n  >(null);\n  const handleAddDiagnosisModalClose = () => {\n    setIsAddDiagnosisModalShown(false);\n  };\n  const openAddDiagnosisModal = () => {\n    setIsAddDiagnosisModalShown(true);\n  };\n  const [addDiagnosisPatientName, setAddDiagnosisPatientName] = useState<\n    string | null\n  >(null);\n  const handleEditDiagnosisButtonClick = (\n    patientName: string,\n    patientId: string\n  ) => {\n    setAddDiagnosisPatientName(patientName);\n    setAddDiagnosisPatientId(patientId);\n    openAddDiagnosisModal();\n  };\n  useEffect(() => {\n    if (\n      loading === false &&\n      patientList !== undefined &&\n      patientList.queryUser.users.length === 0\n    ) {\n      setShowError(true);\n    }\n  }, [loading, patientList]);\n  if (loading) {\n    return (\n      <div className={classes.loadingIndicatorWrapper}>\n        <LoadingIndicator />\n      </div>\n    );\n  }\n  if (patientList === undefined) {\n    return null;\n  }\n  if (patientList.queryUser.users.length === 0) {\n    return (\n      <ErrorIndicator\n        showError={showError}\n        setShowError={setShowError}\n        errorMessage=\"未找到符合条件的病人！\"\n      />\n    );\n  }\n\n  const handleRowsPerPageChange = (\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    handleLimitChange(Number(event.target.value));\n  };\n\n  const handlePageChange = (\n    _event: MouseEvent<HTMLButtonElement> | null,\n    page: number\n  ) => {\n    handleCurrentPageIndexChange(page);\n  };\n\n  const labelDisplayedRows = ({\n    from,\n    to,\n    count,\n  }: {\n    from: number;\n    to: number;\n    count: number;\n  }): string => {\n    return `共计${count}条数据，当前为第${Math.ceil(from / limit)}页`;\n  };\n  return (\n    <>\n      <TableContainer component={Paper} className={classes.root}>\n        <TablePagination\n          rowsPerPage={limit}\n          rowsPerPageOptions={[5, 10, 25]}\n          page={currentPageIndex}\n          count={patientList.queryUser.total}\n          onChangePage={handlePageChange}\n          component=\"div\"\n          onChangeRowsPerPage={handleRowsPerPageChange}\n          labelDisplayedRows={labelDisplayedRows}\n        />\n        <Table size=\"small\" aria-label=\"病人列表\">\n          <TableHead>\n            <TableRow>\n              {tableColumnTexts.map((text, index) => (\n                <TableCell\n                  key={text}\n                  style={{\n                    minWidth: tableMinWidth[index],\n                    maxWidth: tableMaxWidth[index],\n                    padding: 5,\n                    paddingLeft: index === 0 ? 10 : undefined,\n                  }}\n                  className={classes.tableCell}\n                >\n                  {tableColumns[index] === \"signUpDate\" ? (\n                    <TableSortLabel\n                      active={tableColumns[index] === \"signUpDate\"}\n                      direction={\n                        filter === UsersFilter.DATE_LATEST ? \"desc\" : \"asc\"\n                      }\n                      onClick={handleSortChange}\n                    >\n                      {text}\n                    </TableSortLabel>\n                  ) : (\n                    text\n                  )}\n                </TableCell>\n              ))}\n              <TableCell\n                style={{\n                  padding: 5,\n                }}\n              />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {patientList.queryUser.users.map((patientInformation) => {\n              const isReportButtonDisabled =\n                !patientInformation.finishedForms ||\n                patientInformation.finishedForms.length === 0;\n\n              return (\n                <TableRow key={patientInformation.userName}>\n                  {tableColumns.map((column, index) => {\n                    const content =\n                      index === tableColumns.length - 1\n                        ? ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES[\n                            ADDITIONAL_FIELD_KEYS.indexOf(\n                              patientInformation[\n                                column\n                              ] as typeof ADDITIONAL_FIELD_KEYS[number]\n                            )\n                          ]\n                        : patientInformation[column];\n                    return (\n                      <TableCell\n                        key={column}\n                        style={{\n                          minWidth: tableMinWidth[index],\n                          maxWidth: tableMaxWidth[index],\n                          padding: 5,\n                          paddingLeft: index === 0 ? 10 : undefined,\n                        }}\n                        className={classes.tableCell}\n                        title={content || undefined}\n                      >\n                        {index === tableColumns.length - 1 ? (\n                          <>\n                            <IconButton\n                              aria-label=\"delete\"\n                              className={classes.iconMargin}\n                              size=\"small\"\n                              color=\"primary\"\n                              onClick={() =>\n                                patientInformation.name &&\n                                handleEditDiagnosisButtonClick(\n                                  patientInformation.name,\n                                  patientInformation.id\n                                )\n                              }\n                            >\n                              <EditIcon fontSize=\"inherit\" />\n                            </IconButton>\n                            {content}\n                          </>\n                        ) : (\n                          content\n                        )}\n                      </TableCell>\n                    );\n                  })}\n                  <TableCell style={{ minWidth: 180, padding: 0 }}>\n                    <div style={{ display: \"flex\" }}>\n                      <span className={classes.lineChartsButtonContainer}>\n                        <LineChartsButton\n                          finishedForms={patientInformation.finishedForms}\n                        />\n                      </span>\n                      <Button\n                        size=\"small\"\n                        // className={classes.reportButton}\n                        color=\"primary\"\n                        startIcon={<NoteIcon />}\n                        disabled={isReportButtonDisabled}\n                        onClick={() =>\n                          patientInformation.finishedForms &&\n                          handleReportButtonClick(\n                            patientInformation.finishedForms,\n                            patientInformation.id\n                          )\n                        }\n                      >\n                        报告\n                      </Button>\n                      {/* {isReportButtonDisabled && patientInformation.name && (\n                        <HelpPopover name={patientInformation.name} />\n                      )} */}\n                    </div>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {finishedFormList && selectedUserAnswerIds && (\n        <ChooseFormModal\n          isOpen={isChooseFormModalShown}\n          closeModal={closeModal}\n          finishedFormList={finishedFormList}\n          selectedUserAnswerIds={selectedUserAnswerIds}\n          setSelectedUserAnswerIds={setSelectedUserAnswerIds}\n          onOkButtonClick={onOkButtonClick}\n        />\n      )}\n      {addDiagnosisPatientName && addDiagnosisPatientId && (\n        <AddDiagnosisModal\n          isDialogOpen={isAddDiagnosisModalShown}\n          handleDialogClose={handleAddDiagnosisModalClose}\n          patientName={addDiagnosisPatientName}\n          patientId={addDiagnosisPatientId}\n          refetch={refetch}\n        />\n      )}\n    </>\n  );\n};\n","import {\n  Button,\n  Checkbox,\n  createStyles,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Theme,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { QueryUser_queryUser_users_finishedForms as QuestionnaireData } from \"../../../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\n\ninterface Props {\n  isOpen: boolean;\n  closeModal: () => void;\n  finishedFormList: QuestionnaireData[];\n  selectedUserAnswerIds: string[];\n  setSelectedUserAnswerIds: (selectedUserAnswerIds: string[]) => void;\n  onOkButtonClick: () => void;\n}\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formName: {\n      maxWidth: 300,\n      textOverflow: \"ellipsis\",\n      overflow: \"hidden\",\n      whiteSpace: \"nowrap\",\n    },\n  })\n);\n\nexport const ChooseFormModal = ({\n  isOpen,\n  closeModal,\n  finishedFormList,\n  selectedUserAnswerIds,\n  setSelectedUserAnswerIds,\n  onOkButtonClick,\n}: Props) => {\n  const classes = useStyles();\n  const handleSelectAllCheckBoxClick = () => {\n    if (selectedUserAnswerIds.length < finishedFormList.length) {\n      setSelectedUserAnswerIds(\n        finishedFormList\n          .map((form) => form.userAnswerId)\n          .filter(\n            (userAnswerId): userAnswerId is string => userAnswerId !== null\n          )\n      );\n    } else {\n      setSelectedUserAnswerIds([]);\n    }\n  };\n  const handleSelectCheckBoxClick = (formId: string) => {\n    if (selectedUserAnswerIds.indexOf(formId) !== -1) {\n      setSelectedUserAnswerIds(\n        selectedUserAnswerIds.filter(\n          (currentUserAnswerId) => currentUserAnswerId !== formId\n        )\n      );\n    } else {\n      setSelectedUserAnswerIds([...selectedUserAnswerIds, formId]);\n    }\n  };\n  const handleOkButtonClick = () => {\n    onOkButtonClick();\n    closeModal();\n  };\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={closeModal}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      maxWidth=\"md\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">请选择要生成报告的量表</DialogTitle>\n      <DialogContent>\n        <TableContainer>\n          <Table size=\"small\" aira-label=\"选择量表，生成报告\">\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={\n                      selectedUserAnswerIds.length ===\n                        finishedFormList.length &&\n                      selectedUserAnswerIds.length !== 0\n                    }\n                    onChange={handleSelectAllCheckBoxClick}\n                  />\n                </TableCell>\n                <TableCell>全部已完成量表</TableCell>\n                <TableCell>完成时间</TableCell>\n                <TableCell>医生</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {finishedFormList.map((form, index) => (\n                <TableRow key={`questionnaire-${index}`}>\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={\n                        !!form.userAnswerId &&\n                        selectedUserAnswerIds.indexOf(form.userAnswerId) !== -1\n                      }\n                      onChange={() =>\n                        form.userAnswerId &&\n                        handleSelectCheckBoxClick(form.userAnswerId)\n                      }\n                    />\n                  </TableCell>\n                  <TableCell className={classes.formName}>\n                    {form.name}\n                  </TableCell>\n                  <TableCell>{form.displayedFillInDate || null}</TableCell>\n                  <TableCell>{form.doctorName || null}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={closeModal}>取消</Button>\n        <Button\n          onClick={handleOkButtonClick}\n          color=\"primary\"\n          autoFocus\n          disabled={selectedUserAnswerIds.length === 0}\n        >\n          确定\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import {\n  createStyles,\n  IconButton,\n  makeStyles,\n  Popover,\n  Theme,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    popover: {\n      pointerEvents: \"none\",\n    },\n    paper: {\n      padding: theme.spacing(1),\n    },\n    icon: {\n      width: 22,\n      height: 22,\n    },\n  })\n);\n\ninterface Props {\n  name: string;\n}\nexport const HelpPopover = ({ name }: Props) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\n  const open = Boolean(anchorEl);\n  const handlePopoverOpen = (\n    event: React.MouseEvent<HTMLElement, MouseEvent>\n  ) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <>\n      <IconButton\n        color=\"primary\"\n        size=\"small\"\n        onMouseEnter={handlePopoverOpen}\n        onMouseLeave={handlePopoverClose}\n      >\n        <HelpOutlineIcon className={classes.icon} />\n      </IconButton>\n      <Popover\n        id=\"mouse-over-popover\"\n        className={classes.popover}\n        classes={{\n          paper: classes.paper,\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        onClose={handlePopoverClose}\n        disableRestoreFocus\n      >\n        {name}未填写任何量表！\n      </Popover>\n    </>\n  );\n};\n","import { useLazyQuery } from \"@apollo/client\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core\";\nimport React, { ElementRef, useEffect, useRef, useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { ReportPdf } from \"../../lib/components\";\nimport { UsersFilter } from \"../../lib/graphql/globalTypes\";\nimport { QUERY_USER } from \"../../lib/graphql/queries/QueryUser\";\nimport {\n  QueryUser,\n  QueryUserVariables,\n} from \"../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\nimport { NO_DOCTOR_LOGIN_ERROR_MESSAGE } from \"../../lib/utils/constants\";\nimport {\n  Header,\n  PatientTable,\n  SearchPatientForm,\n  withReportPdfDataForAdmin,\n} from \"./components\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    content: {\n      padding: \"5px 10px\",\n    },\n    hiddenContent: {\n      display: \"none\",\n    },\n  })\n);\nconst PdfViewer = withReportPdfDataForAdmin(ReportPdf);\n\nexport const INITIAL_LIMIT = 10;\nexport const INITIAL_CURRENT_PAGE_INDEX = 0;\nexport const INITAL_ONLY_MY_PATIENT = false;\n\nexport const PatientInformation = () => {\n  const [getQueryResult, { loading, data: userListData, error }] = useLazyQuery<\n    QueryUser,\n    QueryUserVariables\n  >(QUERY_USER, {\n    fetchPolicy: \"no-cache\",\n  });\n\n  const searchFormRef = useRef<ElementRef<typeof SearchPatientForm>>(null);\n  const [limit, setLimit] = useState(INITIAL_LIMIT);\n  const [currentPageIndex, setCurrentPageIndex] = useState(\n    INITIAL_CURRENT_PAGE_INDEX\n  );\n  const [filter, setFilter] = useState<UsersFilter>(UsersFilter.DATE_LATEST);\n  const classes = useStyles();\n  const [selectedUserAnswerIds, setSelectedUserAnswerIds] = useState<\n    string[] | null\n  >(null);\n  const [selectedUserId, setSelectedUserId] = useState<string | null>(null);\n  const [isReportShown, setIsReportShown] = useState(false);\n  const closeReport = () => {\n    setIsReportShown(false);\n  };\n  const searchPatients = (params: QueryUserVariables) => {\n    getQueryResult({ variables: params });\n    setSearchParams(params);\n  };\n  const getQueryResultRef = useRef(getQueryResult);\n  const [searchParams, setSearchParams] = useState<QueryUserVariables>({\n    limit: INITIAL_LIMIT,\n    currentPageIndex: INITIAL_CURRENT_PAGE_INDEX,\n  });\n  const handleLimitChange = (limit: number): void => {\n    setLimit(limit);\n    setCurrentPageIndex(0);\n    getQueryResult({\n      variables: { ...searchParams, limit, currentPageIndex: 0, filter },\n    });\n  };\n  const handleCurrentPageIndexChange = (currentPageIndex: number): void => {\n    setCurrentPageIndex(currentPageIndex);\n    getQueryResult({\n      variables: { ...searchParams, limit, currentPageIndex, filter },\n    });\n  };\n  const refetch = () => {\n    getQueryResult({\n      variables: { ...searchParams, limit, currentPageIndex, filter },\n    });\n  };\n  const handleSortChange = () => {\n    const newFilter =\n      filter === UsersFilter.DATE_LATEST\n        ? UsersFilter.DATE_OLDEST\n        : UsersFilter.DATE_LATEST;\n    setFilter(newFilter);\n    setCurrentPageIndex(0);\n    getQueryResult({\n      variables: {\n        ...searchParams,\n        limit,\n        currentPageIndex: 0,\n        filter: newFilter,\n      },\n    });\n  };\n  useEffect(() => {\n    getQueryResultRef.current({\n      variables: {\n        limit: INITIAL_LIMIT,\n        currentPageIndex: INITIAL_CURRENT_PAGE_INDEX,\n        filter: UsersFilter.DATE_LATEST,\n        onlyMyPatient: INITAL_ONLY_MY_PATIENT,\n      },\n    });\n  }, []);\n  if (error && error.message === NO_DOCTOR_LOGIN_ERROR_MESSAGE) {\n    return <Redirect to=\"/doctor\" />;\n  }\n  const isPdfViewerShown = Boolean(\n    isReportShown && selectedUserId && selectedUserAnswerIds\n  );\n  return (\n    <>\n      <div className={isPdfViewerShown ? classes.hiddenContent : \"\"}>\n        <Header text={\"搜索病人信息\"} />\n        <div className={classes.content}>\n          <SearchPatientForm\n            searchPatients={searchPatients}\n            limit={limit}\n            currentPageIndex={currentPageIndex}\n            ref={searchFormRef}\n            setCurrentPageIndex={setCurrentPageIndex}\n            filter={filter}\n          />\n          <PatientTable\n            loading={loading}\n            patientList={userListData}\n            selectedUserAnswerIds={selectedUserAnswerIds}\n            setSelectedUserId={setSelectedUserId}\n            setSelectedUserAnswerIds={setSelectedUserAnswerIds}\n            setIsReportShown={setIsReportShown}\n            limit={limit}\n            currentPageIndex={currentPageIndex}\n            handleLimitChange={handleLimitChange}\n            handleCurrentPageIndexChange={handleCurrentPageIndexChange}\n            filter={filter}\n            setFilter={setFilter}\n            handleSortChange={handleSortChange}\n            refetch={refetch}\n          />\n        </div>\n      </div>\n      {isReportShown && selectedUserId && selectedUserAnswerIds && (\n        <PdfViewer\n          userId={selectedUserId}\n          userAnswerIds={selectedUserAnswerIds}\n          closeReport={closeReport}\n        />\n      )}\n    </>\n  );\n};\n","import { useQuery } from \"@apollo/client\";\nimport React, { ComponentType, PropsWithChildren } from \"react\";\nimport { LoadingIndicator } from \"../../../../lib/components\";\nimport { REPORT_FOR_ADMIN } from \"../../../../lib/graphql/queries\";\nimport {\n  ReportForAdmin as ReportData,\n  ReportForAdminVariables,\n} from \"../../../../lib/graphql/queries/ReportForAdmin/__generated__/ReportForAdmin\";\n\nexport const withReportPdfDataForAdmin = (\n  WrappedComponent: ComponentType<\n    PropsWithChildren<{ pdfData: string; closeReport: () => void }>\n  >\n) => {\n  return ({\n    children,\n    userAnswerIds,\n    closeReport,\n    userId,\n  }: PropsWithChildren<{\n    userAnswerIds: string[];\n    closeReport: () => void;\n    userId: string;\n  }>) => {\n    // Get PDF data.\n    const { data, loading } = useQuery<ReportData, ReportForAdminVariables>(\n      REPORT_FOR_ADMIN,\n      {\n        variables: {\n          userAnswerIds,\n          userId,\n        },\n        fetchPolicy: \"no-cache\",\n      }\n    );\n\n    if (loading || !data) {\n      return <LoadingIndicator />;\n    }\n\n    if (data.reportForAdmin && data.reportForAdmin.pdf) {\n      return (\n        <WrappedComponent\n          pdfData={data.reportForAdmin.pdf}\n          closeReport={closeReport}\n        >\n          {children}\n        </WrappedComponent>\n      );\n    }\n\n    return null;\n  };\n};\n","import {\n  makeStyles,\n  Theme,\n  createStyles,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { Doctor } from \"../../../../lib/type\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      overflow: \"hidden\",\n    },\n    actionContainer: {\n      float: \"right\",\n      paddingRight: 10,\n      paddingTop: 10,\n      fontSize: \"0.875rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    welcomeMessage: {\n      paddingRight: 10,\n      paddingBottom: 1,\n    },\n  })\n);\n\ninterface Props {\n  handleDoctorLogOut: () => void;\n  doctor: Doctor;\n}\n\nexport const Header = ({ handleDoctorLogOut, doctor }: Props) => {\n  const classes = useStyles();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const handleCloseDialog = () => {\n    setIsDialogOpen(false);\n  };\n  const openDialog = () => {\n    setIsDialogOpen(true);\n  };\n  const logOutDoctor = () => {\n    setIsDialogOpen(false);\n    handleDoctorLogOut();\n  };\n  return (\n    <div className={classes.root}>\n      <span className={classes.actionContainer}>\n        <span className={classes.welcomeMessage}>{doctor.name}医生已登入</span>\n        <Button\n          color=\"secondary\"\n          startIcon={<ExitToAppIcon />}\n          onClick={openDialog}\n        >\n          退出\n        </Button>\n      </span>\n      <Dialog\n        open={isDialogOpen}\n        onClose={handleCloseDialog}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"确认退出？\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            退出后需要输入医生的账号和密码才能重新登入\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog}>取消</Button>\n          <Button onClick={logOutDoctor} color=\"secondary\">\n            退出\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import {\n  Button,\n  createStyles,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n  makeStyles,\n  TextField,\n  Theme,\n} from \"@material-ui/core\";\nimport React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useState,\n} from \"react\";\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\n\ninterface Props {\n  isDialogOpen: boolean;\n  setIsDialogOpen: (isDialogOpen: boolean) => void;\n  doctorName: string;\n  handleDoctorLogIn: (password: string) => void;\n  hideErrorIndicator: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    passwordInput: {\n      minWidth: 300,\n    },\n  })\n);\n\nexport interface DoctorLogInDialogHandle {\n  showError: () => void;\n  hideError: () => void;\n}\n\nexport const DoctorLogInDialog = forwardRef<DoctorLogInDialogHandle, Props>(\n  (props: Props, ref) => {\n    const handleKeyPress = (event: KeyboardEvent) => {\n      if (event.key === \"Enter\") {\n        handleClickLogIn();\n      }\n    };\n    useEffect(() => {\n      window.addEventListener(\"keydown\", handleKeyPress);\n\n      return () => {\n        window.removeEventListener(\"keydown\", handleKeyPress);\n      };\n    });\n    const classes = useStyles();\n    const {\n      isDialogOpen,\n      setIsDialogOpen,\n      doctorName,\n      handleDoctorLogIn,\n      hideErrorIndicator,\n    } = props;\n    const [password, setPassword] = useState(\"\");\n    const [isErrorShown, setIsErrorShown] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n      showError: () => {\n        setIsErrorShown(true);\n      },\n      hideError: () => {\n        setIsErrorShown(false);\n      },\n    }));\n    const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      hideErrorIndicator();\n      setPassword(e.target.value);\n    };\n    const handleClickLogIn = () => {\n      handleDoctorLogIn(password);\n    };\n    const handleClickCancel = () => {\n      setIsDialogOpen(false);\n    };\n    return (\n      <Dialog open={isDialogOpen} onClose={handleClickCancel}>\n        <DialogTitle>请确认您的密码</DialogTitle>\n        <DialogContent>\n          <DialogContentText>当前登入的医生为{doctorName}</DialogContentText>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item>\n              <VpnKeyIcon />\n            </Grid>\n            <Grid item>\n              <TextField\n                autoFocus\n                className={classes.passwordInput}\n                label=\"密码\"\n                type=\"password\"\n                value={password}\n                onChange={handlePasswordChange}\n                helperText={\n                  isErrorShown && !password ? \"请输入您的密码\" : undefined\n                }\n                error={isErrorShown && !password ? true : undefined}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClickCancel} color=\"primary\">\n            取消\n          </Button>\n          <Button onClick={handleClickLogIn} color=\"primary\">\n            确认\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n);\n","import { Button, createStyles, makeStyles, Theme } from \"@material-ui/core\";\nimport React, { ElementRef, useRef, useState } from \"react\";\nimport { DoctorLogInDialog } from \"./components\";\nimport logo from \"../AppHeader/assets/logo.png\";\nimport PlayArrowRoundedIcon from \"@material-ui/icons/PlayArrowRounded\";\nimport { FetchResult } from \"@apollo/client\";\n// import { DOCTOR_LOG_OUT } from \"../../lib/graphql/mutations\";\nimport { Doctor } from \"../../lib/type\";\n// import { DoctorLogOut } from \"../../lib/graphql/mutations/DoctorLogOut/__generated__/doctorLogOut\";\nimport { useHistory } from \"react-router-dom\";\nimport { ErrorIndicator } from \"../../lib/components\";\nimport {\n  DoctorLogIn,\n  DoctorLogInVariables,\n} from \"../../lib/graphql/mutations/DoctorLogIn/__generated__/DoctorLogIn\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: \"100%\",\n      width: \"100%\",\n      background: \"#e3f2fd\",\n    },\n    logoContainer: {\n      display: \"flex\",\n      minHeight: 92,\n      maxHeight: 290,\n      height: \"calc(100% - 560px)\",\n      justifyContent: \"center\",\n    },\n    logo: {\n      maxHeight: 92,\n      height: \"100%\",\n      marginTop: \"auto\",\n    },\n    actionContainer: {\n      maxHeight: 160,\n      padding: 20,\n      display: \"flex\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      fontSize: \"1.5rem\",\n    },\n    enterSystemButtonContainer: {\n      marginTop: 18,\n    },\n    extendedIcon: {\n      position: \"absolute\",\n      right: 20,\n      bottom: 20,\n      backgroundColor: \"#fff\",\n    },\n    seuText: {\n      margin: \"10px 0 15px\",\n    },\n    header: {\n      height: 52,\n    },\n  })\n);\n\ninterface Props {\n  doctor: Doctor;\n  setDoctor: (doctor: Doctor) => void;\n  logIn: (variables?: {\n    variables: DoctorLogInVariables;\n  }) => Promise<FetchResult<DoctorLogIn>>;\n}\n\nexport const Welcome = ({ setDoctor, doctor, logIn }: Props) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const doctorLogInDialogRef = useRef<ElementRef<typeof DoctorLogInDialog>>(\n    null\n  );\n  // const [logOut] = useMutation<DoctorLogOut>(DOCTOR_LOG_OUT, {\n  //   onCompleted: (data) => {\n  //     if (data && data.doctorLogOut) {\n  //       setDoctor(data.doctorLogOut);\n  //       sessionStorage.removeItem(\"token\");\n  //       console.log(\"log out successfully\");\n  //     }\n  //   },\n  //   onError: (error) => {\n  //     console.log(error);\n  //     console.log(\"log out failed\");\n  //   },\n  // });\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  // const openDoctorLoginDialog = () => {\n  //   doctorLogInDialogRef.current?.hideError();\n  //   setIsDialogOpen(true);\n  // };\n  // const handleDoctorLogOut = () => {\n  //   logOut();\n  // };\n  const [isLogInErrorShown, setIsLogInErrorShown] = useState(false);\n  const handleDoctorLogIn = async (password: string) => {\n    if (doctor.userName) {\n      if (!password) {\n        doctorLogInDialogRef.current?.showError();\n        return;\n      }\n      try {\n        const logInResult = await logIn({\n          variables: {\n            input: {\n              userName: doctor.userName,\n              password,\n            },\n          },\n        });\n        if (logInResult.data && logInResult.data.doctorLogIn.userName) {\n          console.log(\"Second login succeeds.\");\n          history.push(\"/doctor\");\n        }\n      } catch {\n        setIsLogInErrorShown(true);\n      }\n    }\n  };\n  const hideErrorIndicator = () => {\n    setIsLogInErrorShown(false);\n  };\n  const goToPromptPage = () => {\n    history.push(\"/user/prompt\");\n  };\n  return (\n    <div className={classes.root}>\n      <div className={classes.header} />\n      {/* <Header handleDoctorLogOut={handleDoctorLogOut} doctor={doctor} /> */}\n      <div className={classes.logoContainer}>\n        <img src={logo} alt=\"中大医院\" className={classes.logo} />\n      </div>\n      <div className={classes.actionContainer}>\n        <div className={classes.seuText}>东南大学附属中大医院</div>\n        <div>心理健康评估系统</div>\n        <div className={classes.enterSystemButtonContainer}>\n          <Button\n            startIcon={<PlayArrowRoundedIcon />}\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={goToPromptPage}\n          >\n            进入系统\n          </Button>\n        </div>\n      </div>\n      {/* <Fab\n        variant=\"extended\"\n        className={classes.extendedIcon}\n        onClick={openDoctorLoginDialog}\n      >\n        <SupervisorAccountIcon />\n        医生端\n      </Fab> */}\n      {doctor.name && (\n        <DoctorLogInDialog\n          isDialogOpen={isDialogOpen}\n          setIsDialogOpen={setIsDialogOpen}\n          doctorName={doctor.name}\n          handleDoctorLogIn={handleDoctorLogIn}\n          hideErrorIndicator={hideErrorIndicator}\n          ref={doctorLogInDialogRef}\n        />\n      )}\n      <ErrorIndicator\n        showError={isLogInErrorShown}\n        setShowError={setIsLogInErrorShown}\n        errorMessage={\"密码不正确！\"}\n      />\n    </div>\n  );\n};\n","import { makeStyles, Theme, createStyles, Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport { ReturnToHomeHeader } from \"../../lib/components\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      background: \"#e3f2fd\",\n      height: \"100%\",\n      width: \"100%\",\n    },\n    titleWrapper: {\n      height: \"100%\",\n    },\n    title: {\n      fontSize: \"1.5rem\",\n      textAlign: \"center\",\n    },\n    promptTextContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      paddingTop: 50,\n      background: \"#e3f2fd\",\n    },\n    promptText: {\n      width: \"50%\",\n      minWidth: \"min(85%, 400px)\",\n      lineHeight: \"1.5rem\",\n    },\n    buttonContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      paddingTop: 50,\n      background: \"#e3f2fd\",\n      paddingBottom: 20,\n    },\n    titleContainer: {\n      minHeight: 75,\n      maxHeight: 290,\n      height: \"calc(100% - 610px)\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"flex-end\",\n      background: \"#e3f2fd\",\n    },\n  })\n);\nexport const PromptMessage = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <ReturnToHomeHeader />\n      <div className={classes.titleContainer}>\n        <div className={classes.title}>指导语</div>\n      </div>\n      <div className={classes.promptTextContainer}>\n        <div className={classes.promptText}>\n          在接下来大约20分钟的时间里您将进行一系列的量表评估，目的是对您的心理状况及个性特征进行评估，下面的问题并不存在所谓正确或者错误的答案，您只需要按照自己真实的状况完成就可以了。也许您会觉得自己并不完全如题目所描述的那样，这时候您可以根据选项选择最接近您的状况。请记住，这里并没有正确或错误，您只要如实回答问题就可以了。\n        </div>\n      </div>\n      <div className={classes.buttonContainer}>\n        <Link to=\"/user/login\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            endIcon={<NavigateNextIcon />}\n          >\n            下一步\n          </Button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import { gql } from \"@apollo/client\";\n\nexport const PATIENT_LOG_IN = gql`\n  mutation PatientLogIn($input: UserLoginInput) {\n    patientLogIn(input: $input) {\n      name\n      userName\n      education\n      jobStatus\n      gender\n      marriageStatus\n      age\n      didRequest\n    }\n  }\n`;\n","import {\n  makeStyles,\n  Theme,\n  createStyles,\n  Button,\n  TextField,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Snackbar,\n  Grid,\n} from \"@material-ui/core\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport { LoadingIndicator, ReturnToHomeHeader } from \"../../lib/components\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\nimport { QUERY_USER } from \"../../lib/graphql/queries/QueryUser\";\nimport {\n  QueryUser,\n  QueryUserVariables,\n} from \"../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport WcIcon from \"@material-ui/icons/Wc\";\nimport AccessibilityIcon from \"@material-ui/icons/Accessibility\";\nimport ChildCareIcon from \"@material-ui/icons/ChildCare\";\nimport SchoolIcon from \"@material-ui/icons/School\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport {\n  PatientLogIn,\n  PatientLogInVariables,\n} from \"../../lib/graphql/mutations/PatientLogIn/__generated__/PatientLogIn\";\nimport { Patient } from \"../../lib/type\";\nimport { PATIENT_LOG_IN } from \"../../lib/graphql/mutations/PatientLogIn\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      background: \"#e3f2fd\",\n      height: \"100%\",\n      width: \"100%\",\n    },\n    titleWrapper: {\n      height: \"100%\",\n    },\n    title: {\n      fontSize: \"1.5rem\",\n      textAlign: \"center\",\n    },\n    buttonContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      paddingTop: 50,\n      background: \"#e3f2fd\",\n      paddingBottom: 20,\n    },\n    titleContainer: {\n      minHeight: 75,\n      maxHeight: 290,\n      height: \"calc(100% - 630px)\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"flex-end\",\n      background: \"#e3f2fd\",\n    },\n    inputContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      paddingTop: 50,\n    },\n    personalInformationContainer: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      paddingTop: 20,\n      background: \"#e3f2fd\",\n    },\n    input: {\n      width: 250,\n      paddingTop: 5,\n      paddingBottom: 5,\n    },\n    actionsWrapper: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      background: \"#e3f2fd\",\n    },\n    actionsContainer: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      paddingTop: 50,\n      background: \"#e3f2fd\",\n      paddingBottom: 20,\n      width: 300,\n    },\n  })\n);\n\ninterface Props {\n  setPatient: (patient: Patient) => void;\n  patient: Patient;\n}\n\nfunction useQueryParams() {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport const PatientLogin = ({ setPatient, patient }: Props) => {\n  const queryParams = useQueryParams();\n  const initRef = useRef(() => {\n    const userName = queryParams.get(\"userName\");\n    if (userName) {\n      setUserName(userName);\n      handleNextButtonClick(userName);\n    }\n  });\n  useEffect(() => {\n    initRef.current();\n  }, []);\n  const handleKeyPress = (event: KeyboardEvent) => {\n    if (event.key === \"Enter\") {\n      if (isBasicInformationShown) {\n        handleLogInButtonClick();\n      } else {\n        handleNextButtonClick(undefined);\n      }\n    }\n  };\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyPress);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  });\n\n  const [patientLogIn] = useMutation<PatientLogIn, PatientLogInVariables>(\n    PATIENT_LOG_IN,\n    {\n      onCompleted: (data) => {\n        if (data && data.patientLogIn) {\n          setPatient(data.patientLogIn);\n        }\n      },\n    }\n  );\n  const classes = useStyles();\n  const [isUserNameValidated, setIsUserNameValidated] = useState(false);\n  const [isNameValidated, setIsNameValidated] = useState(false);\n  const [getQueryResult, { loading, data: userListData }] = useLazyQuery<\n    QueryUser,\n    QueryUserVariables\n  >(QUERY_USER, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      if (data.queryUser.total > 0) {\n        const userInfo = data.queryUser.users[0];\n        userInfo.name && setName(userInfo.name);\n        userInfo.gender && setGender(userInfo.gender);\n        userInfo.age && setAge(userInfo.age);\n        userInfo.education && setEducation(userInfo.education);\n        userInfo.jobStatus && setJobStatus(userInfo.jobStatus);\n        userInfo.marriageStatus && setMarriageStatus(userInfo.marriageStatus);\n        setShowLoadSuccess(true);\n      } else {\n        setName(\"\");\n        setGender(\"\");\n        setAge(\"\");\n        setEducation(\"\");\n        setJobStatus(\"\");\n        setMarriageStatus(\"\");\n      }\n    },\n  });\n  const [isBasicInformationShown, setIsBasicInformationShown] = useState(false);\n  const [userName, setUserName] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [education, setEducation] = useState(\"\");\n  const [jobStatus, setJobStatus] = useState(\"\");\n  const [marriageStatus, setMarriageStatus] = useState(\"\");\n  const onNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n  };\n  const onGenderChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setGender(e.target.value as string);\n  };\n  const onAgeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setAge(e.target.value);\n  };\n  const [showLoadSuccess, setShowLoadSuccess] = useState(false);\n  const handleCloseLoadSuccess = () => {\n    setShowLoadSuccess(false);\n  };\n  const handleUserNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserName(e.target.value);\n  };\n  const [showNameErrorMessage, setShowNameErrorMessage] = useState(false);\n  const handleCloseNameErrorMessage = () => {\n    setShowNameErrorMessage(false);\n  };\n  const onEducationChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setEducation(e.target.value as string);\n  };\n  const onMarriageStatusChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setMarriageStatus(e.target.value as string);\n  };\n  const onJobChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setJobStatus(e.target.value);\n  };\n  const handleNextButtonClick = async (\n    userNameFromQueryParams: string | undefined\n  ) => {\n    if (!isBasicInformationShown) {\n      if (userName || userNameFromQueryParams) {\n        await getQueryResult({\n          variables: {\n            userName: userNameFromQueryParams\n              ? userNameFromQueryParams\n              : userName,\n            limit: 1,\n            currentPageIndex: 0,\n          },\n        });\n        setIsBasicInformationShown(true);\n      } else {\n        // Show the userName cannot be empty error.\n        setIsUserNameValidated(true);\n      }\n    }\n  };\n  const handleCancel = () => {\n    setIsBasicInformationShown(false);\n  };\n  const history = useHistory();\n  const handleLogInButtonClick = async () => {\n    if (name) {\n      await patientLogIn({\n        variables: {\n          input: {\n            userName,\n            education,\n            name,\n            age: age !== \"\" ? Number(age) : undefined,\n            gender,\n            jobStatus,\n            marriageStatus,\n          },\n        },\n      });\n      history.push(\"/user/home\");\n    } else {\n      setIsNameValidated(true);\n      setShowNameErrorMessage(true);\n    }\n  };\n  return (\n    <div className={classes.root}>\n      <ReturnToHomeHeader />\n      {isBasicInformationShown ? (\n        loading ? (\n          <LoadingIndicator />\n        ) : (\n          <>\n            {userListData && userListData.queryUser.total > 0 ? (\n              <div className={classes.titleContainer}>\n                <div className={classes.title}>请核实您的个人信息</div>\n              </div>\n            ) : (\n              <div className={classes.titleContainer}>\n                <div className={classes.title}>请输入您的个人信息</div>\n              </div>\n            )}\n            <div className={classes.personalInformationContainer}>\n              <div>\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                  <Grid item>\n                    <AccountCircle />\n                  </Grid>\n                  <Grid item>\n                    <TextField\n                      label=\"姓名\"\n                      className={classes.input}\n                      required\n                      value={name}\n                      onChange={onNameChange}\n                      error={isNameValidated && !name ? true : false}\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n              <div>\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                  <Grid item>\n                    <WcIcon />\n                  </Grid>\n                  <Grid item>\n                    <FormControl size=\"small\" className={classes.input}>\n                      <InputLabel>性别</InputLabel>\n                      <Select\n                        color=\"primary\"\n                        label=\"性别\"\n                        onChange={onGenderChange}\n                        value={gender}\n                      >\n                        <MenuItem value=\"男\">男</MenuItem>\n                        <MenuItem value=\"女\">女</MenuItem>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </div>\n              <div>\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                  <Grid item>\n                    <AccessibilityIcon />\n                  </Grid>\n                  <Grid item>\n                    <TextField\n                      className={classes.input}\n                      color=\"primary\"\n                      label=\"年龄\"\n                      size=\"small\"\n                      type=\"number\"\n                      value={age}\n                      onChange={onAgeChange}\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n              <div>\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                  <Grid item>\n                    <ChildCareIcon />\n                  </Grid>\n                  <Grid item>\n                    <FormControl size=\"small\" className={classes.input}>\n                      <InputLabel>婚姻</InputLabel>\n                      <Select\n                        color=\"primary\"\n                        value={marriageStatus}\n                        onChange={onMarriageStatusChange}\n                      >\n                        <MenuItem value=\"已婚\">已婚</MenuItem>\n                        <MenuItem value=\"未婚\">未婚</MenuItem>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </div>\n              <div>\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                  <Grid item>\n                    <SchoolIcon />\n                  </Grid>\n                  <Grid item>\n                    <FormControl size=\"small\" className={classes.input}>\n                      <InputLabel>教育</InputLabel>\n                      <Select\n                        color=\"primary\"\n                        value={education}\n                        onChange={onEducationChange}\n                      >\n                        <MenuItem value=\"高中以下\">高中以下</MenuItem>\n                        <MenuItem value=\"大中专科\">大中专科</MenuItem>\n                        <MenuItem value=\"本科\">本科</MenuItem>\n                        <MenuItem value=\"硕士\">硕士</MenuItem>\n                        <MenuItem value=\"博士\">博士</MenuItem>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </div>\n              <div>\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                  <Grid item>\n                    <WorkIcon />\n                  </Grid>\n                  <Grid item>\n                    <TextField\n                      color=\"primary\"\n                      label=\"职业\"\n                      size=\"small\"\n                      className={classes.input}\n                      value={jobStatus}\n                      onChange={onJobChange}\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n            </div>\n          </>\n        )\n      ) : (\n        <>\n          <div className={classes.titleContainer}>\n            <div className={classes.title}>请输入您的门诊号</div>\n          </div>\n          <div className={classes.inputContainer}>\n            <TextField\n              label=\"门诊号\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <AssignmentIndIcon />\n                  </InputAdornment>\n                ),\n              }}\n              value={userName}\n              onChange={handleUserNameChange}\n              autoFocus\n              error={isUserNameValidated && !userName ? true : undefined}\n              helperText={\n                isUserNameValidated && !userName\n                  ? \"请输入您的门诊号\"\n                  : undefined\n              }\n            />\n          </div>\n        </>\n      )}\n      {isBasicInformationShown ? (\n        loading ? null : (\n          <div className={classes.actionsWrapper}>\n            <div className={classes.actionsContainer}>\n              <Button onClick={handleCancel}>取消</Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleLogInButtonClick}\n              >\n                确定\n              </Button>\n            </div>\n          </div>\n        )\n      ) : (\n        <div className={classes.buttonContainer}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            endIcon={<NavigateNextIcon />}\n            onClick={() => handleNextButtonClick(undefined)}\n          >\n            下一步\n          </Button>\n        </div>\n      )}\n      <Snackbar\n        open={showLoadSuccess}\n        autoHideDuration={6000}\n        onClose={handleCloseLoadSuccess}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n      >\n        <Alert\n          onClose={handleCloseLoadSuccess}\n          severity=\"success\"\n          variant=\"filled\"\n        >\n          成功载入您的个人信息\n        </Alert>\n      </Snackbar>\n      <Snackbar\n        open={showNameErrorMessage}\n        autoHideDuration={6000}\n        onClose={handleCloseNameErrorMessage}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n      >\n        <Alert\n          onClose={handleCloseNameErrorMessage}\n          severity=\"error\"\n          variant=\"filled\"\n        >\n          姓名为必填项！\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n","import {\n  FetchResult,\n  MutationFunctionOptions,\n  QueryLazyOptions,\n} from \"@apollo/client\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions,\n  Button,\n  createStyles,\n  makeStyles,\n  Theme,\n  debounce,\n} from \"@material-ui/core\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { ErrorIndicator } from \"../../../../lib/components\";\nimport { SuccessIndicator } from \"../../../../lib/components/SuccessIndicator\";\nimport {\n  AddDoctor,\n  AddDoctorVariables,\n} from \"../../../../lib/graphql/mutations/AddDoctor/__generated__/AddDoctor\";\nimport {\n  CheckIfDoctorNameUnique,\n  CheckIfDoctorNameUniqueVariables,\n} from \"../../../../lib/graphql/queries/CheckIfDoctorNameUnique/__generated__/CheckIfDoctorNameUnique\";\n\ninterface Props {\n  isOpen: boolean;\n  closeDialog: () => void;\n  checkDoctorUserName: (\n    options: QueryLazyOptions<CheckIfDoctorNameUniqueVariables>\n  ) => void;\n  checkResult: CheckIfDoctorNameUnique | undefined;\n  addDoctor: (\n    options?: MutationFunctionOptions<AddDoctor, AddDoctorVariables>\n  ) => Promise<FetchResult<AddDoctor>>;\n  refetchListData: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    input: {\n      display: \"block\",\n      margin: 5,\n      paddingRight: 5,\n    },\n    inputContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n  })\n);\n\nexport const AddDoctorDialog = (props: Props) => {\n  const classes = useStyles();\n  const {\n    isOpen,\n    closeDialog,\n    checkDoctorUserName,\n    checkResult,\n    addDoctor,\n    refetchListData,\n  } = props;\n  const [userNameInput, setUserNameInput] = useState(\"\");\n  const [nameInput, setNameInput] = useState(\"\");\n  const [passwordInput, setPasswordInput] = useState(\"\");\n  const [secondPasswordInput, setSecondPasswordInput] = useState(\"\");\n  const [userNameDuplicate, setUserNameDubplicate] = useState(false);\n  const [isErrorShown, setIsErrorShown] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isSuccessShown, setIsSuccessShown] = useState(false);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debouncedCheckDoctorUserName = useCallback(\n    debounce(checkDoctorUserName, 300),\n    [checkDoctorUserName]\n  );\n  useEffect(() => {\n    setUserNameInput(\"\");\n    setNameInput(\"\");\n    setPasswordInput(\"\");\n    setSecondPasswordInput(\"\");\n    setUserNameDubplicate(false);\n    setIsSuccessShown(false);\n  }, [isOpen]);\n  useEffect(() => {\n    checkResult &&\n      setUserNameDubplicate(!checkResult.checkIfDoctorUserNameUnique.result);\n  }, [checkResult]);\n  const handleUserNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserNameInput(e.target.value);\n    setUserNameDubplicate(false);\n    debouncedCheckDoctorUserName({\n      variables: {\n        userName: e.target.value,\n      },\n    });\n  };\n  const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setNameInput(e.target.value);\n  };\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setPasswordInput(e.target.value);\n  };\n\n  const handleSecondPasswordInput = (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setSecondPasswordInput(e.target.value);\n  };\n\n  const handleAddButtonClick = async () => {\n    if (passwordInput !== secondPasswordInput) {\n      setErrorMessage(\"两次输入的密码不相同！\");\n      setIsErrorShown(true);\n      return;\n    }\n    const result = await addDoctor({\n      variables: {\n        input: {\n          userName: userNameInput,\n          name: nameInput,\n          password: passwordInput,\n        },\n      },\n    });\n    if (result.data?.addDoctor.result) {\n      closeDialog();\n      refetchListData();\n      setIsSuccessShown(true);\n    }\n  };\n  return (\n    <>\n      <Dialog\n        open={isOpen}\n        onClose={closeDialog}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">添加医生</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            请输入医生的用户名、姓名和密码。\n          </DialogContentText>\n          <TextField\n            autoFocus\n            label=\"用户名\"\n            className={classes.input}\n            fullWidth\n            required\n            value={userNameInput}\n            onChange={handleUserNameChange}\n            error={userNameDuplicate || undefined}\n            helperText={userNameDuplicate ? \"此用户名已经被注册！\" : undefined}\n          />\n          <TextField\n            label=\"姓名\"\n            className={classes.input}\n            fullWidth\n            required\n            value={nameInput}\n            onChange={handleNameChange}\n          />\n          <TextField\n            label=\"密码\"\n            className={classes.input}\n            fullWidth\n            required\n            type=\"password\"\n            value={passwordInput}\n            onChange={handlePasswordChange}\n          />\n          <TextField\n            label=\"确认密码\"\n            className={classes.input}\n            fullWidth\n            required\n            type=\"password\"\n            value={secondPasswordInput}\n            onChange={handleSecondPasswordInput}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog}>取消</Button>\n          <Button\n            onClick={handleAddButtonClick}\n            color=\"primary\"\n            disabled={\n              userNameDuplicate ||\n              !nameInput ||\n              !userNameInput ||\n              !passwordInput ||\n              !secondPasswordInput\n                ? true\n                : undefined\n            }\n          >\n            添加\n          </Button>\n        </DialogActions>\n        <ErrorIndicator\n          showError={isErrorShown}\n          setShowError={setIsErrorShown}\n          errorMessage={errorMessage}\n        />\n      </Dialog>\n      <SuccessIndicator\n        showSuccess={isSuccessShown}\n        setShowSuccess={setIsSuccessShown}\n        successMessage=\"成功创建账号\"\n      />\n    </>\n  );\n};\n","import { useLazyQuery, useMutation, useQuery } from \"@apollo/client\";\nimport {\n  Avatar,\n  Button,\n  createStyles,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles,\n  Paper,\n  Theme,\n} from \"@material-ui/core\";\nimport { Pagination } from \"@material-ui/lab\";\nimport React, { useState } from \"react\";\nimport { LoadingIndicator } from \"../../lib/components\";\nimport { ADD_DOCTOR } from \"../../lib/graphql/mutations/AddDoctor\";\nimport {\n  AddDoctor,\n  AddDoctorVariables,\n} from \"../../lib/graphql/mutations/AddDoctor/__generated__/AddDoctor\";\nimport { DOCTOR_LIST } from \"../../lib/graphql/queries\";\nimport { CHECK_IF_DOCTOR_USER_NAME_UNIQUE } from \"../../lib/graphql/queries/CheckIfDoctorNameUnique\";\nimport {\n  CheckIfDoctorNameUnique,\n  CheckIfDoctorNameUniqueVariables,\n} from \"../../lib/graphql/queries/CheckIfDoctorNameUnique/__generated__/CheckIfDoctorNameUnique\";\nimport {\n  DoctorList,\n  DoctorListVariables,\n} from \"../../lib/graphql/queries/DoctorList/__generated__/DoctorList\";\nimport { Header } from \"../PatientInformation/components\";\nimport { AddDoctorDialog } from \"./components\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport { blue } from \"@material-ui/core/colors\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst DEFAULT_LIMIT = 5;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    list: {\n      margin: \"20px 10px\",\n    },\n    actionContainer: {\n      margin: 10,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n    },\n    paginationContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    totalNumberText: {\n      marginRight: 5,\n    },\n    avatar: {\n      backgroundColor: blue[100],\n      color: blue[600],\n    },\n  })\n);\nexport const CreateDoctor = () => {\n  const classes = useStyles();\n  const { loading, data, refetch } = useQuery<DoctorList, DoctorListVariables>(\n    DOCTOR_LIST,\n    {\n      variables: {\n        limit: DEFAULT_LIMIT,\n        currentPageIndex: 0,\n      },\n      fetchPolicy: \"network-only\",\n    }\n  );\n  const [checkDoctorName, { data: checkNameData }] = useLazyQuery<\n    CheckIfDoctorNameUnique,\n    CheckIfDoctorNameUniqueVariables\n  >(CHECK_IF_DOCTOR_USER_NAME_UNIQUE, {\n    fetchPolicy: \"no-cache\",\n  });\n  const [addDoctor] = useMutation<AddDoctor, AddDoctorVariables>(ADD_DOCTOR);\n  const [currentPageIndex, setCurrentPageIndex] = useState(0);\n  const [isAddDoctorDialogOpen, setIsAddDoctorDialogOpen] = useState(false);\n  const closeDialog = () => {\n    setIsAddDoctorDialogOpen(false);\n  };\n  const openDialog = () => {\n    setIsAddDoctorDialogOpen(true);\n  };\n  const handlePaginationChange = (\n    _event: React.ChangeEvent<unknown>,\n    pageIndex: number\n  ) => {\n    setCurrentPageIndex(pageIndex - 1);\n    refetch({ limit: DEFAULT_LIMIT, currentPageIndex: pageIndex - 1 });\n  };\n  const refetchListData = () => {\n    refetch({ limit: DEFAULT_LIMIT, currentPageIndex });\n  };\n  if (loading || !data) {\n    return <LoadingIndicator />;\n  }\n  return (\n    <>\n      <Header text={\"医生账号信息\"} />\n      <div className={classes.actionContainer}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={openDialog}\n          startIcon={<AddIcon />}\n        >\n          添加医生\n        </Button>\n        <div className={classes.paginationContainer}>\n          <span className={classes.totalNumberText}>\n            共计{data.doctorList.total}个账号\n          </span>\n          <Pagination\n            count={Math.ceil(data.doctorList.total / DEFAULT_LIMIT)}\n            variant=\"outlined\"\n            color=\"primary\"\n            page={currentPageIndex + 1}\n            onChange={handlePaginationChange}\n          />\n        </div>\n      </div>\n      <List component={Paper} className={classes.list}>\n        {data.doctorList.admins.map((admin, index) => (\n          <React.Fragment key={admin.userName}>\n            <ListItem alignItems=\"flex-start\" key={admin.userName}>\n              <ListItemAvatar>\n                <Avatar className={classes.avatar}>\n                  <PersonIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                primary={`账号名：${admin.userName}`}\n                secondary={`姓名：${admin.name}`}\n              />\n            </ListItem>\n            {index !== data.doctorList.admins.length - 1 && <Divider />}\n          </React.Fragment>\n        ))}\n      </List>\n      <AddDoctorDialog\n        isOpen={isAddDoctorDialogOpen}\n        closeDialog={closeDialog}\n        checkDoctorUserName={checkDoctorName}\n        checkResult={checkNameData}\n        addDoctor={addDoctor}\n        refetchListData={refetchListData}\n      />\n    </>\n  );\n};\n","import { useLazyQuery, useMutation } from \"@apollo/client\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions,\n  Button,\n  createStyles,\n  makeStyles,\n  Theme,\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  Switch,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useCallback } from \"react\";\nimport { ErrorIndicator } from \"../../../../lib/components\";\nimport { SuccessIndicator } from \"../../../../lib/components/SuccessIndicator\";\nimport { ADD_DOCTOR_CONFIG } from \"../../../../lib/graphql/mutations\";\nimport {\n  AddDoctorConfig,\n  AddDoctorConfigVariables,\n} from \"../../../../lib/graphql/mutations/AddDoctorConfig/__generated__/AddDoctorConfig\";\nimport { CHECK_IF_DOCTOR_CONFIG_USER_NAME_UNIQUE } from \"../../../../lib/graphql/queries\";\nimport {\n  CheckIfDoctorConfigNameUnique,\n  CheckIfDoctorConfigNameUniqueVariables,\n} from \"../../../../lib/graphql/queries/CheckIfDoctorConfigNameUnique/__generated__/CheckIfDoctorConfigNameUnique\";\nimport { QuestionnaireList } from \"../../../../lib/graphql/queries/QuestionnaireList/__generated__/QuestionnaireList\";\nimport { debounce } from \"../../../../lib/utils\";\n\ninterface Props {\n  isOpen: boolean;\n  closeDialog: () => void;\n  refetchListData: () => void;\n  formList: QuestionnaireList;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    input: {\n      display: \"block\",\n      margin: 5,\n      paddingRight: 5,\n    },\n    inputContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n  })\n);\n\nexport const AddConfigurationDialog = (props: Props) => {\n  const classes = useStyles();\n  const { isOpen, closeDialog, refetchListData, formList } = props;\n  const [checkConfigName, { data: checkConfigNameResult }] = useLazyQuery<\n    CheckIfDoctorConfigNameUnique,\n    CheckIfDoctorConfigNameUniqueVariables\n  >(CHECK_IF_DOCTOR_CONFIG_USER_NAME_UNIQUE, {\n    fetchPolicy: \"no-cache\",\n  });\n\n  const [addDoctorConfig] = useMutation<\n    AddDoctorConfig,\n    AddDoctorConfigVariables\n  >(ADD_DOCTOR_CONFIG);\n  const debouncedCheckConfigName = useCallback(\n    () => debounce(checkConfigName, 300),\n    [checkConfigName]\n  );\n  const [nameInput, setNameInput] = useState(\"\");\n  const [isErrorShown, setIsErrorShown] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isSuccessShown, setIsSuccessShown] = useState(false);\n  const [checkedFormIds, setCheckedFormIds] = useState<string[]>([]);\n  useEffect(() => {\n    setNameInput(\"\");\n    setErrorMessage(\"\");\n    if (formList) {\n      setCheckedFormIds(formList.questionnaireList.map((form) => form.id));\n    }\n  }, [formList]);\n\n  useEffect(() => {\n    if (checkConfigNameResult?.checkIfDoctorConfigNameUnique.result === false) {\n      setErrorMessage(\"此配置名已存在！\");\n    } else {\n      setErrorMessage(\"\");\n    }\n  }, [checkConfigNameResult]);\n\n  const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setNameInput(e.target.value);\n    debouncedCheckConfigName()({\n      variables: { doctorConfigName: e.target.value },\n    });\n  };\n\n  const handleSwitchChange = (formId: string) => {\n    if (checkedFormIds.includes(formId)) {\n      setCheckedFormIds(\n        checkedFormIds.filter((currentId) => currentId !== formId)\n      );\n    } else {\n      setCheckedFormIds([...checkedFormIds, formId]);\n    }\n  };\n\n  const handleOkButtonClick = () => {\n    addDoctorConfig({\n      variables: {\n        input: {\n          configName: nameInput,\n          selected: false,\n          formIds: checkedFormIds,\n        },\n      },\n    }).then((addResult) => {\n      if (addResult.data?.addDoctorConfig.result === true) {\n        setIsSuccessShown(true);\n        closeDialog();\n        refetchListData();\n      }\n    });\n  };\n  return (\n    <>\n      <Dialog\n        open={isOpen}\n        onClose={closeDialog}\n        aria-labelledby=\"form-dialog-title\"\n        maxWidth=\"md\"\n        fullWidth={true}\n      >\n        <DialogTitle id=\"form-dialog-title\">添加配置</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            请输入配置名，并选择需要使用的量表。\n          </DialogContentText>\n\n          <TextField\n            label=\"配置名\"\n            className={classes.input}\n            fullWidth\n            required\n            value={nameInput}\n            onChange={handleNameChange}\n            error={errorMessage ? true : undefined}\n            helperText={errorMessage || undefined}\n          />\n          <List>\n            {formList.questionnaireList.map((form) => (\n              <ListItem key={form.key}>\n                <ListItemText primary={form.name} />\n                <ListItemSecondaryAction>\n                  <Switch\n                    edge=\"end\"\n                    color=\"primary\"\n                    checked={checkedFormIds.includes(form.id)}\n                    onChange={() => handleSwitchChange(form.id)}\n                  />\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n          </List>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog}>取消</Button>\n          <Button\n            color=\"primary\"\n            disabled={!nameInput || errorMessage ? true : undefined}\n            onClick={handleOkButtonClick}\n          >\n            添加\n          </Button>\n        </DialogActions>\n        <ErrorIndicator\n          showError={isErrorShown}\n          setShowError={setIsErrorShown}\n          errorMessage={errorMessage}\n        />\n      </Dialog>\n      <SuccessIndicator\n        showSuccess={isSuccessShown}\n        setShowSuccess={setIsSuccessShown}\n        successMessage=\"成功添加配置\"\n      />\n    </>\n  );\n};\n","import { useMediaQuery } from \"@material-ui/core\";\n\nexport const useCheckSmallScreen = () => {\n  return useMediaQuery(\"(max-width:580px)\");\n};\n\nexport const debounce = <F extends (...params: any[]) => void>(\n  func: F,\n  waitTime: number\n): F => {\n  let timeout: NodeJS.Timeout;\n  return function returnedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      return func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, waitTime);\n  } as F;\n};\n\nexport function isNumeric(str: string) {\n  if (typeof str != \"string\") return false;\n  return !isNaN(parseFloat(str));\n}\n","import {\n  Dialog,\n  DialogTitle,\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  Switch,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { DoctorConfigList_doctorConfigList_configs as DoctorConfigItem } from \"../../../../lib/graphql/queries/DoctorConfigList/__generated__/DoctorConfigList\";\nimport { QuestionnaireList } from \"../../../../lib/graphql/queries/QuestionnaireList/__generated__/QuestionnaireList\";\n\ninterface Props {\n  config: DoctorConfigItem;\n  isDialogOpen: boolean;\n  formList: QuestionnaireList;\n  closeDialog: () => void;\n}\nexport const ConfirationDetailDialog = (props: Props) => {\n  const { config, isDialogOpen, formList, closeDialog } = props;\n  return (\n    <Dialog fullWidth maxWidth=\"md\" open={isDialogOpen} onClose={closeDialog}>\n      <DialogTitle>配置名：{config.configName}</DialogTitle>\n      <List>\n        {formList.questionnaireList.map((form) => (\n          <ListItem key={form.key}>\n            <ListItemText primary={form.name} />\n            <ListItemSecondaryAction>\n              <Switch\n                edge=\"end\"\n                color=\"primary\"\n                checked={config.formIds.includes(form.id)}\n              />\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n    </Dialog>\n  );\n};\n","import { gql } from \"@apollo/client\";\n\nexport const DELETE_CONFIG = gql`\n  mutation DeleteConfig($input: DeleteConfigInput) {\n    deleteConfig(input: $input) {\n      result\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  Button,\n  Card,\n  CardContent,\n  CardActions,\n  IconButton,\n} from \"@material-ui/core\";\nimport { Header } from \"../PatientInformation/components\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { AddConfigurationDialog, ConfirationDetailDialog } from \"./components\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport {\n  DOCTOR_CONFIG_LIST,\n  QUESTIONNAIRE_LIST,\n} from \"../../lib/graphql/queries\";\nimport {\n  QuestionnaireList,\n  QuestionnaireListVariables,\n} from \"../../lib/graphql/queries/QuestionnaireList/__generated__/QuestionnaireList\";\nimport { LoadingIndicator } from \"../../lib/components\";\nimport {\n  DoctorConfigList,\n  DoctorConfigList_doctorConfigList_configs as DoctorConfigItem,\n} from \"../../lib/graphql/queries/DoctorConfigList/__generated__/DoctorConfigList\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport {\n  SelectConfig,\n  SelectConfigVariables,\n} from \"../../lib/graphql/mutations/SelectConfig/__generated__/SelectConfig\";\nimport { SELECT_CONFIG } from \"../../lib/graphql/mutations\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {\n  DeleteConfig,\n  DeleteConfigVariables,\n} from \"../../lib/graphql/mutations/DeleteConfig/__generated__/DeleteConfig\";\nimport { DELETE_CONFIG } from \"../../lib/graphql/mutations/DeleteConfig\";\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\nimport { NO_DOCTOR_LOGIN_ERROR_MESSAGE } from \"../../lib/utils/constants\";\nimport { Redirect } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    actionsContainer: {\n      margin: 10,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n    },\n    configCard: {\n      width: 270,\n      margin: \"10px 10px\",\n      display: \"inline-block\",\n    },\n    configNameContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    settingIcon: {\n      marginRight: 10,\n      color: \"#2196F3\",\n    },\n    configPromptMessage: {\n      margin: 10,\n    },\n    noOverflow: {\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n    },\n    inUseText: {\n      color: \"#4caf50 !important\",\n    },\n    resetButton: {\n      marginLeft: 10,\n    },\n    cardDescription: {\n      fontSize: \"0.875rem\",\n      paddingTop: 15,\n    },\n    deleteButton: {\n      marginLeft: \"auto !important\",\n      \"&:hover\": {\n        color: \"#B71C1C\",\n      },\n    },\n  })\n);\n\nexport const DoctorConfig = () => {\n  const [isAddConfigDialogOpen, setIsAddConfigDialogOpen] = useState(false);\n  const closeAddConfigDialog = () => {\n    setIsAddConfigDialogOpen(false);\n  };\n  const openAddConfigDialog = () => {\n    setIsAddConfigDialogOpen(true);\n  };\n  const [selectedConfig, setSelectedConfig] = useState<null | DoctorConfigItem>(\n    null\n  );\n  const [\n    isConfigrationDetailDialogOpen,\n    setIsConfigrationDetailDialogOpen,\n  ] = useState(false);\n  const closeConfigDetailDialog = () => {\n    setIsConfigrationDetailDialogOpen(false);\n  };\n  const openConfigDetailDialog = (configItem: DoctorConfigItem) => {\n    setSelectedConfig(configItem);\n    setIsConfigrationDetailDialogOpen(true);\n  };\n  const {\n    data: configList,\n    refetch,\n    loading: configListLoading,\n  } = useQuery<DoctorConfigList>(DOCTOR_CONFIG_LIST, {\n    fetchPolicy: \"no-cache\",\n  });\n  console.log(configList);\n  const classes = useStyles();\n  const {\n    loading,\n    data: formListData,\n    error: questionnaireListError,\n  } = useQuery<QuestionnaireList, QuestionnaireListVariables>(\n    QUESTIONNAIRE_LIST,\n    {\n      variables: { isReport: false, showAll: true },\n    }\n  );\n  const [selectConfig] = useMutation<SelectConfig, SelectConfigVariables>(\n    SELECT_CONFIG\n  );\n  const [deleteConfig] = useMutation<DeleteConfig, DeleteConfigVariables>(\n    DELETE_CONFIG\n  );\n  const handleSelectConfigButtonClick = (configId: string) => {\n    selectConfig({ variables: { input: { configId } } }).then(() => refetch());\n  };\n  const handleDeleteConfigButtonClick = (configId: string) => {\n    deleteConfig({ variables: { input: { configId } } }).then(() => refetch());\n  };\n  const handleResetButtonClick = () => {\n    selectConfig({ variables: { input: {} } }).then(() => refetch());\n  };\n  if (questionnaireListError?.message === NO_DOCTOR_LOGIN_ERROR_MESSAGE) {\n    return <Redirect to=\"/doctor\" />;\n  }\n\n  if (loading || !formListData || !configList || configListLoading) {\n    return <LoadingIndicator />;\n  }\n  let currentlyUsedConfig: null | DoctorConfigItem | false = null;\n  // null: unknown\n  // false: no currently used configuration\n  // DoctorConfigItem: currently used configration\n  const configInUseList = configList?.doctorConfigList.configs.filter(\n    (config) => config.selected === true\n  );\n  if (configInUseList === undefined) {\n    currentlyUsedConfig = null;\n  } else if (configInUseList.length === 0) {\n    currentlyUsedConfig = false;\n  } else {\n    currentlyUsedConfig = configInUseList[0];\n  }\n  return (\n    <>\n      <Header text={\"配置患者端使用的量表\"} />\n      <div className={classes.actionsContainer}>\n        <Button\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          variant=\"contained\"\n          onClick={openAddConfigDialog}\n        >\n          添加配置\n        </Button>\n        <a href=\"/user\" target=\"_blank\">\n          <Button startIcon={<OpenInNewIcon />}>启动用户端</Button>\n        </a>\n      </div>\n      <div className={classes.configPromptMessage}>\n        {/** Prompt message */}\n        {currentlyUsedConfig === null ? null : currentlyUsedConfig === false ? (\n          \"当前无使用中的自定义配置，所有量表都可见。\"\n        ) : (\n          <>\n            {`当前使用的配置名称为：${currentlyUsedConfig.configName}`}\n            <Button\n              className={classes.resetButton}\n              variant=\"outlined\"\n              size=\"small\"\n              onClick={handleResetButtonClick}\n            >\n              重置\n            </Button>\n          </>\n        )}\n      </div>\n      <div>\n        {configList?.doctorConfigList.configs.map((config) => (\n          <Card className={classes.configCard} key={config.id}>\n            <CardContent>\n              <div className={classes.configNameContainer}>\n                <SettingsIcon className={classes.settingIcon} />\n                <span className={classes.noOverflow}>{config.configName}</span>\n              </div>\n              <div className={classes.cardDescription}>\n                共{config.formIds.length}个量表\n              </div>\n            </CardContent>\n            <CardActions>\n              <Button\n                size=\"small\"\n                onClick={() => openConfigDetailDialog(config)}\n              >\n                查看详情\n              </Button>\n              {config.selected === false ? (\n                <Button\n                  size=\"small\"\n                  onClick={() => handleSelectConfigButtonClick(config.id)}\n                >\n                  使用此配置\n                </Button>\n              ) : (\n                <Button\n                  size=\"small\"\n                  className={classes.inUseText}\n                  disableRipple\n                  disabled\n                >\n                  使用中\n                </Button>\n              )}\n              <IconButton\n                size=\"small\"\n                className={classes.deleteButton}\n                onClick={() => handleDeleteConfigButtonClick(config.id)}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </CardActions>\n          </Card>\n        ))}\n      </div>\n      <AddConfigurationDialog\n        isOpen={isAddConfigDialogOpen}\n        closeDialog={closeAddConfigDialog}\n        refetchListData={refetch}\n        formList={formListData}\n      />\n      {selectedConfig && (\n        <ConfirationDetailDialog\n          isDialogOpen={isConfigrationDetailDialogOpen}\n          closeDialog={closeConfigDetailDialog}\n          formList={formListData}\n          config={selectedConfig}\n        />\n      )}\n    </>\n  );\n};\n","import \"@fontsource/noto-sans-sc/400.css\";\nimport {\n  ApolloClient,\n  ApolloProvider,\n  InMemoryCache,\n  useMutation,\n} from \"@apollo/client\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { DOCTOR_LOG_IN } from \"./lib/graphql/mutations\";\nimport { Doctor, Patient, Viewer } from \"./lib/type\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport {\n  AppHeader,\n  Sider,\n  Home,\n  Login,\n  Form,\n  Report,\n  PatientInformation,\n  Welcome,\n  PromptMessage,\n  PatientLogin,\n  CreateDoctor,\n  DoctorConfig,\n} from \"./sections\";\nimport {\n  createMuiTheme,\n  createStyles,\n  makeStyles,\n  Theme,\n  ThemeProvider,\n  Toolbar,\n} from \"@material-ui/core\";\nimport { PrivateRoute } from \"./lib/components/PrivateRoute\";\nimport { LoadingIndicator } from \"./lib/components\";\nimport { zhCN } from \"@material-ui/core/locale\";\nimport {\n  DoctorLogIn,\n  DoctorLogInVariables,\n} from \"./lib/graphql/mutations/DoctorLogIn/__generated__/DoctorLogIn\";\nimport {\n  PatientLogIn,\n  PatientLogInVariables,\n} from \"./lib/graphql/mutations/PatientLogIn/__generated__/PatientLogIn\";\nimport { PATIENT_LOG_IN } from \"./lib/graphql/mutations/PatientLogIn\";\nimport \"fontsource-roboto\";\n\nconst client = new ApolloClient({\n  uri: \"/api\",\n  cache: new InMemoryCache(),\n  headers: { \"X-CSRF_TOKEN\": sessionStorage.getItem(\"token\") || \"\" },\n});\n\nconst initialViewer: Viewer = {\n  userName: null,\n  token: null,\n  didRequest: false,\n  catelogy: null,\n};\n\nconst initialDoctor: Doctor = {\n  name: null,\n  userName: null,\n  didRequest: false,\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      height: \"100%\",\n    },\n    contentContainer: {\n      flexGrow: 1,\n      height: \"100%\",\n    },\n  })\n);\n\nexport const PRIMARY_COLOR = \"#1a73e8\";\nconst App = () => {\n  const classes = useStyles();\n\n  // const [viewer, setViewer] = useState<Viewer>(initialViewer);\n  const [doctor, setDoctor] = useState<Doctor>(initialDoctor);\n  const [patient, setPatient] = useState<Patient>(initialViewer);\n  const [isSiderOpen, setIsSiderOpen] = useState(false);\n  // const [logIn] = useMutation<LogInData, LogInVariables>(LOG_IN, {\n  //   onCompleted: (data) => {\n  //     if (data && data.logIn) {\n  //       setViewer(data.logIn);\n  //       if (data.logIn.token) {\n  //         sessionStorage.setItem(\"token\", data.logIn.token);\n  //       } else {\n  //         sessionStorage.removeItem(\"token\");\n  //       }\n  //     }\n  //   },\n  // });\n  // const logInRef = useRef(logIn);\n  const [doctorLogIn, { loading: doctorLogInLoading }] = useMutation<\n    DoctorLogIn,\n    DoctorLogInVariables\n  >(DOCTOR_LOG_IN, {\n    onCompleted: (data) => {\n      if (data && data.doctorLogIn) {\n        const { name, userName, didRequest } = data.doctorLogIn;\n        setDoctor({\n          name,\n          userName,\n          didRequest,\n        });\n      }\n    },\n  });\n  const doctorLogInRef = useRef(doctorLogIn);\n\n  const [patientLogIn, { loading: patientLogInLoading }] = useMutation<\n    PatientLogIn,\n    PatientLogInVariables\n  >(PATIENT_LOG_IN, {\n    onCompleted: (data) => {\n      if (data && data.patientLogIn) {\n        setPatient(data.patientLogIn);\n      }\n    },\n  });\n\n  const patientLogInRef = useRef(patientLogIn);\n  useEffect(() => {\n    doctorLogInRef.current();\n    // logInRef.current();\n    patientLogInRef.current();\n  }, []);\n  if (\n    doctorLogInLoading ||\n    !doctor.didRequest ||\n    patientLogInLoading ||\n    !patient.didRequest\n  ) {\n    return <LoadingIndicator />;\n  }\n  const isAuthorized = !!doctor.userName;\n  return (\n    <Router>\n      {/** App Header */}\n      <Switch>\n        <Route exact path=\"/\" />\n        <Route exact path=\"/user/prompt\" />\n        <Route exact path=\"/user/login\" />\n        <Route path=\"/user/home\" />\n        <Route path=\"/doctor\">\n          <AppHeader\n            viewer={doctor}\n            setViewer={setDoctor}\n            type=\"doctor\"\n            setIsSiderOpen={setIsSiderOpen}\n          />\n          <Switch>\n            <Route exact path=\"/\" />\n          </Switch>\n        </Route>\n      </Switch>\n\n      <Switch>\n        <Route exact path=\"/login\">\n          <Login\n            isAuthorized={isAuthorized}\n            setViewer={setDoctor}\n            setDoctor={setDoctor}\n            doctor={doctor}\n          />\n        </Route>\n        <Route\n          exact\n          path=\"/doctor\"\n          render={({ location }) => (\n            <Redirect to={{ pathname: \"/login\", state: { from: location } }} />\n          )}\n        />\n\n        <PrivateRoute isAuthorized={isAuthorized} path=\"/user\" exact>\n          <Welcome\n            setDoctor={setDoctor}\n            doctor={doctor}\n            logIn={doctorLogInRef.current}\n          />\n        </PrivateRoute>\n        <PrivateRoute isAuthorized={isAuthorized} path=\"/user/prompt\" exact>\n          <PromptMessage />\n        </PrivateRoute>\n        <PrivateRoute isAuthorized={isAuthorized} path=\"/user/login\" exact>\n          <PatientLogin setPatient={setPatient} patient={patient} />\n        </PrivateRoute>\n        {doctor.userName && (\n          <PrivateRoute\n            isAuthorized={isAuthorized}\n            path={`/doctor/${doctor.userName}`}\n          >\n            <div className={classes.root}>\n              <Sider\n                viewer={doctor}\n                type=\"doctor\"\n                open={isSiderOpen}\n                onClose={() => setIsSiderOpen(false)}\n              />\n              <div className={classes.contentContainer}>\n                <Toolbar />\n                <Switch>\n                  <Route\n                    exact\n                    path={`/doctor/${doctor.userName}`}\n                    component={PatientInformation}\n                  />\n                  <Route\n                    exact\n                    path={`/doctor/${doctor.userName}/manage`}\n                    component={CreateDoctor}\n                  />\n                  <Route\n                    exact\n                    path={`/doctor/${doctor.userName}/config`}\n                    component={DoctorConfig}\n                  />\n                </Switch>\n              </div>\n            </div>\n          </PrivateRoute>\n        )}\n        {patient.userName && (\n          <PrivateRoute isAuthorized={isAuthorized} path=\"/user\">\n            <AppHeader viewer={patient} setViewer={setPatient} type=\"user\" />\n            <Switch>\n              <PrivateRoute isAuthorized={isAuthorized} path=\"/user/form\" exact>\n                <Form patient={patient} />\n              </PrivateRoute>\n\n              <PrivateRoute isAuthorized={isAuthorized} path=\"/user\">\n                <div className={classes.root}>\n                  <Sider viewer={patient} type=\"user\" />\n                  <div className={classes.contentContainer}>\n                    <Toolbar />\n                    <Switch>\n                      <Route exact path=\"/user/home\">\n                        <Home patient={patient} />\n                      </Route>\n                      <Route exact path=\"/user/report\" component={Report} />\n                    </Switch>\n                  </div>\n                </div>\n              </PrivateRoute>\n            </Switch>\n          </PrivateRoute>\n        )}\n        <PrivateRoute isAuthorized={isAuthorized} path=\"/user\">\n          <></>\n        </PrivateRoute>\n        <PrivateRoute isAuthorized={isAuthorized} path=\"/doctor\">\n          <></>\n        </PrivateRoute>\n        <Route exact path=\"/\">\n          <Redirect to=\"/user\" />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nconst theme = createMuiTheme(\n  {\n    palette: {\n      primary: {\n        light: \"#6a9dff\",\n        main: PRIMARY_COLOR,\n        dark: \"#0045b5\",\n        contrastText: \"#fff\",\n      },\n      secondary: {\n        light: \"#ff7961\",\n        main: \"#f44336\",\n        dark: \"#ba000d\",\n        contrastText: \"#000\",\n      },\n    },\n  },\n  zhCN\n);\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}