{"version":3,"sources":["lib/graphql/mutations/Login/index.ts","lib/graphql/mutations/LogOut/index.ts","lib/graphql/mutations/CreateAccount/index.ts","lib/graphql/mutations/SaveUserAnswer/index.ts","lib/graphql/mutations/SavePartialAnswer/index.ts","lib/graphql/mutations/DoctorLogOut/index.ts","lib/graphql/mutations/DoctorLogIn/index.ts","lib/graphql/mutations/AddDiagnosis/index.ts","lib/graphql/mutations/AddDoctor/index.ts","reportWebVitals.ts","lib/components/PrivateRoute/index.tsx","lib/components/LoadingIndicator/index.tsx","lib/components/ErrorIndicator/index.tsx","lib/components/ReportPdf/index.tsx","lib/components/ReturnToHomeHeader/index.tsx","lib/components/LineChart/index.tsx","lib/utils/constants.ts","lib/components/LineChartPopOver/index.tsx","sections/AppHeader/assets/logo.png","sections/Login/index.tsx","sections/Home/assets/cardIcon.png","lib/graphql/queries/QuestionnaireList/index.ts","lib/graphql/queries/QuestionnaireContent/index.ts","lib/graphql/queries/Report/index.ts","lib/graphql/queries/ReportForAdmin/index.ts","lib/graphql/queries/DoctorList/index.ts","sections/Home/components/EnterGenderAndAgeDialog/index.tsx","sections/Home/index.tsx","lib/graphql/mutations/PatientLogOut/index.ts","sections/Report/components/withReportPdfData/index.tsx","lib/graphql/globalTypes.ts","sections/AppHeader/index.tsx","sections/Sider/components/PersonalInfomation/index.tsx","sections/Sider/index.tsx","sections/Form/Components/ProgressBar/index.tsx","sections/Form/Components/Timer/index.tsx","sections/Form/index.tsx","sections/CreateAccount/index.tsx","sections/Report/index.tsx","lib/graphql/queries/QueryUser/index.ts","sections/PatientInformation/components/AdditionalFieldsModal/index.tsx","sections/PatientInformation/components/SearchPatientForm/index.tsx","sections/PatientInformation/components/Header/index.tsx","sections/PatientInformation/components/LineChartsButton/index.tsx","sections/PatientInformation/components/AddDiagnosisModal/index.tsx","sections/PatientInformation/components/PatientTable/index.tsx","sections/PatientInformation/components/ChooseFormModal/index.tsx","sections/PatientInformation/components/HelpPopover/index.tsx","sections/PatientInformation/index.tsx","sections/PatientInformation/components/withReportPdfDataForAdmin/index.tsx","sections/Welcome/components/Header/index.tsx","sections/Welcome/components/DoctorLogInDialog/index.tsx","sections/Welcome/index.tsx","sections/PromptMessage/index.tsx","lib/graphql/mutations/PatientLogIn/index.ts","sections/PatientLogin/index.tsx","lib/graphql/queries/CheckIfDoctorNameUnique/index.ts","lib/components/SuccessIndicator/index.tsx","sections/CreateDoctor/components/AddDoctorDialog/index.tsx","sections/CreateDoctor/index.tsx","index.tsx"],"names":["gql","SAVE_USER_ANSWER","SAVE_PARTIAL_ANSWER","DOCTOR_LOG_OUT","DOCTOR_LOG_IN","ADD_DIAGNOSIS","ADD_DOCTOR","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","PrivateRoute","props","isAuthorized","children","rest","render","location","to","pathname","state","from","useStyles","makeStyles","theme","root","display","width","height","justifyContent","alignItems","LoadingIndicator","styles","className","CircularProgress","ErrorIndicator","showError","setShowError","errorMessage","Snackbar","open","onClose","elevation","variant","severity","pdfjs","GlobalWorkerOptions","workerSrc","createStyles","marginTop","paper","marginBottom","pdfViewer","topbar","returnButton","marginLeft","downloadButton","marginRight","printIcon","page","padding","ReportPdf","pdfData","closeReport","classes","React","useState","window","innerWidth","setWidth","updateWidth","useEffect","addEventListener","removeEventListener","numPages","setNumPages","IconButton","onClick","printJS","printable","type","base64","download","href","title","Divider","file","loading","onLoadSuccess","nextNumPages","Array","el","index","Paper","pageNumber","renderMode","document","getElementById","offsetWidth","header","overflow","actionContainer","float","paddingRight","paddingTop","fontSize","ReturnToHomeHeader","Button","color","startIcon","canvasContainer","LineChart","labelList","dataList","multipleDataList","showLabel","chartRef","useRef","initRef","current","lineChart","getContext","Chart","data","labels","datasets","label","borderColor","backgroundColor","fill","lineTension","options","tooltips","mode","intersect","hover","maintainAspectRatio","responsive","scales","yAxes","ticks","beginAtZero","plugins","datalabels","anchor","align","formatter","Math","round","id","ref","EYSCENCK_FORM_NAME","HIDE_LABEL_FORMS","LineChartPopOver","formResultList","formName","fillInDateList","useMemo","map","formResult","fillInDate","resultList","Number","JSON","parse","result","total","resultObject","eTScore","pTScore","nTScore","lTScore","includes","isDialogOpen","setIsDialogOpen","size","disabled","length","Dialog","DialogTitle","DialogContent","logInCard","borderRadius","margin","logInText","textAlign","promptText","input","inputContainer","userNameInput","passwordInput","buttonContainer","logo","logoContainer","pageContainer","topPadding","initialAccountInfo","userName","password","Login","setDoctor","setViewer","doctor","useMutation","onCompleted","doctorLogIn","name","didRequest","setIsRedo","onError","error","setIsLogInErrorShown","doctorLoginRef","accountInfo","setAccountInfo","isNameAndPasswordValidated","setIsNameAndPasswordValidated","isLogInErrorShown","handleKeyPress","event","key","logInButtonOnClick","isRedo","detectRedoRef","history","variables","useHistory","isDoctor","Card","CardContent","src","alt","TextField","autoFocus","value","onChange","e","target","helperText","undefined","inputProps","QUESTIONNAIRE_LIST","QUESTIONNAIRE_CONTENT","REPORT","REPORT_FOR_ADMIN","DOCTOR_LIST","EnterGenderAndAgeDialog","isOpen","handleClose","goToLogInPage","age","DialogContentText","DialogActions","content","listName","gridTemplateColumns","rowGap","columnGap","card","cardActionArea","cursor","indigo","cardIcon","unfinishedText","finishedText","questionnaireName","lineHeight","cardActionContainer","paddingLeft","Home","patient","isSmallScreen","useMediaQuery","useQuery","fetchPolicy","isReport","listData","uniqueFormList","formList","formSet","Set","questionnaireList","forEach","questionnaire","has","displayedFillInDate","push","add","isGenderAndAgeDialogOpen","setIsGenderAndAgeDialogOpen","closeGenderAndAgeDialog","defaultReturn","test","nameMatchFormResult","match","abbreviationMatchFormResult","substring","abbreviation","replace","goToFormPage","formId","gender","finishStatus","done","List","subheader","ListSubheader","ListItem","button","ListItemAvatar","CardIcon","ListItemText","primary","secondary","CardActionArea","CardActions","WrappedComponent","UsersFilter","PATIENT_LOG_OUT","flexGrow","zIndex","drawer","spacing","maxWidth","maxHeight","timerHeader","AppHeader","viewer","doctorLogOut","sessionStorage","removeItem","console","log","logOut","patientLogOut","handleLogout","a","path","exact","AppBar","position","Toolbar","propertyName","propertyDivider","fields","displayNames","PersonalInformation","field","validIndexes","i","validIndex","flexShrink","personalInfoCard","personalInfoCardContent","paddingBottom","personalInfoText","fontWeight","drawerPaper","idChip","adminMenu","adminMenuHeader","Sider","useLocation","Drawer","style","ListItemIcon","Chip","icon","PROGRESS_BAR_WIDTH","finished","leftCircle","circle","circlewrapper","rightCircle","rightCircleWrapper","ProgressBar","totalNumber","currentIndex","widthOfFinishedPart","timeNumber","Timer","seconds","setSeconds","interval","setTimeout","clearTimeout","hour","floor","minute","second","formContainer","form","titleCard","titleCardColor","borderTopLeftRadius","borderTopRightRadius","titleCardContent","titleCardMainText","questionCard","questionText","questionOptionText","buttonWithRightMargin","homeLink","exitButton","right","bottom","timerContaner","left","footer","progressWrapper","progressWrapperForSmallScreen","Form","URLSearchParams","search","get","partialAnswer","answers","questions","setIsAllowedToSubmit","newAnswers","answer","setAnswers","setCurrentQuestionIndex","min","saveUserAnswer","setIsDone","savePartialAnswer","saveUserAnswerRef","savePartialAnswerRef","timeoutRef","autoSaveTimeoutRef","currentQuestionIndex","isDone","isAllowedToSubmit","isNextButtonDisabled","setIsNextButtonDisabled","confirmed","setConfirmed","getAnswerArray","useCallback","answerArray","savePartialAnswerToBackend","questionnaireId","Promise","resolve","setInterval","clearInterval","closeConfirmDialog","onNextButtonClick","goToHome","handleExitButtonClick","currentQuestion","Link","preventDefault","FormControl","component","choices","choice","FormControlLabel","control","Radio","checked","questionIndex","timeout","radioButtonOnClick","Fab","instruction","createAccountCard","createAccountText","formClassifyText","PdfViewer","userAnswerIds","report","pdf","questionnaireTable","doneIcon","Report","count","setNumberOfFinishedQuestionnaires","newselectedUserAnswers","userAnswerId","setSelectedUserAnswers","selectedUserAnswers","numberOfFinishedQuestionnaires","isReportVisible","setIsReportVisible","TableContainer","Table","aira-label","TableHead","TableRow","TableCell","Checkbox","TableBody","delete","selectQuestionnaire","CheckCircleOutline","QUERY_USER","ADDITIONAL_FIELD_KEYS","ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES","removeElementFromArray","array","element","newArray","currentElement","AdditionalFieldsModal","handleDialogClose","additionalFields","setAdditionalFields","aria-labelledby","displayName","fieldKey","AGE_NEGATIVE_ERROR_MESSAGE","rangeWrapper","ageRangeInput","dateRangeWrapper","ageRangeWrapper","dateRangeInput","ageInputIconWrapper","buttonWrapper","extraFieldsWrapper","searchButton","whiteButton","rangeFormWrapper","ageInputIcon","chip","additionalFieldButton","datePickerProps","format","okLabel","cancelLabel","invalidLabel","maxDateMessage","minDateMessage","invalidDateMessage","SearchPatientForm","forwardRef","searchPatients","limit","setCurrentPageIndex","currentPageIndex","filter","setUserName","setName","setGender","max","ageRange","setAgeRange","dateRange","setDateRange","onlyMyPatient","setOnlyMyPatient","setErrorMessage","errorField","setErrorField","isAdditionalFieldsModalOpen","setIsAdditionalFieldsModalOpen","handleSearchButtonClick","minSignUpDate","year","getFullYear","month","getMonth","day","getDate","maxSignUpDate","useImperativeHandle","noValidate","autoComplete","InputLabel","Select","MenuItem","newMinAge","newMaxAge","utils","DateFnsUtils","locale","cnLocale","DatePicker","date","_value","onDelete","INITAL_ONLY_MY_PATIENT","Header","text","LineChartsButton","finishedForms","isButtonDisabled","newResultList","reverse","setIsOpen","closeModal","diagnosisText","minWidth","AddDiagnosisModal","patientName","patientId","refetch","addDiagnosis","setDiagnosis","diagnosis","handleComfirm","indexOf","fullWidth","shrink","option","loadingIndicatorWrapper","reportButton","lineChartsButtonContainer","tableCell","textOverflow","whiteSpace","iconMargin","tableColumnTexts","tableColumns","tableMinWidth","tableMaxWidth","PatientTable","patientList","selectedUserAnswerIds","setSelectedUserId","setSelectedUserAnswerIds","setIsReportShown","handleLimitChange","handleCurrentPageIndexChange","handleSortChange","isChooseFormModalShown","setIsChooseFormModalShown","finishedFormList","setFinishedFormList","isAddDiagnosisModalShown","setIsAddDiagnosisModalShown","addDiagnosisPatientId","setAddDiagnosisPatientId","addDiagnosisPatientName","setAddDiagnosisPatientName","handleEditDiagnosisButtonClick","queryUser","users","TablePagination","rowsPerPage","rowsPerPageOptions","onChangePage","_event","onChangeRowsPerPage","labelDisplayedRows","ceil","aria-label","TableSortLabel","active","direction","DATE_LATEST","patientInformation","isReportButtonDisabled","column","userId","finishedForm","handleReportButtonClick","onOkButtonClick","ChooseFormModal","popover","pointerEvents","aria-describedby","currentUserAnswerId","doctorName","reportForAdmin","withReportPdfDataForAdmin","PatientInformation","useLazyQuery","getQueryResult","userListData","searchFormRef","setLimit","setFilter","selectedUserId","isReportShown","getQueryResultRef","searchParams","setSearchParams","params","newFilter","DATE_OLDEST","welcomeMessage","DoctorLogInDialog","handleClickLogIn","handleDoctorLogIn","hideErrorIndicator","setPassword","isErrorShown","setIsErrorShown","hideError","handleClickCancel","Grid","container","item","background","minHeight","flexDirection","enterSystemButtonContainer","extendedIcon","seuText","Welcome","logIn","doctorLogInDialogRef","logInResult","titleWrapper","promptTextContainer","titleContainer","PromptMessage","endIcon","PATIENT_LOG_IN","personalInformationContainer","actionsWrapper","actionsContainer","PatientLogin","setPatient","queryParams","handleNextButtonClick","isBasicInformationShown","handleLogInButtonClick","patientLogIn","isUserNameValidated","setIsUserNameValidated","isNameValidated","setIsNameValidated","userInfo","setAge","education","setEducation","jobStatus","setJobStatus","marriageStatus","setMarriageStatus","setShowLoadSuccess","setIsBasicInformationShown","showLoadSuccess","handleCloseLoadSuccess","showNameErrorMessage","setShowNameErrorMessage","handleCloseNameErrorMessage","userNameFromQueryParams","required","InputProps","startAdornment","InputAdornment","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","CHECK_IF_DOCTOR_USER_NAME_UNIQUE","SuccessIndicator","showSuccess","setShowSuccess","successMessage","AddDoctorDialog","closeDialog","checkDoctorUserName","checkResult","addDoctor","refetchListData","setUserNameInput","nameInput","setNameInput","setPasswordInput","secondPasswordInput","setSecondPasswordInput","userNameDuplicate","setUserNameDubplicate","isSuccessShown","setIsSuccessShown","debouncedCheckDoctorUserName","debounce","checkIfDoctorUserNameUnique","handleAddButtonClick","list","paginationContainer","totalNumberText","avatar","blue","CreateDoctor","checkDoctorName","checkNameData","isAddDoctorDialogOpen","setIsAddDoctorDialogOpen","doctorList","Pagination","pageIndex","admins","admin","Fragment","Avatar","client","ApolloClient","uri","cache","InMemoryCache","headers","getItem","initialViewer","token","catelogy","initialDoctor","contentContainer","App","doctorLogInLoading","doctorLogInRef","patientLogInLoading","patientLogInRef","createMuiTheme","zhCN","ReactDOM","ThemeProvider"],"mappings":"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","file":"static/js/main.0bdfb681.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const LOG_IN = gql`\n  mutation LogIn($input: LogInInput) {\n    logIn(input: $input) {\n      ... on UserViewer {\n        token\n        name\n        userName\n        gender\n        education\n        jobStatus\n        age\n        marriageStatus\n        didRequest\n        catelogy\n      }\n      ... on AdminViewer {\n        name\n        userName\n        didRequest\n        token\n        catelogy\n      }\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const LOG_OUT = gql`\n  mutation Logout {\n    logOut {\n      ... on UserViewer {\n        id\n        token\n        didRequest\n        catelogy\n      }\n      ... on AdminViewer {\n        id\n        token\n        didRequest\n        catelogy\n      }\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const CREATE_ACCOUNT = gql`\n  mutation CreateAccount($input: CreateAccountInput) {\n    createAccount(input: $input) {\n      token\n      name\n      userName\n      gender\n      education\n      jobStatus\n      marriageStatus\n      didRequest\n      age\n      catelogy\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const SAVE_USER_ANSWER = gql`\n  mutation SaveUserAnswer($input: UserAnswerInput) {\n    saveUserAnswer(input: $input) {\n      didRequest\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const SAVE_PARTIAL_ANSWER = gql`\n  mutation SavePartialAnswer($input: UserAnswerInput) {\n    savePartialAnswer(input: $input) {\n      didRequest\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const DOCTOR_LOG_OUT = gql`\n  mutation DoctorLogOut {\n    doctorLogOut {\n      didRequest\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const DOCTOR_LOG_IN = gql`\n  mutation DoctorLogIn($input: DoctorLoginInput) {\n    doctorLogIn(input: $input) {\n      name\n      userName\n      didRequest\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const ADD_DIAGNOSIS = gql`\n  mutation AddDiagnosis($input: AddDiagnosisInput) {\n    addDiagnosis(input: $input) {\n      result\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const ADD_DOCTOR = gql`\n  mutation AddDoctor($input: AddDoctorInput) {\n    addDoctor(input: $input) {\n      result\n    }\n  }\n`;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { ReactNode } from \"react\";\nimport { Redirect, Route, RouteProps } from \"react-router-dom\";\n\ninterface Props extends RouteProps {\n  isAuthorized: boolean;\n  children: ReactNode;\n}\n\nexport const PrivateRoute = (props: Props) => {\n  const { isAuthorized, children, ...rest } = props;\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuthorized ? (\n          children\n        ) : (\n          <Redirect to={{ pathname: \"/login\", state: { from: location } }} />\n        )\n      }\n    />\n  );\n};\n","import { CircularProgress, makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}));\nexport const LoadingIndicator = () => {\n  const styles = useStyles();\n  return (\n    <div className={styles.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n","import { Snackbar } from \"@material-ui/core\";\nimport React from \"react\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\ninterface Props {\n  showError: boolean;\n  setShowError: (showError: boolean) => void;\n  errorMessage: string;\n}\n\nexport const ErrorIndicator = (props: Props) => {\n  const { showError, setShowError, errorMessage } = props;\n  return (\n    <Snackbar open={showError} onClose={() => setShowError(false)}>\n      <MuiAlert\n        elevation={6}\n        variant=\"filled\"\n        severity=\"error\"\n        onClose={() => setShowError(false)}\n      >\n        {errorMessage}\n      </MuiAlert>\n    </Snackbar>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Document, Page } from \"react-pdf\";\nimport { pdfjs } from \"react-pdf\";\nimport {\n  createStyles,\n  Divider,\n  IconButton,\n  makeStyles,\n  Paper,\n  Theme,\n} from \"@material-ui/core\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport printJS from \"print-js\";\nimport PrintIcon from \"@material-ui/icons/Print\";\n\npdfjs.GlobalWorkerOptions.workerSrc = \"/pdf.worker.js\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      marginTop: 10,\n    },\n    paper: {\n      marginBottom: 10,\n    },\n    pdfViewer: {},\n    topbar: {\n      height: 48,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n    },\n    returnButton: {\n      marginLeft: 5,\n    },\n    downloadButton: {\n      marginRight: 5,\n    },\n    printIcon: {},\n    page: {\n      padding: 3,\n    },\n  })\n);\n\ninterface Props {\n  pdfData: string;\n  closeReport: () => void;\n}\n\nexport const ReportPdf = ({ pdfData, closeReport }: Props) => {\n  const classes = useStyles();\n\n  const [width, setWidth] = React.useState(window.innerWidth);\n\n  const updateWidth = () => {\n    if (window.innerWidth !== width) setWidth(window.innerWidth);\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateWidth);\n    return () => window.removeEventListener(\"resize\", updateWidth);\n  });\n  const printReport = () => {\n    printJS({\n      printable: `${pdfData}`,\n      type: \"pdf\",\n      base64: true,\n    });\n  };\n  const [numPages, setNumPages] = useState<number>(0);\n  const onDocumentLoadSuccess = ({\n    numPages: nextNumPages,\n  }: {\n    numPages: number;\n  }) => {\n    setNumPages(nextNumPages);\n  };\n\n  return (\n    <>\n      <div>\n        <div className={classes.topbar}>\n          <IconButton onClick={closeReport} className={classes.returnButton}>\n            <ArrowBackIcon />\n          </IconButton>\n          <div>\n            <IconButton className={classes.printIcon} onClick={printReport}>\n              <PrintIcon />\n            </IconButton>\n            <a\n              download=\"心理评估报告单\"\n              href={`data:application/pdf;base64,${pdfData}`}\n              title=\"下载心理评估报告单\"\n            >\n              <IconButton className={classes.downloadButton}>\n                <CloudDownloadIcon />\n              </IconButton>\n            </a>\n          </div>\n        </div>\n        <Divider />\n      </div>\n      <div className={classes.root}>\n        <Document\n          file={`data:application/pdf;base64,${pdfData}`}\n          loading={<div></div>}\n          className={classes.pdfViewer}\n          onLoadSuccess={onDocumentLoadSuccess}\n        >\n          {Array.from(new Array(numPages), (el, index) => (\n            <Paper elevation={3} className={classes.paper} key={index}>\n              <Page\n                pageNumber={index + 1}\n                loading={<></>}\n                renderMode=\"svg\"\n                width={\n                  document.getElementById(\"root\")\n                    ? (document.getElementById(\"root\")!.offsetWidth > 750\n                        ? document.getElementById(\"root\")!.offsetWidth - 240\n                        : document.getElementById(\"root\")!.offsetWidth) * 0.8\n                    : 1000\n                }\n              />\n            </Paper>\n          ))}\n        </Document>\n      </div>\n    </>\n  );\n};\n","import { makeStyles, Theme, createStyles, Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport HomeIcon from \"@material-ui/icons/Home\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    header: {\n      overflow: \"hidden\",\n    },\n    actionContainer: {\n      float: \"right\",\n      paddingRight: 10,\n      paddingTop: 10,\n      fontSize: \"0.875rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n  })\n);\nexport const ReturnToHomeHeader = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.header}>\n      <span className={classes.actionContainer}>\n        <Link to=\"/\">\n          <Button color=\"secondary\" startIcon={<HomeIcon />}>\n            返回主页\n          </Button>\n        </Link>\n      </span>\n    </div>\n  );\n};\n","import React, { useEffect, useRef } from \"react\";\nimport Chart, { ChartDataSets } from \"chart.js\";\nimport \"chartjs-plugin-datalabels\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core\";\n\ninterface Props {\n  labelList: string[];\n  dataList?: number[];\n  multipleDataList?: ChartDataSets[];\n  showLabel: boolean;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    canvasContainer: {\n      width: 550,\n      height: 400,\n    },\n  })\n);\n\nexport const LineChart = ({\n  labelList,\n  dataList,\n  multipleDataList,\n  showLabel,\n}: Props) => {\n  const classes = useStyles();\n  const chartRef = useRef<HTMLCanvasElement>(null);\n  const init = () => {\n    if (chartRef.current) {\n      const lineChart = chartRef.current.getContext(\"2d\");\n      if (lineChart)\n        new Chart(lineChart, {\n          type: \"line\",\n          data: {\n            //Bring in data\n            labels: labelList,\n            datasets: multipleDataList\n              ? multipleDataList\n              : [\n                  {\n                    label: \"得分\",\n                    data: dataList,\n                    borderColor: \"#0d47a1\",\n                    backgroundColor: \"#bbdefb\",\n                    fill: false,\n                    lineTension: 0,\n                  },\n                ],\n          },\n          options: {\n            tooltips: {\n              mode: \"index\",\n              intersect: false,\n            },\n            hover: {\n              mode: \"nearest\",\n              intersect: true,\n            },\n            maintainAspectRatio: false,\n            responsive: true,\n            scales: {\n              yAxes: [\n                {\n                  ticks: {\n                    beginAtZero: true,\n                  },\n                },\n              ],\n            },\n            plugins: {\n              datalabels: {\n                anchor: \"start\",\n                align: \"top\",\n                formatter: Math.round,\n                display: showLabel ? true : false,\n              },\n            },\n          },\n        });\n    }\n  };\n  const initRef = useRef(init);\n  useEffect(() => {\n    initRef.current();\n  }, []);\n  return (\n    <div className={classes.canvasContainer}>\n      <canvas id=\"line-chart\" ref={chartRef} />\n    </div>\n  );\n};\n","export const EYSCENCK_FORM_NAME = \"艾森克个性测试（EPQ）\";\nexport const SCL_90_NAME = \"90项症状清单（SCL-90）\";\n","import {\n  Button,\n  createStyles,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  makeStyles,\n  Theme,\n} from \"@material-ui/core\";\nimport React, { useMemo, useState } from \"react\";\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport { EysenckFormResult } from \"./type\";\nimport { ChartDataSets } from \"chart.js\";\nimport { EYSCENCK_FORM_NAME, SCL_90_NAME } from \"../../utils/constants\";\nimport { FormResult } from \"../../../sections\";\nimport { LineChart } from \"..\";\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({}));\n\ninterface Props {\n  formResultList: FormResult[];\n  formName: string;\n}\n\nconst HIDE_LABEL_FORMS = [EYSCENCK_FORM_NAME];\n\nexport const LineChartPopOver = (props: Props) => {\n  const { formResultList, formName } = props;\n  const fillInDateList = useMemo(\n    () => formResultList.map((formResult) => formResult.fillInDate),\n    [formResultList]\n  );\n  const resultList = useMemo(() => {\n    if (formName === SCL_90_NAME) {\n      return formResultList.map((formResult) =>\n        Number(JSON.parse(formResult.result).total)\n      );\n    }\n    return formResultList.map((formResult) => Number(formResult.result));\n  }, [formResultList, formName]);\n  const multipleDataList: undefined | ChartDataSets[] = useMemo(() => {\n    if (formName === EYSCENCK_FORM_NAME) {\n      const eArray = formResultList.map((formResult) => {\n        const resultObject: EysenckFormResult = JSON.parse(formResult.result);\n        return Number(resultObject.eTScore);\n      });\n      const pArray = formResultList.map((formResult) => {\n        const resultObject: EysenckFormResult = JSON.parse(formResult.result);\n        return Number(resultObject.pTScore);\n      });\n      const nArray = formResultList.map((formResult) => {\n        const resultObject: EysenckFormResult = JSON.parse(formResult.result);\n        return Number(resultObject.nTScore);\n      });\n      const lArray = formResultList.map((formResult) => {\n        const resultObject: EysenckFormResult = JSON.parse(formResult.result);\n        return Number(resultObject.lTScore);\n      });\n      return [\n        {\n          label: \"E量表得分\",\n          data: eArray,\n          borderColor: \"#0d47a1\",\n          backgroundColor: \"#0d47a1\",\n          lineTension: 0,\n          fill: false,\n        },\n        {\n          label: \"P量表得分\",\n          data: pArray,\n          borderColor: \"#4caf50\",\n          backgroundColor: \"#4caf50\",\n          fill: false,\n          lineTension: 0,\n        },\n        {\n          label: \"N量表得分\",\n          data: nArray,\n          borderColor: \"#ffeb3b\",\n          backgroundColor: \"#ffeb3b\",\n          fill: false,\n          lineTension: 0,\n        },\n        {\n          label: \"L量表得分\",\n          data: lArray,\n          borderColor: \"#d32f2f\",\n          backgroundColor: \"#d32f2f\",\n          fill: false,\n          lineTension: 0,\n        },\n      ];\n    }\n    return undefined;\n  }, [formName, formResultList]);\n  let showLabel = true;\n  if (HIDE_LABEL_FORMS.includes(formName)) {\n    showLabel = false;\n  }\n  const classes = useStyles();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const handleCloseDialog = () => {\n    setIsDialogOpen(false);\n  };\n  const openDialog = () => {\n    setIsDialogOpen(true);\n  };\n  return (\n    <div>\n      <div>\n        <Button\n          startIcon={<EqualizerIcon />}\n          size=\"small\"\n          color=\"primary\"\n          disabled={formResultList.length <= 1}\n          onClick={openDialog}\n        >\n          趋势\n        </Button>\n      </div>\n      <Dialog onClose={handleCloseDialog} open={isDialogOpen}>\n        <DialogTitle>{formName}分数趋势</DialogTitle>\n        <DialogContent>\n          <LineChart\n            labelList={fillInDateList}\n            dataList={resultList}\n            multipleDataList={multipleDataList}\n            showLabel={showLabel}\n          />\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo.bcf589ff.png\";","import { useMutation } from \"@apollo/client\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  createStyles,\n  makeStyles,\n  TextField,\n  Theme,\n} from \"@material-ui/core\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { ErrorIndicator, LoadingIndicator } from \"../../lib/components\";\nimport { DOCTOR_LOG_IN } from \"../../lib/graphql/mutations\";\nimport {\n  DoctorLogIn,\n  DoctorLogInVariables,\n} from \"../../lib/graphql/mutations/DoctorLogIn/__generated__/DoctorLogIn\";\n// import {\n//   LogIn as LogInData,\n//   LogInVariables,\n// } from \"../../lib/graphql/mutations/Login/__generated__/LogIn\";\nimport { Doctor, Viewer } from \"../../lib/type\";\nimport logo from \"../AppHeader/assets/logo.png\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    logInCard: {\n      borderRadius: 8,\n      width: \"min(450px, 90%)\",\n      margin: \"0 auto 0\",\n    },\n    logInText: {\n      fontSize: \"1.5rem\",\n      textAlign: \"center\",\n      marginBottom: 20,\n      marginTop: 25,\n    },\n    promptText: {\n      marginBottom: 24,\n      fontSize: \"1rem\",\n      textAlign: \"center\",\n    },\n    input: {\n      width: \"100%\",\n    },\n    inputContainer: {\n      margin: \"0 40px\",\n    },\n    userNameInput: {\n      marginBottom: 15,\n    },\n    passwordInput: {\n      marginBottom: 30,\n    },\n    buttonContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n    logo: {\n      height: 92,\n    },\n    logoContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n    pageContainer: {\n      backgroundColor: \"#f5f5f5\",\n      width: \"100%\",\n      height: \"100%\",\n    },\n    topPadding: {\n      height: \"min(100px, 30%)\",\n    },\n  })\n);\n\ninterface AccountInfo {\n  userName: string;\n  password: string;\n}\n\nconst initialAccountInfo = {\n  userName: \"\",\n  password: \"\",\n};\n\ninterface Props {\n  isAuthorized: boolean;\n  setViewer: (viewer: Viewer) => void;\n  setDoctor: (doctor: Doctor) => void;\n  doctor: Doctor;\n}\n\nexport const Login = ({\n  isAuthorized,\n  setViewer,\n  setDoctor,\n  doctor,\n}: Props) => {\n  const classes = useStyles();\n  // const [logIn] = useMutation<LogInData, LogInVariables>(LOG_IN, {\n  //   onCompleted: (data) => {\n  //     if (data && data.logIn && data.logIn.token) {\n  //       setViewer(data.logIn);\n  //     }\n  //   },\n  //   onError: (error) => {\n  //     setIsLogInErrorShown(true);\n  //   },\n  // });\n  // const logInRef = useRef(logIn);\n  const [doctorLogIn] = useMutation<DoctorLogIn, DoctorLogInVariables>(\n    DOCTOR_LOG_IN,\n    {\n      onCompleted: (data) => {\n        if (data && data.doctorLogIn) {\n          const { name, userName, didRequest } = data.doctorLogIn;\n          setDoctor({\n            name,\n            userName,\n            didRequest,\n          });\n          setIsRedo(false);\n        }\n      },\n      onError: (error) => {\n        setIsLogInErrorShown(true);\n      },\n    }\n  );\n  const doctorLoginRef = useRef(doctorLogIn);\n  const [accountInfo, setAccountInfo] = useState<AccountInfo>(\n    initialAccountInfo\n  );\n  const [isNameAndPasswordValidated, setIsNameAndPasswordValidated] = useState(\n    false\n  );\n  const [isLogInErrorShown, setIsLogInErrorShown] = useState(false);\n  const handleKeyPress = (event: KeyboardEvent) => {\n    if (event.key === \"Enter\") {\n      logInButtonOnClick();\n    }\n  };\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyPress);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  });\n  const [isRedo, setIsRedo] = useState(true);\n  const detectRedoRef = useRef(() => {\n    if (\n      history.location.state &&\n      history.location.state.from.pathname === \"/doctor\"\n    ) {\n      setIsRedo(true);\n    } else {\n      setIsRedo(false);\n    }\n  });\n\n  useEffect(() => {\n    detectRedoRef.current();\n  }, []);\n  const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setAccountInfo({ ...accountInfo, userName: e.target.value });\n  };\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setAccountInfo({ ...accountInfo, password: e.target.value });\n  };\n  const logInButtonOnClick = () => {\n    setIsNameAndPasswordValidated(true);\n    if (accountInfo.userName && accountInfo.password)\n      doctorLoginRef.current({\n        variables: {\n          input: {\n            userName: accountInfo.userName,\n            password: accountInfo.password,\n          },\n        },\n      });\n  };\n  const history = useHistory<\n    { from: Location; redo: boolean | undefined } | undefined\n  >();\n  const isDoctor =\n    history.location.state &&\n    history.location.state.from.pathname.includes(\"doctor\")\n      ? true\n      : false;\n  if (isAuthorized) {\n    // let redirectUrl = \"/user\";\n    // if (history.location.state) {\n    //   redirectUrl = history.location.state.from.pathname;\n    // }\n    if (!isRedo) {\n      if (isDoctor) {\n        if (!doctor.userName) {\n          return <LoadingIndicator />;\n        } else {\n          return <Redirect to={`/doctor/${doctor.userName}`} />;\n        }\n      }\n      return <Redirect to=\"/user\" />;\n    }\n  }\n\n  return (\n    <div className={classes.pageContainer}>\n      <div className={classes.topPadding} />\n      <Card className={classes.logInCard}>\n        <CardContent>\n          <div className={classes.logoContainer}>\n            <img src={logo} className={classes.logo} alt=\"医院标志\" />\n          </div>\n          <div className={classes.logInText}>\n            {isDoctor ? \"医生端\" : \"用户端\"}\n          </div>\n          <div className={classes.promptText}>请输入医生的用户名和密码</div>\n          <form>\n            <div className={classes.inputContainer}>\n              <TextField\n                autoFocus\n                className={classes.input + \" \" + classes.userNameInput}\n                color=\"primary\"\n                value={accountInfo.userName}\n                label=\"用户名\"\n                onChange={handleNameChange}\n                helperText={\n                  isNameAndPasswordValidated && !accountInfo.userName\n                    ? \"请输入您的用户名\"\n                    : undefined\n                }\n                error={\n                  isNameAndPasswordValidated && !accountInfo.userName\n                    ? true\n                    : undefined\n                }\n                inputProps={{ \"aira-label\": \"用户名\" }}\n              />\n              <TextField\n                className={classes.input + \" \" + classes.passwordInput}\n                color=\"primary\"\n                value={accountInfo.password}\n                label=\"密码\"\n                helperText={\n                  isNameAndPasswordValidated && !accountInfo.password\n                    ? \"请输入您的密码\"\n                    : undefined\n                }\n                error={\n                  isNameAndPasswordValidated && !accountInfo.password\n                    ? true\n                    : undefined\n                }\n                onChange={handlePasswordChange}\n                type=\"password\"\n                inputProps={{ \"aira-label\": \"密码\" }}\n              />\n            </div>\n            <div className={classes.buttonContainer}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={logInButtonOnClick}\n              >\n                登录\n              </Button>\n            </div>\n          </form>\n        </CardContent>\n      </Card>\n      <ErrorIndicator\n        showError={isLogInErrorShown}\n        setShowError={setIsLogInErrorShown}\n        errorMessage={\"用户名或密码不正确！\"}\n      />\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/cardIcon.2b436e10.png\";","import { gql } from \"@apollo/client\";\n\nexport const QUESTIONNAIRE_LIST = gql`\n  query QuestionnaireList($isReport: Boolean!) {\n    questionnaireList(isReport: $isReport) {\n      name\n      description\n      id\n      done\n      displayedFillInDate\n      userAnswerId\n      result\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const QUESTIONNAIRE_CONTENT = gql`\n  query QuestionnaireContent($id: String!) {\n    questionnaire(id: $id) {\n      instruction\n      name\n      questions {\n        choices\n        content\n      }\n    }\n    partialAnswer(questionnaireId: $id) {\n      answers\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const REPORT = gql`\n  query Report($userAnswerIds: [String!]!) {\n    report(userAnswerIds: $userAnswerIds) {\n      pdf\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const REPORT_FOR_ADMIN = gql`\n  query ReportForAdmin($userId: String, $userAnswerIds: [String!]!) {\n    reportForAdmin(userId: $userId, userAnswerIds: $userAnswerIds) {\n      pdf\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const DOCTOR_LIST = gql`\n  query DoctorList($limit: Int!, $currentPageIndex: Int!) {\n    doctorList(limit: $limit, currentPageIndex: $currentPageIndex) {\n      total\n      admins {\n        name\n        userName\n      }\n    }\n  }\n`;\n","import {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface Props {\n  isOpen: boolean;\n  handleClose: () => void;\n  goToLogInPage: () => void;\n  age?: null | number;\n}\n\nexport const EnterGenderAndAgeDialog = ({\n  isOpen,\n  handleClose,\n  goToLogInPage,\n  age,\n}: Props) => {\n  return (\n    <Dialog open={isOpen} onClose={handleClose}>\n      <DialogTitle>请您完善信息</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          请您填写性别和年龄信息。\n          {age !== undefined && age !== null && age < 16\n            ? \"填写该量表最小年龄为16岁。\"\n            : null}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={goToLogInPage} color=\"primary\" autoFocus>\n          确定\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import { useQuery } from \"@apollo/client\";\nimport {\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  createStyles,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ListSubheader,\n  makeStyles,\n  Theme,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport indigo from \"@material-ui/core/colors/indigo\";\nimport React, { useMemo, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport CardIcon from \"./assets/cardIcon.png\";\nimport {\n  QuestionnaireList as QuestionnaireListData,\n  QuestionnaireListVariables,\n  QuestionnaireList_questionnaireList as QuestionnaireData,\n} from \"../../lib/graphql/queries/QuestionnaireList/__generated__/QuestionnaireList\";\nimport { QUESTIONNAIRE_LIST } from \"../../lib/graphql/queries\";\nimport { LineChartPopOver, LoadingIndicator } from \"../../lib/components\";\nimport { Patient } from \"../../lib/type\";\nimport { EYSCENCK_FORM_NAME } from \"../../lib/utils/constants\";\nimport { EnterGenderAndAgeDialog } from \"./components\";\n\nconst CARD_WIDTH = 250;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    content: {\n      padding: \"5px 10px\",\n    },\n    listName: {\n      fontSize: \"1rem\",\n      color: \"rgba(0, 0, 0, .654)\",\n      marginTop: 20,\n      marginBottom: 20,\n    },\n    root: {\n      display: \"grid\",\n      gridTemplateColumns: `repeat(auto-fill, ${CARD_WIDTH}px)`,\n      rowGap: \"20px\",\n      columnGap: \"20px\",\n    },\n    card: {\n      height: 212,\n    },\n    cardActionArea: {\n      width: CARD_WIDTH,\n      cursor: \"pointer\",\n      \"&:hover\": {\n        backgroundColor: indigo[50],\n      },\n      height: 160,\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"flex-start\",\n    },\n    cardIcon: {\n      width: 40,\n      height: 40,\n    },\n    unfinishedText: {\n      fontSize: \"0.8125rem\",\n      color: \"rgba(0, 0, 0, .54)\",\n      margin: \"5px 0\",\n    },\n    finishedText: {\n      fontSize: \"0.8125rem\",\n      color: \"#4caf50\",\n      margin: \"5px 0\",\n    },\n    questionnaireName: {\n      fontSize: \"1rem\",\n      color: \"#111\",\n      lineHeight: \"1.5rem\",\n    },\n    cardActionContainer: {\n      paddingLeft: 20,\n      height: 50,\n    },\n  })\n);\n\nexport type FormResult = { result: string; fillInDate: string };\n\ninterface Props {\n  patient: Patient;\n}\n\nexport const Home = ({ patient }: Props) => {\n  const isSmallScreen = useMediaQuery(\"(max-width:780px)\");\n  const classes = useStyles();\n  const { loading, data } = useQuery<\n    QuestionnaireListData,\n    QuestionnaireListVariables\n  >(QUESTIONNAIRE_LIST, {\n    fetchPolicy: \"no-cache\",\n    variables: { isReport: false },\n  });\n  const listData: {\n    uniqueFormList: QuestionnaireData[];\n    resultList: FormResult[][];\n  } = useMemo(() => {\n    if (!data) return { uniqueFormList: [], resultList: [] as FormResult[][] };\n    const formList: QuestionnaireData[] = [];\n    const resultList: FormResult[][] = [];\n    const formSet: Set<string> = new Set();\n    data.questionnaireList.forEach((questionnaire) => {\n      if (!formSet.has(questionnaire.id)) {\n        formSet.add(questionnaire.id);\n        formList.push(questionnaire);\n        if (questionnaire.result && questionnaire.displayedFillInDate) {\n          resultList.push([\n            {\n              result: questionnaire.result,\n              fillInDate: questionnaire.displayedFillInDate,\n            },\n          ]);\n        } else {\n          resultList.push([] as FormResult[]);\n        }\n      } else if (questionnaire.result && questionnaire.displayedFillInDate) {\n        let index = 0;\n        while (index <= formList.length) {\n          if (formList[index].id === questionnaire.id) {\n            resultList[index].push({\n              result: questionnaire.result,\n              fillInDate: questionnaire.displayedFillInDate,\n            });\n            break;\n          }\n          index += 1;\n        }\n      }\n    });\n    return { uniqueFormList: formList, resultList };\n  }, [data]);\n  const { uniqueFormList, resultList } = listData;\n  const [isGenderAndAgeDialogOpen, setIsGenderAndAgeDialogOpen] = useState(\n    false\n  );\n  const closeGenderAndAgeDialog = () => {\n    setIsGenderAndAgeDialogOpen(false);\n  };\n  const goToLogInPage = () => {\n    history.push(`/user/login?userName=${patient.userName}`);\n  };\n  const history = useHistory();\n  if (loading) {\n    return <LoadingIndicator />;\n  }\n  if (data) {\n    const questionnaireName = (questionnaire: QuestionnaireData) => {\n      const defaultReturn = (\n        <span className={classes.questionnaireName}>{questionnaire.name}</span>\n      );\n      // Note that this is Chinese parentheses!\n      if (!/^.*（.*）$/.test(questionnaire.name)) {\n        return defaultReturn;\n      } else {\n        const nameMatchFormResult = questionnaire.name.match(/^.*（/);\n        const abbreviationMatchFormResult = questionnaire.name.match(/（.*）/);\n        if (nameMatchFormResult && abbreviationMatchFormResult) {\n          const name = nameMatchFormResult[0].substring(\n            0,\n            nameMatchFormResult[0].length - 1\n          );\n          const abbreviation = abbreviationMatchFormResult[0];\n          return (\n            <span className={classes.questionnaireName}>\n              {name}\n              <br />\n              {abbreviation.replace(\"（\", \"(\").replace(\"）\", \")\")}\n            </span>\n          );\n        }\n        return defaultReturn;\n      }\n    };\n    const goToFormPage = (formId: string, formName: string) => {\n      if (formName === EYSCENCK_FORM_NAME) {\n        if (!patient.gender || !patient.age || patient.age < 16) {\n          setIsGenderAndAgeDialogOpen(true);\n          return;\n        }\n      }\n      history.push(`/user/form?id=${formId}`);\n    };\n    const finishStatus = (questionnaire: QuestionnaireData) => (\n      <span\n        className={\n          questionnaire.done ? classes.finishedText : classes.unfinishedText\n        }\n      >\n        {questionnaire.done ? \"已完成\" : \"未完成\"}\n      </span>\n    );\n    if (isSmallScreen) {\n      return (\n        <>\n          <List subheader={<ListSubheader>量表</ListSubheader>}>\n            {uniqueFormList.map((questionnaire, index) => (\n              <ListItem\n                button\n                onClick={() =>\n                  goToFormPage(questionnaire.id, questionnaire.name)\n                }\n                key={questionnaire.id}\n              >\n                <ListItemAvatar>\n                  <img\n                    src={CardIcon}\n                    alt=\"量表图标\"\n                    className={classes.cardIcon}\n                  />\n                </ListItemAvatar>\n                <ListItemText\n                  primary={\n                    <div className={classes.questionnaireName}>\n                      {questionnaire.name}\n                    </div>\n                  }\n                  secondary={finishStatus(questionnaire)}\n                />\n              </ListItem>\n            ))}\n          </List>\n          <EnterGenderAndAgeDialog\n            isOpen={isGenderAndAgeDialogOpen}\n            handleClose={closeGenderAndAgeDialog}\n            goToLogInPage={goToLogInPage}\n            age={patient.age}\n          />\n        </>\n      );\n    }\n    return (\n      <>\n        <div className={classes.content}>\n          <p className={classes.listName}>量表</p>\n          <div className={classes.root}>\n            {uniqueFormList.map((questionnaire, index) => (\n              <Card\n                variant=\"outlined\"\n                className={classes.card}\n                key={questionnaire.id}\n              >\n                <CardActionArea\n                  className={classes.cardActionArea}\n                  onClick={() =>\n                    goToFormPage(questionnaire.id, questionnaire.name)\n                  }\n                >\n                  <CardContent>\n                    <div>\n                      <img\n                        src={CardIcon}\n                        alt=\"量表图标\"\n                        className={classes.cardIcon}\n                      />\n                    </div>\n                    <div>{questionnaireName(questionnaire)}</div>\n                    {finishStatus(questionnaire)}\n                  </CardContent>\n                </CardActionArea>\n\n                <Divider />\n\n                <CardActions className={classes.cardActionContainer}>\n                  <LineChartPopOver\n                    formResultList={resultList[index]}\n                    formName={questionnaire.name}\n                  />\n                </CardActions>\n              </Card>\n            ))}\n          </div>\n        </div>\n        <EnterGenderAndAgeDialog\n          isOpen={isGenderAndAgeDialogOpen}\n          handleClose={closeGenderAndAgeDialog}\n          goToLogInPage={goToLogInPage}\n          age={patient.age}\n        />\n      </>\n    );\n  }\n  return null;\n};\n","import { gql } from \"@apollo/client\";\n\nexport const PATIENT_LOG_OUT = gql`\n  mutation PatientLogOut {\n    patientLogOut {\n      didRequest\n    }\n  }\n`;\n","import { useQuery } from \"@apollo/client\";\nimport React, { ComponentType, PropsWithChildren } from \"react\";\nimport { LoadingIndicator } from \"../../../../lib/components\";\nimport { REPORT } from \"../../../../lib/graphql/queries\";\nimport {\n  Report as ReportData,\n  ReportVariables,\n} from \"../../../../lib/graphql/queries/Report/__generated__/Report\";\n\nexport const withReportPdfData = (\n  WrappedComponent: ComponentType<\n    PropsWithChildren<{ pdfData: string; closeReport: () => void }>\n  >\n) => {\n  return ({\n    children,\n    userAnswerIds,\n    closeReport,\n  }: PropsWithChildren<{\n    userAnswerIds: string[];\n    closeReport: () => void;\n  }>) => {\n    // Get PDF data.\n    const { data, loading } = useQuery<ReportData, ReportVariables>(REPORT, {\n      variables: {\n        userAnswerIds,\n      },\n      fetchPolicy: \"no-cache\",\n    });\n\n    if (loading || !data) {\n      return <LoadingIndicator />;\n    }\n\n    if (data.report && data.report.pdf) {\n      return (\n        <WrappedComponent pdfData={data.report.pdf} closeReport={closeReport}>\n          {children}\n        </WrappedComponent>\n      );\n    }\n\n    return null;\n  };\n};\n","/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n//==============================================================\n// START Enums and Input Objects\n//==============================================================\n\nexport enum UsersFilter {\n  DATE_LATEST = \"DATE_LATEST\",\n  DATE_OLDEST = \"DATE_OLDEST\",\n}\n\nexport interface AddDiagnosisInput {\n  patientId: string;\n  diagnosis: string;\n}\n\nexport interface AddDoctorInput {\n  userName: string;\n  name: string;\n  password: string;\n}\n\nexport interface AgeRange {\n  min?: number | null;\n  max?: number | null;\n}\n\nexport interface CreateAccountInput {\n  userName: string;\n  password: string;\n  name: string;\n  education: string;\n  jobStatus: string;\n  gender: string;\n  marriageStatus: string;\n  age?: number | null;\n}\n\nexport interface DoctorLoginInput {\n  userName: string;\n  password: string;\n}\n\nexport interface LogInInput {\n  userName: string;\n  password: string;\n}\n\nexport interface SignUpDate {\n  year: number;\n  month: number;\n  day: number;\n}\n\nexport interface UserAnswerInput {\n  questionnaireId: string;\n  answers: number[];\n}\n\nexport interface UserLoginInput {\n  userName: string;\n  name: string;\n  education?: string | null;\n  jobStatus?: string | null;\n  gender?: string | null;\n  marriageStatus?: string | null;\n  age?: number | null;\n}\n\n//==============================================================\n// END Enums and Input Objects\n//==============================================================\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { AppBar, Button, Toolbar } from \"@material-ui/core\";\nimport logo from \"./assets/logo.png\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { Viewer } from \"../../lib/type\";\nimport { useMutation } from \"@apollo/client\";\nimport { DOCTOR_LOG_OUT } from \"../../lib/graphql/mutations\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport { PatientLogOut } from \"../../lib/graphql/mutations/PatientLogOut/__generated__/PatientLogOut\";\nimport { PATIENT_LOG_OUT } from \"../../lib/graphql/mutations/PatientLogOut\";\nimport { DoctorLogOut } from \"../../lib/graphql/mutations/DoctorLogOut/__generated__/doctorLogOut\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    header: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n    logo: {\n      marginRight: theme.spacing(2),\n      maxWidth: 30,\n      maxHeight: 30,\n    },\n    title: {\n      flexGrow: 1,\n      fontSize: \"1.25rem\",\n    },\n    timerHeader: {\n      overflow: \"hidden\",\n      backgroundColor: \"rgb(236, 238, 248)\",\n    },\n    actionContainer: {\n      float: \"right\",\n      paddingRight: 20,\n      paddingTop: 10,\n      fontSize: \"0.875rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n  })\n);\n\ninterface Props {\n  viewer: Viewer;\n  setViewer: (viewer: Viewer) => void;\n  type: \"doctor\" | \"user\";\n}\n\nexport const AppHeader = (props: Props) => {\n  const { viewer, setViewer, type } = props;\n  const history = useHistory();\n\n  const [width, setWidth] = React.useState(window.innerWidth);\n\n  const updateWidth = () => {\n    if (window.innerWidth !== width) setWidth(window.innerWidth);\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateWidth);\n    return () => window.removeEventListener(\"resize\", updateWidth);\n  });\n\n  const [logOut] = useMutation<DoctorLogOut>(DOCTOR_LOG_OUT, {\n    onCompleted: (data) => {\n      if (data && data.doctorLogOut.didRequest) {\n        setViewer(data.doctorLogOut);\n        sessionStorage.removeItem(\"token\");\n        console.log(\"log out successfully\");\n      }\n    },\n    onError: (error) => {\n      console.log(error);\n      console.log(\"log out failed\");\n    },\n  });\n  const [patientLogOut] = useMutation<PatientLogOut>(PATIENT_LOG_OUT, {\n    onCompleted: (data) => {\n      if (data && data.patientLogOut) {\n        setViewer(data.patientLogOut);\n        console.log(\"log out successfully\");\n      }\n    },\n    onError: (error) => {\n      console.log(error);\n      console.log(\"log out failed\");\n    },\n  });\n  const handleLogout = async () => {\n    if (type === \"doctor\") {\n      await logOut();\n      history.push(\"/doctor\");\n    } else {\n      await patientLogOut();\n      history.push(\"/user\");\n    }\n  };\n  const classes = useStyles();\n\n  return (\n    <Switch>\n      <Route path=\"/user/form\" exact />\n      <Route path=\"/\">\n        <div className={classes.root}>\n          <AppBar position=\"fixed\" className={classes.header}>\n            <Toolbar>\n              <img src={logo} alt=\"中大医院\" className={classes.logo} />\n              <div className={classes.title}>\n                {window.innerWidth >= 650\n                  ? \"东南大学附属中大医院心理健康评估系统\"\n                  : \"心理健康评估系统\"}\n              </div>\n\n              <Switch>\n                <Route path={[\"/doctor\", \"/user\"]}>\n                  {viewer && viewer.userName && (\n                    <Button\n                      color=\"inherit\"\n                      startIcon={<ExitToAppIcon />}\n                      onClick={handleLogout}\n                    >\n                      {type === \"doctor\" ? \"退出医生登录\" : \"退出系统\"}\n                    </Button>\n                  )}\n                </Route>\n              </Switch>\n            </Toolbar>\n          </AppBar>\n        </div>\n      </Route>\n    </Switch>\n  );\n};\n","import { createStyles, Divider, makeStyles, Theme } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Viewer } from \"../../../../lib/type\";\n\ninterface Props {\n  viewer: Viewer;\n}\n\nconst checkIsFieldValid = (field: string | number | undefined | null) => {\n  return field !== undefined && field !== null && field !== \"\";\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    propertyName: {\n      color: \"#5f6368\",\n      fontSize: \"0.75rem\",\n      margin: \"8px 0\",\n    },\n    propertyDivider: {\n      marginTop: 5,\n      marginBottom: 5,\n    },\n  })\n);\n\nconst fields = [\n  \"name\",\n  \"gender\",\n  \"age\",\n  \"education\",\n  \"jobStatus\",\n  \"marriageStatus\",\n] as const;\nconst displayNames = [\"姓名\", \"性别\", \"年龄\", \"教育\", \"工作\", \"婚姻\"];\nexport const PersonalInformation = (props: Props) => {\n  const classes = useStyles();\n  const { viewer } = props;\n  const validIndexes: number[] = [];\n  for (let i = 0; i < fields.length; i++) {\n    if (checkIsFieldValid(viewer[fields[i]])) {\n      validIndexes.push(i);\n    }\n  }\n  return (\n    <>\n      {validIndexes.map((validIndex, index) => (\n        <div key={`property-${index}`}>\n          <div className={classes.propertyName}>{displayNames[validIndex]}</div>\n          <div>{viewer[fields[validIndex]]}</div>\n          {index !== validIndexes.length - 1 ? (\n            <Divider className={classes.propertyDivider} />\n          ) : null}\n        </div>\n      ))}\n    </>\n  );\n};\n","import {\n  Card,\n  CardContent,\n  Chip,\n  createStyles,\n  Divider,\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  Theme,\n  Toolbar,\n} from \"@material-ui/core\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\nimport React from \"react\";\nimport { Viewer } from \"../../lib/type\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { PersonalInformation } from \"./components\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport LocalHospitalIcon from \"@material-ui/icons/LocalHospital\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      \"@media (max-width:780px)\": {\n        display: \"none\",\n      },\n    },\n    personalInfoCard: {\n      margin: 5,\n      overflow: \"auto\",\n    },\n    personalInfoCardContent: {\n      \"&:last-child\": {\n        paddingBottom: 16,\n      },\n    },\n    personalInfoText: {\n      fontWeight: 400,\n      fontSize: \"1.25rem\",\n      marginBottom: 10,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    idChip: {\n      marginTop: 3,\n      marginBottom: 3,\n    },\n    adminMenu: {\n      padding: 0,\n    },\n    adminMenuHeader: {\n      height: 48,\n      display: \"flex\",\n      alignItems: \"center\",\n      fontWeight: 500,\n      fontSize: \"1.125rem\",\n      paddingLeft: 10,\n    },\n  })\n);\n\ninterface Props {\n  viewer: Viewer;\n  type: \"doctor\" | \"user\";\n}\n\nexport const Sider = (props: Props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const goToHome = () => {\n    history.push(\"/user/home\");\n  };\n  const goToReportPage = () => {\n    history.push(\"/user/report\");\n  };\n  const goToDoctorPage = () => {\n    history.push(`/doctor/${viewer.userName}`);\n  };\n  const goToDoctorManagePage = () => {\n    history.push(`/doctor/${viewer.userName}/manage`);\n  };\n  const location = useLocation();\n  const { viewer, type } = props;\n\n  const [width, setWidth] = React.useState(window.innerWidth);\n\n  const updateWidth = () => {\n    if (window.innerWidth !== width) setWidth(window.innerWidth);\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateWidth);\n    return () => window.removeEventListener(\"resize\", updateWidth);\n  });\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      classes={{ paper: classes.drawerPaper }}\n      style={{\n        display:\n          type === \"doctor\" && window.innerWidth <= 1150 ? \"none\" : undefined,\n      }}\n    >\n      <Toolbar />\n      {type === \"doctor\" ? (\n        <>\n          <div className={classes.adminMenuHeader}>{viewer.name}医生已登入</div>\n          <Divider />\n          <List className={classes.adminMenu}>\n            <ListItem button key=\"patientInfo\" onClick={goToDoctorPage}>\n              <ListItemIcon>\n                <PeopleIcon\n                  color={\n                    location.pathname === `/doctor/${viewer.userName}`\n                      ? \"primary\"\n                      : \"inherit\"\n                  }\n                />\n              </ListItemIcon>\n              <ListItemText primary={\"病人信息\"} />\n            </ListItem>\n            <Divider />\n            <ListItem button key=\"doctorInfo\" onClick={goToDoctorManagePage}>\n              <ListItemIcon>\n                <LocalHospitalIcon\n                  color={\n                    location.pathname === `/doctor/${viewer.userName}/manage`\n                      ? \"primary\"\n                      : \"inherit\"\n                  }\n                />\n              </ListItemIcon>\n              <ListItemText primary={\"医生信息\"} />\n            </ListItem>\n            <Divider />\n          </List>\n        </>\n      ) : (\n        <>\n          <Card variant=\"outlined\" className={classes.personalInfoCard}>\n            <CardContent className={classes.personalInfoCardContent}>\n              <div className={classes.personalInfoText}>个人信息</div>\n              <div className={classes.idChip}>\n                <Chip\n                  size=\"small\"\n                  icon={<AssignmentIndIcon />}\n                  color=\"primary\"\n                  label={`门诊号：${viewer.userName}`}\n                  variant=\"outlined\"\n                />\n              </div>\n              <PersonalInformation viewer={viewer} />\n            </CardContent>\n          </Card>\n          <List>\n            <ListItem button key=\"form\" onClick={goToHome}>\n              <ListItemIcon>\n                <DescriptionIcon\n                  color={\n                    location.pathname === \"/user/home\"\n                      ? \"primary\"\n                      : \"inherit\"\n                  }\n                />\n              </ListItemIcon>\n              <ListItemText primary={\"量表\"} />\n            </ListItem>\n            <ListItem button key=\"report\" onClick={goToReportPage}>\n              <ListItemIcon>\n                <EqualizerIcon\n                  color={\n                    location.pathname === \"/user/report\" ? \"primary\" : \"inherit\"\n                  }\n                />\n              </ListItemIcon>\n              <ListItemText primary={\"报告\"} />\n            </ListItem>\n          </List>\n        </>\n      )}\n    </Drawer>\n  );\n};\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface Props {\n  totalNumber: number;\n  currentIndex: number;\n}\nconst PROGRESS_BAR_WIDTH = 100;\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: PROGRESS_BAR_WIDTH,\n      backgroundColor: \"rgba(0, 0, 0, 0.12)\",\n      display: \"flex\",\n      marginRight: 10,\n      height: 12,\n      borderRadius: 6,\n    },\n    finished: {\n      width: 0,\n      height: 12,\n      borderRadius: \"6px 0 0 6px\",\n      backgroundColor: \"#5eb8ff\",\n      maxWidth: PROGRESS_BAR_WIDTH - 6,\n    },\n    leftCircle: {\n      borderRadius: \"6px 0 0 6px\",\n    },\n    circle: {\n      height: 12,\n      width: 12,\n      backgroundColor: \"#5eb8ff\",\n    },\n    circlewrapper: {\n      overflow: \"hidden\",\n    },\n    rightCircle: {\n      borderRadius: 6,\n      backgroundColor: \"#5eb8ff\",\n    },\n    rightCircleWrapper: {\n      marginLeft: -6,\n    },\n  })\n);\n\nexport const ProgressBar = ({ totalNumber, currentIndex }: Props) => {\n  const classes = useStyles();\n  const widthOfFinishedPart =\n    (PROGRESS_BAR_WIDTH * (currentIndex + 1)) / totalNumber;\n  return (\n    <div className={classes.root}>\n      {widthOfFinishedPart > 12 ? (\n        <>\n          <div\n            className={classes.finished}\n            style={{\n              width: widthOfFinishedPart,\n            }}\n          />\n          {PROGRESS_BAR_WIDTH - widthOfFinishedPart <= 6 ? (\n            <div\n              className={\n                classes.rightCircleWrapper + \" \" + classes.circlewrapper\n              }\n              style={{ width: 12 - (PROGRESS_BAR_WIDTH - widthOfFinishedPart) }}\n            >\n              <div className={classes.rightCircle + \" \" + classes.circle} />\n            </div>\n          ) : null}\n        </>\n      ) : (\n        <div\n          className={classes.circlewrapper}\n          style={{\n            width: widthOfFinishedPart,\n          }}\n        >\n          <div className={classes.leftCircle + \" \" + classes.circle} />\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Timer as TimerIcon } from \"@material-ui/icons\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    timeNumber: {\n      marginLeft: 10,\n    },\n  })\n);\nexport const Timer = () => {\n  const classes = useStyles();\n  const [seconds, setSeconds] = useState(0);\n  useEffect(() => {\n    const interval = setTimeout(() => {\n      setSeconds(seconds + 1);\n    }, 1000);\n    return () => {\n      clearTimeout(interval);\n    };\n  }, [seconds]);\n  const hour = Math.floor(seconds / 3600);\n  const minute = Math.floor(seconds / 60);\n  const second = seconds % 60;\n  return (\n    <div className={classes.root}>\n      <TimerIcon />\n      <span className={classes.timeNumber}>{`${hour < 10 ? \"0\" + hour : hour}:${\n        minute < 10 ? \"0\" + minute : minute\n      }:${second < 10 ? \"0\" + second : second}`}</span>\n    </div>\n  );\n};\n","import { useMutation, useQuery } from \"@apollo/client\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  createStyles,\n  FormControl,\n  FormControlLabel,\n  makeStyles,\n  Radio,\n  Theme,\n  Link,\n  Fab,\n  useMediaQuery,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport React, {\n  SyntheticEvent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { LoadingIndicator } from \"../../lib/components\";\nimport {\n  SAVE_PARTIAL_ANSWER,\n  SAVE_USER_ANSWER,\n} from \"../../lib/graphql/mutations\";\nimport {\n  SaveUserAnswer as SaveUserAnswerData,\n  SaveUserAnswerVariables,\n} from \"../../lib/graphql/mutations/SaveUserAnswer/__generated__/SaveUserAnswer\";\nimport { QUESTIONNAIRE_CONTENT } from \"../../lib/graphql/queries\";\nimport {\n  QuestionnaireContent as QuestionnaireContentData,\n  QuestionnaireContentVariables,\n} from \"../../lib/graphql/queries/QuestionnaireContent/__generated__/QuestionnaireContent\";\nimport { ProgressBar } from \"./Components\";\nimport DirectionsRunIcon from \"@material-ui/icons/DirectionsRun\";\nimport {\n  SavePartialAnswer as SavePartialAnswerData,\n  SavePartialAnswerVariables,\n} from \"../../lib/graphql/mutations/SavePartialAnswer/__generated__/SavePartialAnswer\";\nimport { Timer } from \"./Components\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formContainer: {\n      height: \"100%\",\n      width: \"100%\",\n      backgroundColor: \"rgb(236, 238, 248)\",\n    },\n    form: {\n      width: 768,\n      maxWidth: \"90vw\",\n      margin: \"auto\",\n      paddingTop: 10,\n    },\n    titleCard: {\n      borderRadius: 8,\n      paddingBottom: 5,\n    },\n    titleCardColor: {\n      height: 10,\n      borderTopLeftRadius: 8,\n      borderTopRightRadius: 8,\n      backgroundColor: \"rgb(63, 81, 181)\",\n    },\n    titleCardContent: {\n      paddingTop: 5,\n      marginLeft: 5,\n      marginRight: 5,\n    },\n    titleCardMainText: {\n      fontSize: \"2rem\",\n      fontWeight: 400,\n      marginTop: 10,\n      marginBottom: 10,\n    },\n    questionCard: {\n      marginTop: 10,\n      borderRadius: 8,\n      marginBottom: 10,\n      paddingLeft: 5,\n      paddingRight: 5,\n    },\n    questionText: {\n      fontSize: \"1rem\",\n      fontWeight: 400,\n      marginBottom: 16,\n      marginTop: 10,\n    },\n    questionOptionText: {\n      fontSize: \"0.875rem\",\n    },\n    button: {\n      backgroundColor: \"#fff\",\n      color: \"rgb(63, 81, 181)\",\n      \"&:hover\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n    buttonWithRightMargin: {\n      marginRight: 10,\n    },\n    finishedText: {\n      fontSize: \"0.875rem\",\n      marginTop: 26,\n      marginBottom: 26,\n    },\n    homeLink: {\n      fontSize: \"0.875rem\",\n    },\n    exitButton: {\n      position: \"absolute\",\n      right: 20,\n      bottom: 20,\n      backgroundColor: \"#fff\",\n      \"&:hover\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n    timerContaner: {\n      position: \"absolute\",\n      left: 20,\n      bottom: 20,\n    },\n    footer: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n    },\n    progressWrapper: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    progressWrapperForSmallScreen: {\n      marginTop: 20,\n    },\n  })\n);\n\nexport const Form = () => {\n  const isSmallScreen = useMediaQuery(\"(max-width:780px)\");\n  const classes = useStyles();\n  const query = new URLSearchParams(useLocation().search);\n  const id = query.get(\"id\");\n  const { loading, data } = useQuery<\n    QuestionnaireContentData,\n    QuestionnaireContentVariables\n  >(QUESTIONNAIRE_CONTENT, {\n    variables: {\n      id: id || \"\",\n    },\n    onCompleted: (data: QuestionnaireContentData) => {\n      const { partialAnswer } = data;\n      if (partialAnswer?.answers?.length) {\n        if (\n          partialAnswer.answers.length === data.questionnaire.questions.length\n        ) {\n          setIsAllowedToSubmit(true);\n        }\n        const newAnswers = {} as { [index: number]: number };\n        partialAnswer.answers.forEach(\n          (answer, index) => (newAnswers[index] = answer)\n        );\n        setAnswers(newAnswers);\n        setCurrentQuestionIndex(\n          Math.min(\n            partialAnswer.answers.length,\n            data.questionnaire.questions.length - 1\n          )\n        );\n      }\n    },\n    fetchPolicy: \"no-cache\",\n  });\n\n  const [saveUserAnswer] = useMutation<\n    SaveUserAnswerData,\n    SaveUserAnswerVariables\n  >(SAVE_USER_ANSWER, {\n    onCompleted: (data) => {\n      if (data.saveUserAnswer.didRequest) {\n        setIsDone(true);\n      }\n    },\n  });\n\n  const [savePartialAnswer] = useMutation<\n    SavePartialAnswerData,\n    SavePartialAnswerVariables\n  >(SAVE_PARTIAL_ANSWER);\n\n  const saveUserAnswerRef = useRef(saveUserAnswer);\n  const savePartialAnswerRef = useRef(savePartialAnswer);\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const autoSaveTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState<number>(0);\n  const [answers, setAnswers] = useState<{ [index: number]: number }>({});\n  const [isDone, setIsDone] = useState(false);\n  const [isAllowedToSubmit, setIsAllowedToSubmit] = useState(false);\n  const [isNextButtonDisabled, setIsNextButtonDisabled] = useState(false);\n  const [confirmed, setConfirmed] = useState(false);\n  const history = useHistory();\n\n  const getAnswerArray = useCallback((): number[] => {\n    const questionnaire = data?.questionnaire;\n    if (!questionnaire) {\n      return [];\n    }\n    const answerArray = [];\n    for (let i = 0; i < questionnaire.questions.length; i++) {\n      if (answers[i] !== undefined) answerArray.push(answers[i]);\n    }\n    return answerArray;\n  }, [answers, data?.questionnaire]);\n  const savePartialAnswerToBackend = useCallback(() => {\n    const answerArray = getAnswerArray();\n    if (id && answerArray.length !== 0)\n      return savePartialAnswerRef.current({\n        variables: {\n          input: { questionnaireId: id, answers: answerArray },\n        },\n      });\n    return Promise.resolve();\n  }, [getAnswerArray, id]);\n  useEffect(() => {\n    autoSaveTimeoutRef.current = setInterval(() => {\n      savePartialAnswerToBackend();\n    }, 10000);\n    return () => {\n      if (autoSaveTimeoutRef.current) {\n        clearInterval(autoSaveTimeoutRef.current);\n        autoSaveTimeoutRef.current = null;\n      }\n    };\n  }, [savePartialAnswerToBackend]);\n\n  if (loading) {\n    return <LoadingIndicator />;\n  }\n  if (!data) {\n    return <div>Error</div>;\n  }\n\n  const { questionnaire } = data;\n\n  const closeConfirmDialog = () => {\n    setConfirmed(true);\n  };\n\n  const onNextButtonClick = () => {\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n  };\n\n  const onSubmit = () => {\n    if (autoSaveTimeoutRef.current) {\n      clearTimeout(autoSaveTimeoutRef.current);\n      autoSaveTimeoutRef.current = null;\n    }\n    if (id) {\n      const answerArray = getAnswerArray();\n      saveUserAnswerRef.current({\n        variables: {\n          input: { questionnaireId: id, answers: answerArray },\n        },\n      });\n    }\n  };\n\n  const onBackButtonClick = () => {\n    setCurrentQuestionIndex(currentQuestionIndex - 1);\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n  };\n\n  const goToHome = () => {\n    history.push(\"/user/home\");\n  };\n\n  const handleExitButtonClick = async () => {\n    if (autoSaveTimeoutRef.current) {\n      clearTimeout(autoSaveTimeoutRef.current);\n      autoSaveTimeoutRef.current = null;\n    }\n    await savePartialAnswerToBackend();\n    goToHome();\n  };\n\n  const goToHomeLinkOnClick = (e: SyntheticEvent) => {\n    e.preventDefault();\n    goToHome();\n  };\n\n  const radioButtonOnClick = (\n    e: React.MouseEvent<HTMLLabelElement>,\n    index: number,\n    questionIndex: number\n  ) => {\n    const newAnswers = { ...answers };\n    newAnswers[currentQuestionIndex] = index;\n    setAnswers(newAnswers);\n    if (currentQuestionIndex !== questionnaire.questions.length - 1) {\n      setIsNextButtonDisabled(true);\n      const timeout = setTimeout(() => {\n        onNextButtonClick();\n        setIsNextButtonDisabled(false);\n      }, 300);\n      timeoutRef.current = timeout;\n    } else {\n      setIsAllowedToSubmit(true);\n    }\n  };\n\n  const currentQuestion = questionnaire.questions[currentQuestionIndex];\n  return (\n    <div className={classes.formContainer}>\n      <div className={classes.form}>\n        <Card className={classes.titleCard} variant=\"outlined\">\n          <div className={classes.titleCardColor} />\n          <CardContent className={classes.titleCardContent}>\n            <div className={classes.titleCardMainText}>\n              {questionnaire.name}\n            </div>\n            {isDone && (\n              <>\n                <div className={classes.finishedText}>\n                  您已完成此量表的填写。\n                </div>\n                <Link\n                  onClick={goToHomeLinkOnClick}\n                  className={classes.homeLink}\n                  href=\"/\"\n                >\n                  回到主页\n                </Link>\n              </>\n            )}\n          </CardContent>\n        </Card>\n        {!isDone && (\n          <>\n            <Card className={classes.questionCard} variant=\"outlined\">\n              <CardContent>\n                <div className={classes.questionText}>\n                  {`${currentQuestion.content}`}\n                </div>\n                <FormControl component=\"fieldset\">\n                  {currentQuestion.choices.map((choice, index) => (\n                    <FormControlLabel\n                      value={choice}\n                      control={<Radio color=\"primary\" />}\n                      key={`choice-${index}`}\n                      label={\n                        <span className={classes.questionOptionText}>\n                          {choice}\n                        </span>\n                      }\n                      checked={answers[currentQuestionIndex] === index}\n                      onClick={(e: React.MouseEvent<HTMLLabelElement>) =>\n                        radioButtonOnClick(e, index, currentQuestionIndex + 1)\n                      }\n                    />\n                  ))}\n                </FormControl>\n              </CardContent>\n            </Card>\n\n            <div className={isSmallScreen ? \"\" : classes.footer}>\n              <div>\n                <Button\n                  className={\n                    classes.buttonWithRightMargin + \" \" + classes.button\n                  }\n                  variant=\"contained\"\n                  onClick={onBackButtonClick}\n                  disabled={currentQuestionIndex !== 0 ? false : true}\n                >\n                  上一题\n                </Button>\n                <Button\n                  className={\n                    classes.buttonWithRightMargin + \" \" + classes.button\n                  }\n                  variant=\"contained\"\n                  onClick={onNextButtonClick}\n                  disabled={\n                    currentQuestionIndex ===\n                      questionnaire.questions.length - 1 ||\n                    answers[currentQuestionIndex] === undefined ||\n                    isNextButtonDisabled\n                      ? true\n                      : false\n                  }\n                >\n                  下一题\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={onSubmit}\n                  disabled={!isAllowedToSubmit}\n                >\n                  提交\n                </Button>\n              </div>\n              <div\n                className={\n                  classes.progressWrapper +\n                  \" \" +\n                  (isSmallScreen ? classes.progressWrapperForSmallScreen : \"\")\n                }\n              >\n                <ProgressBar\n                  totalNumber={questionnaire.questions.length}\n                  currentIndex={currentQuestionIndex}\n                />\n                {`第 ${currentQuestionIndex + 1} 题（共\n                 ${questionnaire.questions.length} 题）`}\n              </div>\n            </div>\n            <div className={classes.timerContaner}>\n              <Timer />\n            </div>\n            <Fab\n              className={classes.exitButton}\n              onClick={handleExitButtonClick}\n              variant=\"extended\"\n            >\n              <DirectionsRunIcon color=\"primary\" />\n              暂存并退出\n            </Fab>\n          </>\n        )}\n      </div>\n      <Dialog\n        open={!confirmed && !!questionnaire.instruction}\n        onClose={closeConfirmDialog}\n      >\n        <DialogTitle>指导语</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{questionnaire.instruction}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeConfirmDialog} color=\"primary\" autoFocus>\n            继续\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import { useMutation } from \"@apollo/client\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  createStyles,\n  FormControl,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Theme,\n  Toolbar,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { ErrorIndicator } from \"../../lib/components\";\nimport { CREATE_ACCOUNT } from \"../../lib/graphql/mutations\";\nimport {\n  CreateAccount as CreateAccountData,\n  CreateAccountVariables,\n} from \"../../lib/graphql/mutations/CreateAccount/__generated__/CreateAccount\";\nimport { Viewer } from \"../../lib/type\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    createAccountCard: {\n      borderRadius: 8,\n      width: 800,\n      margin: \"30px auto 0\",\n    },\n    createAccountText: {\n      fontSize: \"1.5rem\",\n      textAlign: \"left\",\n      marginBottom: 10,\n      marginTop: 15,\n      paddingLeft: 40,\n    },\n    promptText: {\n      marginBottom: 24,\n      marginLeft: 40,\n      fontSize: \"1rem\",\n    },\n    inputContainer: {\n      margin: \"0 40px\",\n    },\n    input: {\n      width: \"30%\",\n      paddingRight: 10,\n      marginBottom: 10,\n    },\n    buttonContainer: {\n      marginTop: 30,\n      marginLeft: 40,\n      marginRight: 40,\n      marginBottom: 30,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n    },\n    formClassifyText: {\n      color: \"#5f6368\",\n      fontSize: \"0.8em\",\n      marginBottom: 5,\n      marginTop: 10,\n    },\n  })\n);\n\ninterface Props {\n  isAuthorized: boolean;\n  setViewer: (viewer: Viewer) => void;\n}\n\ninterface UserInfo {\n  name: string;\n  userName: string;\n  gender: string;\n  password: string;\n  education: string;\n  marriageStatus: string;\n  jobStatus: string;\n  age: string;\n}\n\nconst initialUserInfo = {\n  name: \"\",\n  userName: \"\",\n  gender: \"\",\n  password: \"\",\n  education: \"\",\n  marriageStatus: \"\",\n  jobStatus: \"\",\n  age: \"\",\n};\n\nexport const CreateAccount = ({ isAuthorized, setViewer }: Props) => {\n  const classes = useStyles();\n  const [userInfo, setUserInfo] = useState<UserInfo>(initialUserInfo);\n  const [reenteredPassword, setReenteredPassword] = useState<string>(\"\");\n  const [createAccount] = useMutation<\n    CreateAccountData,\n    CreateAccountVariables\n  >(CREATE_ACCOUNT, {\n    onCompleted: (data) => {\n      if (data && data.createAccount && data.createAccount.token) {\n        setViewer(data.createAccount);\n      }\n    },\n    onError: (error) => {\n      if (\n        error.message.includes(\"One user with this userName already exists.\")\n      ) {\n        setErrorMessage(\"此门诊号已被注册！\");\n        setShowError(true);\n        setErrorField(\"userNameDuplicate\");\n      }\n    },\n  });\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\n  const [showError, setShowError] = useState(false);\n  const [errorField, setErrorField] = useState<string>();\n  const createAccountButtonOnClick = () => {\n    if (!userInfo.userName) {\n      setErrorMessage(\"请输入您的门诊号！\");\n      setShowError(true);\n      setErrorField(\"userName\");\n      return;\n    }\n    if (!userInfo.password) {\n      setErrorMessage(\"请输入您的密码！\");\n      setShowError(true);\n      setErrorField(\"password\");\n      return;\n    }\n    if (!reenteredPassword) {\n      setErrorMessage(\"请确认您输入的密码！\");\n      setShowError(true);\n      setErrorField(\"reenteredPassword\");\n      return;\n    }\n    if (userInfo.password !== reenteredPassword) {\n      setErrorMessage(\"两次输入的密码不一致！\");\n      setShowError(true);\n      setErrorField(\"reenteredPasswordNotSame\");\n      return;\n    }\n    if (!userInfo.name) {\n      setErrorMessage(\"请输入您的姓名！\");\n      setShowError(true);\n      setErrorField(\"name\");\n      return;\n    }\n    createAccount({\n      variables: {\n        input: {\n          ...userInfo,\n          age: userInfo.age === \"\" ? undefined : Number(userInfo.age),\n        },\n      },\n    });\n  };\n  const onUserNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserInfo({ ...userInfo, userName: e.target.value });\n    if (\n      errorField === \"userName\" ||\n      (errorField === \"userNameDuplicate\" && e.target.value)\n    ) {\n      setErrorField(undefined);\n    }\n  };\n  const onPasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserInfo({ ...userInfo, password: e.target.value });\n    if (errorField === \"password\" && e.target.value) {\n      setErrorField(undefined);\n    }\n  };\n  const onReenteredPasswordChange = (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setReenteredPassword(e.target.value);\n    if (errorField === \"reenteredPassword\" && e.target.value) {\n      setErrorField(undefined);\n    } else if (\n      errorField === \"reenteredPasswordNotSame\" &&\n      e.target.value === userInfo.password\n    ) {\n      setErrorField(undefined);\n    }\n  };\n  const onNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserInfo({ ...userInfo, name: e.target.value });\n    if (errorField === \"name\" && e.target.value) {\n      setErrorField(undefined);\n    }\n  };\n  const onGenderChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setUserInfo({ ...userInfo, gender: e.target.value as string });\n  };\n  const onAgeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserInfo({ ...userInfo, age: e.target.value });\n  };\n  const onEducationChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setUserInfo({ ...userInfo, education: e.target.value as string });\n  };\n  const onJobChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserInfo({ ...userInfo, jobStatus: e.target.value });\n  };\n  const onMarraigeChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setUserInfo({ ...userInfo, marriageStatus: e.target.value as string });\n  };\n  if (isAuthorized) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <>\n      <Toolbar />\n      <Card className={classes.createAccountCard} variant=\"outlined\">\n        <CardContent>\n          <div className={classes.createAccountText}>注册</div>\n          <div className={classes.promptText}>请输入您的个人信息</div>\n          <form>\n            <div className={classes.inputContainer}>\n              <div className={classes.formClassifyText}>登录信息</div>\n              <div>\n                <TextField\n                  required\n                  className={classes.input}\n                  color=\"primary\"\n                  label=\"门诊号\"\n                  size=\"small\"\n                  value={userInfo.userName}\n                  onChange={onUserNameChange}\n                  helperText={\n                    errorField === \"userName\"\n                      ? \"请输入您的门诊号！\"\n                      : errorField === \"userNameDuplicate\"\n                      ? \"此门诊号已被注册！\"\n                      : undefined\n                  }\n                  error={\n                    errorField === \"userName\" ||\n                    errorField === \"userNameDuplicate\"\n                      ? true\n                      : undefined\n                  }\n                />\n              </div>\n              <div>\n                <TextField\n                  required\n                  className={classes.input}\n                  color=\"primary\"\n                  type=\"password\"\n                  label=\"密码\"\n                  size=\"small\"\n                  value={userInfo.password}\n                  onChange={onPasswordChange}\n                  helperText={\n                    errorField === \"password\" ? \"请输入您的密码！\" : undefined\n                  }\n                  error={errorField === \"password\" ? true : undefined}\n                />\n                <TextField\n                  required\n                  type=\"password\"\n                  className={classes.input}\n                  color=\"primary\"\n                  label=\"确认密码\"\n                  size=\"small\"\n                  value={reenteredPassword}\n                  onChange={onReenteredPasswordChange}\n                  helperText={\n                    errorField === \"reenteredPassword\"\n                      ? \"请确认您的密码！\"\n                      : errorField === \"reenteredPasswordNotSame\"\n                      ? \"两次输入的密码不一致！\"\n                      : undefined\n                  }\n                  error={\n                    errorField === \"reenteredPassword\" ||\n                    errorField === \"reenteredPasswordNotSame\"\n                      ? true\n                      : undefined\n                  }\n                />\n              </div>\n              <div className={classes.formClassifyText}>个人信息</div>\n              <TextField\n                required\n                className={classes.input}\n                color=\"primary\"\n                label=\"姓名\"\n                size=\"small\"\n                value={userInfo.name}\n                onChange={onNameChange}\n                helperText={\n                  errorField === \"name\" ? \"请输入您的姓名!\" : undefined\n                }\n                error={errorField === \"name\" ? true : undefined}\n              />\n              <FormControl className={classes.input} size=\"small\">\n                <InputLabel>性别</InputLabel>\n                <Select\n                  color=\"primary\"\n                  label=\"性别\"\n                  value={userInfo.gender}\n                  onChange={onGenderChange}\n                >\n                  <MenuItem value=\"男\">男</MenuItem>\n                  <MenuItem value=\"女\">女</MenuItem>\n                </Select>\n              </FormControl>\n              <TextField\n                className={classes.input}\n                color=\"primary\"\n                label=\"年龄\"\n                size=\"small\"\n                value={userInfo.age}\n                onChange={onAgeChange}\n              />\n              <FormControl className={classes.input} size=\"small\">\n                <InputLabel>教育</InputLabel>\n                <Select\n                  color=\"primary\"\n                  value={userInfo.education}\n                  onChange={onEducationChange}\n                >\n                  <MenuItem value=\"高中以下\">高中以下</MenuItem>\n                  <MenuItem value=\"大中专科\">大中专科</MenuItem>\n                  <MenuItem value=\"本科\">本科</MenuItem>\n                  <MenuItem value=\"硕士\">硕士</MenuItem>\n                  <MenuItem value=\"博士\">博士</MenuItem>\n                </Select>\n              </FormControl>\n              <TextField\n                className={classes.input}\n                color=\"primary\"\n                label=\"职业\"\n                size=\"small\"\n                value={userInfo.jobStatus}\n                onChange={onJobChange}\n              />\n              <FormControl className={classes.input} size=\"small\">\n                <InputLabel>婚姻</InputLabel>\n                <Select\n                  color=\"primary\"\n                  value={userInfo.marriageStatus}\n                  onChange={onMarraigeChange}\n                >\n                  <MenuItem value=\"已婚\">已婚</MenuItem>\n                  <MenuItem value=\"未婚\">未婚</MenuItem>\n                </Select>\n              </FormControl>\n            </div>\n\n            <div className={classes.buttonContainer}>\n              <Link to=\"/login\">\n                <Button>我已有账号</Button>\n              </Link>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={createAccountButtonOnClick}\n              >\n                注册\n              </Button>\n            </div>\n          </form>\n        </CardContent>\n      </Card>\n      <ErrorIndicator\n        showError={showError}\n        setShowError={setShowError}\n        errorMessage={errorMessage}\n      />\n    </>\n  );\n};\n","import { useQuery } from \"@apollo/client\";\nimport {\n  Button,\n  Checkbox,\n  createStyles,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Theme,\n} from \"@material-ui/core\";\nimport { CheckCircleOutline } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\nimport { LoadingIndicator } from \"../../lib/components\";\nimport { QUESTIONNAIRE_LIST } from \"../../lib/graphql/queries\";\nimport {\n  QuestionnaireList as QuestionnaireListData,\n  QuestionnaireListVariables,\n} from \"../../lib/graphql/queries/QuestionnaireList/__generated__/QuestionnaireList\";\nimport { ReportPdf } from \"../../lib/components\";\nimport { withReportPdfData } from \"./components\";\n\nconst PdfViewer = withReportPdfData(ReportPdf);\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    content: {\n      padding: \"5px 10px\",\n    },\n    questionnaireTable: {\n      marginTop: 20,\n      marginBottom: 20,\n    },\n    doneIcon: {\n      color: \"#4caf50\",\n    },\n  })\n);\n\nexport const Report = () => {\n  const classes = useStyles();\n  const { loading, data } = useQuery<\n    QuestionnaireListData,\n    QuestionnaireListVariables\n  >(QUESTIONNAIRE_LIST, {\n    variables: { isReport: true },\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      const questionnaireList = data.questionnaireList;\n      let count = 0;\n      for (const questionnaire of questionnaireList) {\n        if (questionnaire.done) {\n          count += 1;\n        }\n      }\n      setNumberOfFinishedQuestionnaires(count);\n      const newselectedUserAnswers = new Set<string>();\n      for (const questionnaire of questionnaireList) {\n        if (questionnaire.done && questionnaire.userAnswerId)\n          newselectedUserAnswers.add(questionnaire.userAnswerId);\n      }\n      setSelectedUserAnswers(newselectedUserAnswers);\n    },\n  });\n  const [selectedUserAnswers, setSelectedUserAnswers] = useState<Set<string>>(\n    new Set<string>()\n  );\n  const [\n    numberOfFinishedQuestionnaires,\n    setNumberOfFinishedQuestionnaires,\n  ] = useState<number | null>(null);\n  const [isReportVisible, setIsReportVisible] = useState(false);\n\n  if (isReportVisible) {\n    return (\n      <PdfViewer\n        userAnswerIds={Array.from(selectedUserAnswers)}\n        closeReport={() => setIsReportVisible(false)}\n      />\n    );\n  }\n  if (loading || !data || numberOfFinishedQuestionnaires === null) {\n    return <LoadingIndicator />;\n  }\n  const questionnaireList = data.questionnaireList;\n\n  const selectQuestionnaire = (\n    event: React.ChangeEvent<HTMLInputElement>,\n    userAnswerId: string\n  ) => {\n    const checked = event.target.checked;\n    const newselectedUserAnswers = new Set(selectedUserAnswers);\n    if (checked) {\n      newselectedUserAnswers.add(userAnswerId);\n    } else {\n      newselectedUserAnswers.delete(userAnswerId);\n    }\n    setSelectedUserAnswers(newselectedUserAnswers);\n  };\n  const selectAllQuestionnaires = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const checked = event.target.checked;\n    const newselectedUserAnswers = new Set<string>();\n    if (checked) {\n      for (const questionnaire of questionnaireList) {\n        if (questionnaire.done && questionnaire.userAnswerId)\n          newselectedUserAnswers.add(questionnaire.userAnswerId);\n      }\n    }\n    setSelectedUserAnswers(newselectedUserAnswers);\n  };\n  const generateReport = () => {\n    setIsReportVisible(true);\n  };\n  return (\n    <div className={classes.content}>\n      <TableContainer component={Paper} className={classes.questionnaireTable}>\n        <Table size=\"small\" aira-label=\"选择已完成的量表，生成报告\">\n          <TableHead>\n            <TableRow>\n              <TableCell padding=\"checkbox\">\n                <Checkbox\n                  checked={\n                    selectedUserAnswers.size ===\n                      numberOfFinishedQuestionnaires &&\n                    selectedUserAnswers.size !== 0\n                  }\n                  disabled={numberOfFinishedQuestionnaires === 0}\n                  onChange={selectAllQuestionnaires}\n                />\n              </TableCell>\n              <TableCell>量表</TableCell>\n              <TableCell>完成状态</TableCell>\n              <TableCell>完成日期</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {questionnaireList.map((questionnaire, index) => (\n              <TableRow key={`questionnaire-${index}`}>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    disabled={!questionnaire.done}\n                    checked={\n                      !!questionnaire.userAnswerId &&\n                      selectedUserAnswers.has(questionnaire.userAnswerId)\n                    }\n                    onChange={(e) =>\n                      questionnaire.userAnswerId &&\n                      selectQuestionnaire(e, questionnaire.userAnswerId)\n                    }\n                  />\n                </TableCell>\n                <TableCell>{questionnaire.name}</TableCell>\n                <TableCell>\n                  {questionnaire.done ? (\n                    <CheckCircleOutline\n                      className={classes.doneIcon}\n                      fontSize=\"small\"\n                    />\n                  ) : null}\n                </TableCell>\n                <TableCell>\n                  {questionnaire.displayedFillInDate || null}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        disabled={selectedUserAnswers.size === 0}\n        onClick={generateReport}\n      >\n        生成报告\n      </Button>\n    </div>\n  );\n};\n","import { gql } from \"@apollo/client\";\n\nexport const QUERY_USER = gql`\n  query QueryUser(\n    $userName: String\n    $name: String\n    $gender: String\n    $ageRange: AgeRange\n    $minSignUpDate: SignUpDate\n    $maxSignUpDate: SignUpDate\n    $limit: Int!\n    $currentPageIndex: Int!\n    $filter: UsersFilter\n    $onlyMyPatient: Boolean\n    $additionalFields: [String!]\n  ) {\n    queryUser(\n      userName: $userName\n      name: $name\n      gender: $gender\n      ageRange: $ageRange\n      minSignUpDate: $minSignUpDate\n      maxSignUpDate: $maxSignUpDate\n      limit: $limit\n      currentPageIndex: $currentPageIndex\n      filter: $filter\n      onlyMyPatient: $onlyMyPatient\n      additionalFields: $additionalFields\n    ) {\n      total\n      users {\n        id\n        name\n        userName\n        gender\n        education\n        jobStatus\n        age\n        marriageStatus\n        signUpDate\n        doctorName\n        doctorUserName\n        doctorId\n        finishedForms {\n          name\n          id\n          displayedFillInDate\n          userAnswerId\n          result\n          doctorUserName\n          doctorName\n          doctorId\n        }\n        diagnosis\n      }\n    }\n  }\n`;\n","import {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface Props {\n  isDialogOpen: boolean;\n  handleDialogClose: () => void;\n  additionalFields: string[];\n  setAdditionalFields: (additionalFields: string[]) => void;\n}\n\nexport const ADDITIONAL_FIELD_KEYS = [\n  \"depressed\",\n  \"anxious\",\n  \"biphasic\",\n  \"schizophrenia\",\n] as const;\nexport const ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES = [\n  \"抑郁障碍\",\n  \"焦虑障碍\",\n  \"双相障碍\",\n  \"精神分裂症\",\n] as const;\n\nexport const removeElementFromArray = <T,>(array: T[], element: T) => {\n  const newArray: T[] = [];\n  for (let currentElement of array) {\n    if (currentElement !== element) {\n      newArray.push(currentElement);\n    }\n  }\n  return newArray;\n};\n\nexport const AdditionalFieldsModal = ({\n  isDialogOpen,\n  handleDialogClose,\n  additionalFields,\n  setAdditionalFields,\n}: Props) => {\n  const selectAdditionalField = (\n    fieldKey: typeof ADDITIONAL_FIELD_KEYS[number],\n    isSelected: boolean\n  ) => {\n    if (!isSelected) {\n      setAdditionalFields(removeElementFromArray(additionalFields, fieldKey));\n    } else if (!additionalFields.includes(fieldKey)) {\n      setAdditionalFields([...additionalFields, fieldKey]);\n    }\n  };\n  return (\n    <Dialog\n      open={isDialogOpen}\n      onClose={handleDialogClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">高级筛选</DialogTitle>\n      <DialogContent>\n        {ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES.map((displayName, index) => {\n          return (\n            <div key={displayName}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={additionalFields.includes(\n                      ADDITIONAL_FIELD_KEYS[index]\n                    )}\n                    onChange={(event) => {\n                      selectAdditionalField(\n                        ADDITIONAL_FIELD_KEYS[index],\n                        event.target.checked\n                      );\n                    }}\n                  />\n                }\n                label={displayName}\n              />\n            </div>\n          );\n        })}\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  Button,\n  Checkbox,\n  Chip,\n  createStyles,\n  FormControl,\n  FormControlLabel,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Theme,\n} from \"@material-ui/core\";\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport React, { forwardRef, useImperativeHandle, useState } from \"react\";\nimport \"moment/locale/zh-cn\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport SettingsBackupRestoreIcon from \"@material-ui/icons/SettingsBackupRestore\";\nimport cnLocale from \"date-fns/locale/zh-CN\";\nimport { ErrorIndicator } from \"../../../../lib/components\";\nimport { QueryUserVariables } from \"../../../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\nimport { UsersFilter } from \"../../../../lib/graphql/globalTypes\";\nimport { INITAL_ONLY_MY_PATIENT } from \"../..\";\nimport TuneIcon from \"@material-ui/icons/Tune\";\nimport {\n  AdditionalFieldsModal,\n  ADDITIONAL_FIELD_KEYS,\n  ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES,\n  removeElementFromArray,\n} from \"../AdditionalFieldsModal\";\nimport InfoIcon from \"@material-ui/icons/Info\";\n\nconst AGE_RANGE_ERROR_MESSAGE_TEXT = \"最小年龄应小于最大年龄！\";\nconst AGE_NEGATIVE_ERROR_MESSAGE = \"年龄不能为负数！\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    promptText: {\n      color: \"#5f6368\",\n      fontSize: \"0.8em\",\n      paddingBottom: 5,\n      paddingTop: 5,\n    },\n    input: {\n      width: \"30%\",\n      paddingRight: 10,\n      paddingBottom: 5,\n    },\n    rangeWrapper: {\n      display: \"inline-block\",\n    },\n    ageRangeInput: {\n      width: \"40%\",\n    },\n    dateRangeWrapper: {\n      width: \"60%\",\n    },\n    ageRangeWrapper: {\n      width: \"30%\",\n      paddingRight: 10,\n    },\n    dateRangeInput: {\n      width: \"50%\",\n      paddingRight: 10,\n    },\n    ageInputIconWrapper: {\n      width: \"20%\",\n      display: \"inline-flex\",\n      justifyContent: \"center\",\n      paddingTop: 20,\n    },\n    buttonWrapper: {\n      paddingTop: 10,\n    },\n    extraFieldsWrapper: {\n      paddingTop: 10,\n    },\n    searchButton: {\n      marginRight: 10,\n    },\n    whiteButton: {\n      backgroundColor: \"#fff\",\n      color: \"rgb(63, 81, 181)\",\n      \"&:hover\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n    rangeFormWrapper: {\n      width: \"100%\",\n      alignItems: \"flex-start\",\n      display: \"flex\",\n    },\n    ageInputIcon: {\n      width: 16,\n      height: 16,\n      color: \"rgba(0, 0, 0, 0.54)\",\n    },\n    chip: {\n      marginRight: 5,\n    },\n    additionalFieldButton: {\n      marginRight: 5,\n    },\n  })\n);\n\nconst datePickerProps = {\n  format: \"yyyy/MM/dd\",\n  okLabel: \"确定\",\n  cancelLabel: \"取消\",\n  invalidLabel: \"输入的日期有误！\",\n  maxDateMessage: \"输入的日期太大！\",\n  minDateMessage: \"输入的日期太小！\",\n  invalidDateMessage: \"输入的日期有误！\",\n  size: \"small\" as const,\n};\n\ninterface Props {\n  searchPatients: (searchParams: QueryUserVariables) => void;\n  limit: number;\n  currentPageIndex: number;\n  setCurrentPageIndex: (currentPageIndex: number) => void;\n  filter: UsersFilter;\n}\n\nexport interface SearchPatientFormHandle {\n  search: () => void;\n}\n\nexport const SearchPatientForm = forwardRef<SearchPatientFormHandle, Props>(\n  (\n    { searchPatients, limit, currentPageIndex, setCurrentPageIndex, filter },\n    ref\n  ) => {\n    const classes = useStyles();\n    const [userName, setUserName] = useState(\"\");\n    const onUserNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setUserName(e.target.value);\n    };\n\n    const [name, setName] = useState(\"\");\n    const onNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setName(e.target.value);\n    };\n\n    const [gender, setGender] = useState<\"男\" | \"女\" | \"全部\" | \"\">(\"\");\n    const onGenderChange = (\n      e: React.ChangeEvent<{\n        name?: string | undefined;\n        value: unknown;\n      }>\n    ) => {\n      setGender(e.target.value as typeof gender);\n    };\n\n    const [ageRange, setAgeRange] = useState({\n      min: \"\",\n      max: \"\",\n    });\n    const onMinAgeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const newMinAge = Number(e.target.value);\n      if (errorField === \"ageRange\") {\n        if (newMinAge <= Number(ageRange.max) || newMinAge === 0) {\n          setErrorField(null);\n        }\n      }\n      if (errorField === \"minAge\") {\n        if (newMinAge >= 0) {\n          setErrorField(null);\n        }\n      }\n      setAgeRange({ ...ageRange, min: e.target.value });\n    };\n    const onMaxAgeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const newMaxAge = Number(e.target.value);\n      if (errorField === \"ageRange\") {\n        if (newMaxAge >= Number(ageRange.min) || newMaxAge === 0) {\n          setErrorField(null);\n        }\n      }\n      if (errorField === \"maxAge\") {\n        if (newMaxAge >= 0) {\n          setErrorField(null);\n        }\n      }\n      setAgeRange({ ...ageRange, max: e.target.value });\n    };\n\n    const [dateRange, setDateRange] = useState<{\n      min: Date | null;\n      max: Date | null;\n    }>({\n      min: null,\n      max: null,\n    });\n    const onMinDateChange = (date: Date | null, _value?: string | null) => {\n      if (errorField === \"dateRange\") {\n        if (date === null || (dateRange.max && +date <= +dateRange.max)) {\n          setErrorField(null);\n        }\n      }\n      setDateRange({\n        ...dateRange,\n        min: date,\n      });\n    };\n    const onMaxDateChange = (date: Date | null, _value?: string | null) => {\n      if (errorField === \"dateRange\") {\n        if (date === null || (dateRange.min && +date >= +dateRange.min)) {\n          setErrorField(null);\n        }\n      }\n      setDateRange({\n        ...dateRange,\n        max: date,\n      });\n    };\n\n    const [onlyMyPatient, setOnlyMyPatient] = useState(false);\n    const handleOnlyMyPatientCheckboxChange = (\n      event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n      setOnlyMyPatient(event.target.checked);\n    };\n\n    const [showError, setShowError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [errorField, setErrorField] = useState<null | string>(null);\n    const [\n      isAdditionalFieldsModalOpen,\n      setIsAdditionalFieldsModalOpen,\n    ] = useState(false);\n    const [additionalFields, setAdditionalFields] = useState<string[]>([]);\n\n    const handleAdditionalFieldsModalClose = () => {\n      setIsAdditionalFieldsModalOpen(false);\n    };\n\n    const handleAdditionalFieldsModalOpen = () => {\n      setIsAdditionalFieldsModalOpen(true);\n    };\n\n    const handleSearchButtonClick = () => {\n      if (ageRange.min && Number(ageRange.min) < 0) {\n        setErrorMessage(AGE_NEGATIVE_ERROR_MESSAGE);\n        setShowError(true);\n        setErrorField(\"minAge\");\n        return;\n      }\n      if (ageRange.max && Number(ageRange.max) < 0) {\n        setErrorMessage(AGE_NEGATIVE_ERROR_MESSAGE);\n        setShowError(true);\n        setErrorField(\"maxAge\");\n        return;\n      }\n      if (\n        ageRange.min &&\n        ageRange.max &&\n        Number(ageRange.min) > Number(ageRange.max)\n      ) {\n        setErrorMessage(AGE_RANGE_ERROR_MESSAGE_TEXT);\n        setShowError(true);\n        setErrorField(\"ageRange\");\n        return;\n      }\n\n      if (dateRange.min && dateRange.max && dateRange.min > dateRange.max) {\n        setErrorMessage(\"起始日期应在截止日期之前！\");\n        setShowError(true);\n        setErrorField(\"dateRange\");\n        return;\n      }\n\n      setCurrentPageIndex(0);\n      searchPatients({\n        userName,\n        name,\n        gender,\n        ageRange: {\n          min: ageRange.min ? Number(ageRange.min) : null,\n          max: ageRange.max ? Number(ageRange.max) : null,\n        },\n        minSignUpDate: dateRange.min\n          ? {\n              year: dateRange.min.getFullYear(),\n              month: dateRange.min.getMonth(),\n              day: dateRange.min.getDate(),\n            }\n          : null,\n        maxSignUpDate: dateRange.max\n          ? {\n              year: dateRange.max.getFullYear(),\n              month: dateRange.max.getMonth(),\n              day: dateRange.max.getDate(),\n            }\n          : null,\n        limit,\n        currentPageIndex: 0,\n        onlyMyPatient,\n        filter,\n        additionalFields,\n      });\n    };\n\n    useImperativeHandle(ref, () => ({\n      search: () => {\n        handleSearchButtonClick();\n      },\n    }));\n    const handleResetButtonClick = () => {\n      setUserName(\"\");\n      setName(\"\");\n      setGender(\"\");\n      setAgeRange({\n        min: \"\",\n        max: \"\",\n      });\n      setDateRange({\n        min: null,\n        max: null,\n      });\n      setErrorField(null);\n      setCurrentPageIndex(0);\n      setOnlyMyPatient(INITAL_ONLY_MY_PATIENT);\n      searchPatients({\n        limit,\n        currentPageIndex: 0,\n        filter,\n        onlyMyPatient: INITAL_ONLY_MY_PATIENT,\n      });\n      setAdditionalFields([]);\n    };\n    return (\n      <form noValidate autoComplete=\"off\">\n        <div className={classes.promptText}>个人信息</div>\n        <div>\n          <TextField\n            label=\"门诊号\"\n            size=\"small\"\n            className={classes.input}\n            value={userName}\n            onChange={onUserNameChange}\n          />\n          <TextField\n            label=\"姓名\"\n            size=\"small\"\n            className={classes.input}\n            value={name}\n            onChange={onNameChange}\n          />\n          <FormControl className={classes.input} size=\"small\">\n            <InputLabel>性别</InputLabel>\n            <Select\n              color=\"primary\"\n              label=\"性别\"\n              value={gender}\n              onChange={onGenderChange}\n            >\n              <MenuItem value=\"男\">男</MenuItem>\n              <MenuItem value=\"女\">女</MenuItem>\n              <MenuItem value=\"全部\">全部</MenuItem>\n            </Select>\n          </FormControl>\n          <div className={classes.rangeFormWrapper}>\n            <div\n              className={classes.ageRangeWrapper + \" \" + classes.rangeWrapper}\n            >\n              <div className={classes.promptText}>年龄</div>\n              <div>\n                <TextField\n                  label=\"最小年龄\"\n                  size=\"small\"\n                  type=\"number\"\n                  className={classes.ageRangeInput}\n                  value={ageRange.min}\n                  onChange={onMinAgeChange}\n                  error={\n                    errorField === \"ageRange\" || errorField === \"minAge\"\n                      ? true\n                      : undefined\n                  }\n                />\n                <span className={classes.ageInputIconWrapper}>\n                  <ArrowForwardIcon className={classes.ageInputIcon} />\n                </span>\n                <TextField\n                  label=\"最大年龄\"\n                  size=\"small\"\n                  type=\"number\"\n                  className={classes.ageRangeInput}\n                  value={ageRange.max}\n                  onChange={onMaxAgeChange}\n                  error={\n                    errorField === \"ageRange\" || errorField === \"maxAge\"\n                      ? true\n                      : undefined\n                  }\n                />\n              </div>\n            </div>\n            <div\n              className={classes.dateRangeWrapper + \" \" + classes.rangeWrapper}\n            >\n              <div className={classes.promptText}>注册时间</div>\n              <MuiPickersUtilsProvider utils={DateFnsUtils} locale={cnLocale}>\n                <DatePicker\n                  value={dateRange.min}\n                  onChange={onMinDateChange}\n                  label={\"起始日期\"}\n                  className={classes.dateRangeInput}\n                  {...datePickerProps}\n                  error={errorField === \"dateRange\" ? true : undefined}\n                />\n                <DatePicker\n                  value={dateRange.max}\n                  onChange={onMaxDateChange}\n                  label={\"截止日期\"}\n                  className={classes.dateRangeInput}\n                  {...datePickerProps}\n                  error={errorField === \"dateRange\" ? true : undefined}\n                />\n              </MuiPickersUtilsProvider>\n            </div>\n          </div>\n        </div>\n        <div className={classes.extraFieldsWrapper}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={onlyMyPatient}\n                onChange={handleOnlyMyPatientCheckboxChange}\n              />\n            }\n            label=\"只选择我的病人\"\n          />\n          <Button\n            startIcon={<TuneIcon />}\n            onClick={handleAdditionalFieldsModalOpen}\n            color=\"primary\"\n            className={classes.additionalFieldButton}\n          >\n            高级筛选\n          </Button>\n          {ADDITIONAL_FIELD_KEYS.map((fieldKey, index) => {\n            if (additionalFields.includes(fieldKey)) {\n              const onChipDelete = () => {\n                setAdditionalFields(\n                  removeElementFromArray(additionalFields, fieldKey)\n                );\n              };\n              return (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  onDelete={onChipDelete}\n                  icon={<InfoIcon />}\n                  color=\"primary\"\n                  label={ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES[index]}\n                  key={fieldKey}\n                  className={\n                    index !== additionalFields.length - 1 ? classes.chip : \"\"\n                  }\n                />\n              );\n            }\n            return null;\n          })}\n        </div>\n        <div className={classes.buttonWrapper}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<SearchIcon />}\n            className={classes.searchButton}\n            onClick={handleSearchButtonClick}\n          >\n            搜索\n          </Button>\n          <Button\n            variant=\"contained\"\n            startIcon={<SettingsBackupRestoreIcon />}\n            className={classes.whiteButton}\n            onClick={handleResetButtonClick}\n          >\n            重置\n          </Button>\n        </div>\n        <ErrorIndicator\n          showError={showError}\n          setShowError={setShowError}\n          errorMessage={errorMessage}\n        />\n        <AdditionalFieldsModal\n          isDialogOpen={isAdditionalFieldsModalOpen}\n          handleDialogClose={handleAdditionalFieldsModalClose}\n          additionalFields={additionalFields}\n          setAdditionalFields={setAdditionalFields}\n        />\n      </form>\n    );\n  }\n);\n","import { createStyles, Divider, makeStyles, Theme } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 48,\n      display: \"flex\",\n      alignItems: \"center\",\n      paddingLeft: 10,\n      fontWeight: 500,\n      fontSize: \"1.125rem\",\n    },\n  })\n);\n\ninterface Props {\n  text: string;\n}\n\nexport const Header = ({ text }: Props) => {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.root}>{text}</div>\n      <Divider />\n    </>\n  );\n};\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport React, { useMemo, useState } from \"react\";\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport { QueryUser_queryUser_users_finishedForms as FinishedForms } from \"../../../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\nimport { FormResult } from \"../../..\";\nimport { LineChartPopOver } from \"../../../../lib/components\";\n\ninterface Props {\n  finishedForms: FinishedForms[] | null;\n}\n\nexport const LineChartsButton = ({ finishedForms }: Props) => {\n  const isButtonDisabled =\n    finishedForms === null || finishedForms.length === 0 ? true : false;\n  const listData: {\n    uniqueFormList: FinishedForms[];\n    resultList: FormResult[][];\n  } = useMemo(() => {\n    if (!finishedForms)\n      return { uniqueFormList: [], resultList: [] as FormResult[][] };\n    const formList: FinishedForms[] = [];\n    const resultList: FormResult[][] = [];\n    const formSet: Set<string> = new Set();\n    finishedForms.forEach((questionnaire) => {\n      if (!formSet.has(questionnaire.id)) {\n        formSet.add(questionnaire.id);\n        formList.push(questionnaire);\n        if (questionnaire.result && questionnaire.displayedFillInDate) {\n          resultList.push([\n            {\n              result: questionnaire.result,\n              fillInDate: questionnaire.displayedFillInDate,\n            },\n          ]);\n        } else {\n          resultList.push([] as FormResult[]);\n        }\n      } else if (questionnaire.result && questionnaire.displayedFillInDate) {\n        let index = 0;\n        while (index <= formList.length) {\n          if (formList[index].id === questionnaire.id) {\n            resultList[index].push({\n              result: questionnaire.result,\n              fillInDate: questionnaire.displayedFillInDate,\n            });\n            break;\n          }\n          index += 1;\n        }\n      }\n    });\n    const newResultList = resultList.map((result) => [...result].reverse());\n    return { uniqueFormList: formList, resultList: newResultList };\n  }, [finishedForms]);\n  const { uniqueFormList, resultList } = listData;\n  const [isOpen, setIsOpen] = useState(false);\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n  const openModal = () => {\n    setIsOpen(true);\n  };\n  console.log(uniqueFormList, resultList);\n  return (\n    <>\n      <Button\n        startIcon={<EqualizerIcon />}\n        color=\"primary\"\n        disabled={isButtonDisabled}\n        onClick={openModal}\n        size=\"small\"\n      >\n        趋势\n      </Button>\n      <Dialog open={isOpen} onClose={closeModal}>\n        <DialogTitle>查看趋势</DialogTitle>\n        <DialogContent>\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>量表</TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {uniqueFormList.map((form, index) => (\n                  <TableRow key={`questionnaire-${index}`}>\n                    <TableCell>{form.name}</TableCell>\n                    <TableCell>\n                      <LineChartPopOver\n                        formResultList={resultList[index]}\n                        formName={form.name}\n                      />\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <DialogActions>\n            <Button onClick={closeModal} color=\"primary\">\n              　关闭\n            </Button>\n          </DialogActions>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n};\n","import { useMutation } from \"@apollo/client\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  DialogContentText,\n  createStyles,\n  makeStyles,\n  Theme,\n  Button,\n  DialogActions,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ADDITIONAL_FIELD_KEYS,\n  ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES,\n} from \"..\";\nimport { ADD_DIAGNOSIS } from \"../../../../lib/graphql/mutations\";\nimport {\n  AddDiagnosis,\n  AddDiagnosisVariables,\n} from \"../../../../lib/graphql/mutations/AddDiagnosis/__generated__/AddDiagnosis\";\n\ninterface Props {\n  isDialogOpen: boolean;\n  handleDialogClose: () => void;\n  patientName: string;\n  patientId: string;\n  refetch: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    diagnosisText: {\n      minWidth: 250,\n    },\n  })\n);\n\nexport const AddDiagnosisModal = ({\n  isDialogOpen,\n  handleDialogClose,\n  patientName,\n  patientId,\n  refetch,\n}: Props) => {\n  const [addDiagnosis] = useMutation<AddDiagnosis, AddDiagnosisVariables>(\n    ADD_DIAGNOSIS\n  );\n  useEffect(() => {\n    setDiagnosis(\"\");\n  }, [patientName]);\n  const classes = useStyles();\n  const [diagnosis, setDiagnosis] = useState(\"\");\n  const handleDiagnosisSelectChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setDiagnosis(e.target.value as string);\n  };\n  const handleComfirm = async () => {\n    if (diagnosis !== \"\") {\n      await addDiagnosis({\n        variables: {\n          input: {\n            patientId,\n            diagnosis:\n              ADDITIONAL_FIELD_KEYS[\n                ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES.indexOf(\n                  diagnosis as typeof ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES[number]\n                )\n              ],\n          },\n        },\n      });\n    } else {\n      await addDiagnosis({\n        variables: {\n          input: {\n            patientId,\n            diagnosis,\n          },\n        },\n      });\n    }\n    handleDialogClose();\n    refetch();\n  };\n  return (\n    <Dialog open={isDialogOpen} onClose={handleDialogClose}>\n      <DialogTitle>诊断</DialogTitle>\n      <DialogContent>\n        <DialogContentText className={classes.diagnosisText}>\n          给{patientName}添加诊断\n        </DialogContentText>\n        <FormControl fullWidth>\n          <InputLabel shrink>诊断</InputLabel>\n          <Select value={diagnosis} onChange={handleDiagnosisSelectChange}>\n            {ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES.map((option) => (\n              <MenuItem value={option} key={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleDialogClose}>取消</Button>\n        <Button onClick={handleComfirm} color=\"primary\">\n          确认\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import {\n  Button,\n  createStyles,\n  IconButton,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n  Theme,\n} from \"@material-ui/core\";\nimport React, { ChangeEvent, useEffect, useState, MouseEvent } from \"react\";\nimport { ErrorIndicator, LoadingIndicator } from \"../../../../lib/components\";\nimport {\n  QueryUser,\n  QueryUser_queryUser_users_finishedForms as QuestionnaireData,\n} from \"../../../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\nimport NoteIcon from \"@material-ui/icons/Note\";\n// import { HelpPopover } from \"../HelpPopover\";\nimport {\n  ADDITIONAL_FIELD_KEYS,\n  ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES,\n  ChooseFormModal,\n} from \"..\";\nimport { UsersFilter } from \"../../../../lib/graphql/globalTypes\";\nimport { LineChartsButton } from \"../LineChartsButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { AddDiagnosisModal } from \"../AddDiagnosisModal\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      marginTop: 20,\n      width: \"calc(100% - 20px)\",\n      minWidth: 1085,\n      fontSize: \"0.9rem\",\n    },\n    loadingIndicatorWrapper: {\n      width: \"100%\",\n      height: 200,\n    },\n    reportButton: {\n      backgroundColor: \"#fff\",\n      color: \"rgb(63, 81, 181)\",\n      \"&:hover\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n    lineChartsButtonContainer: {\n      marginRight: 5,\n    },\n    tableCell: {\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n    },\n    iconMargin: {\n      marginRight: 5,\n    },\n  })\n);\nconst tableColumnTexts = [\n  \"门诊号\",\n  \"姓名\",\n  \"性别\",\n  \"年龄\",\n  \"教育\",\n  \"职业\",\n  \"婚姻\",\n  \"注册时间\",\n  \"医生\",\n  \"诊断\",\n];\nconst tableColumns = [\n  \"userName\",\n  \"name\",\n  \"gender\",\n  \"age\",\n  \"education\",\n  \"jobStatus\",\n  \"marriageStatus\",\n  \"signUpDate\",\n  \"doctorName\",\n  \"diagnosis\",\n] as const;\n\nconst tableMinWidth = [70, 80, 60, 60, 90, 70, 60, 150, 80, 140] as const;\nconst tableMaxWidth = [140, 80, 60, 60, 90, 70, 60, 150, 80, 140] as const;\n\ninterface Props {\n  loading: boolean;\n  patientList?: QueryUser;\n  selectedUserAnswerIds: string[] | null;\n  setSelectedUserId: (userId: string | null) => void;\n  setSelectedUserAnswerIds: (selectedFormIds: string[] | null) => void;\n  setIsReportShown: (isReportShown: boolean) => void;\n  limit: number;\n  currentPageIndex: number;\n  handleLimitChange: (limit: number) => void;\n  handleCurrentPageIndexChange: (currentPageIndex: number) => void;\n  filter: UsersFilter;\n  setFilter: (filter: UsersFilter) => void;\n  handleSortChange: () => void;\n  refetch: () => void;\n}\nexport const PatientTable = (props: Props) => {\n  const classes = useStyles();\n  const {\n    loading,\n    patientList,\n    selectedUserAnswerIds,\n    setSelectedUserId,\n    setSelectedUserAnswerIds,\n    setIsReportShown,\n    limit,\n    currentPageIndex,\n    handleLimitChange,\n    handleCurrentPageIndexChange,\n    filter,\n    handleSortChange,\n    refetch,\n  } = props;\n  const [showError, setShowError] = useState(false);\n  const [isChooseFormModalShown, setIsChooseFormModalShown] = useState(false);\n  const [finishedFormList, setFinishedFormList] = useState<\n    QuestionnaireData[] | null\n  >(null);\n\n  const handleReportButtonClick = (\n    finishedForms: QuestionnaireData[],\n    userId: string\n  ) => {\n    setSelectedUserId(userId);\n    setFinishedFormList(finishedForms);\n    const selectedUserAnswerIds = finishedForms\n      .map((finishedForm) => finishedForm.userAnswerId)\n      .filter((finishedForm): finishedForm is string => finishedForm !== null);\n    setSelectedUserAnswerIds(selectedUserAnswerIds);\n    setIsChooseFormModalShown(true);\n  };\n  const closeModal = () => {\n    setIsChooseFormModalShown(false);\n  };\n  const onOkButtonClick = () => {\n    setIsReportShown(true);\n  };\n  const [isAddDiagnosisModalShown, setIsAddDiagnosisModalShown] = useState(\n    false\n  );\n  const [addDiagnosisPatientId, setAddDiagnosisPatientId] = useState<\n    string | null\n  >(null);\n  const handleAddDiagnosisModalClose = () => {\n    setIsAddDiagnosisModalShown(false);\n  };\n  const openAddDiagnosisModal = () => {\n    setIsAddDiagnosisModalShown(true);\n  };\n  const [addDiagnosisPatientName, setAddDiagnosisPatientName] = useState<\n    string | null\n  >(null);\n  const handleEditDiagnosisButtonClick = (\n    patientName: string,\n    patientId: string\n  ) => {\n    setAddDiagnosisPatientName(patientName);\n    setAddDiagnosisPatientId(patientId);\n    openAddDiagnosisModal();\n  };\n  useEffect(() => {\n    if (\n      loading === false &&\n      patientList !== undefined &&\n      patientList.queryUser.users.length === 0\n    ) {\n      setShowError(true);\n    }\n  }, [loading, patientList]);\n  if (loading) {\n    return (\n      <div className={classes.loadingIndicatorWrapper}>\n        <LoadingIndicator />\n      </div>\n    );\n  }\n  if (patientList === undefined) {\n    return null;\n  }\n  if (patientList.queryUser.users.length === 0) {\n    return (\n      <ErrorIndicator\n        showError={showError}\n        setShowError={setShowError}\n        errorMessage=\"未找到符合条件的病人！\"\n      />\n    );\n  }\n\n  const handleRowsPerPageChange = (\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    handleLimitChange(Number(event.target.value));\n  };\n\n  const handlePageChange = (\n    _event: MouseEvent<HTMLButtonElement> | null,\n    page: number\n  ) => {\n    handleCurrentPageIndexChange(page);\n  };\n\n  const labelDisplayedRows = ({\n    from,\n    to,\n    count,\n  }: {\n    from: number;\n    to: number;\n    count: number;\n  }): string => {\n    return `共计${count}条数据，当前为第${Math.ceil(from / limit)}页`;\n  };\n  return (\n    <>\n      <TableContainer component={Paper} className={classes.root}>\n        <TablePagination\n          rowsPerPage={limit}\n          rowsPerPageOptions={[5, 10, 25]}\n          page={currentPageIndex}\n          count={patientList.queryUser.total}\n          onChangePage={handlePageChange}\n          component=\"div\"\n          onChangeRowsPerPage={handleRowsPerPageChange}\n          labelDisplayedRows={labelDisplayedRows}\n        />\n        <Table size=\"small\" aria-label=\"病人列表\">\n          <TableHead>\n            <TableRow>\n              {tableColumnTexts.map((text, index) => (\n                <TableCell\n                  key={text}\n                  style={{\n                    minWidth: tableMinWidth[index],\n                    maxWidth: tableMaxWidth[index],\n                    padding: 5,\n                    paddingLeft: index === 0 ? 10 : undefined,\n                  }}\n                  className={classes.tableCell}\n                >\n                  {tableColumns[index] === \"signUpDate\" ? (\n                    <TableSortLabel\n                      active={tableColumns[index] === \"signUpDate\"}\n                      direction={\n                        filter === UsersFilter.DATE_LATEST ? \"desc\" : \"asc\"\n                      }\n                      onClick={handleSortChange}\n                    >\n                      {text}\n                    </TableSortLabel>\n                  ) : (\n                    text\n                  )}\n                </TableCell>\n              ))}\n              <TableCell\n                style={{\n                  padding: 5,\n                }}\n              />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {patientList.queryUser.users.map((patientInformation) => {\n              const isReportButtonDisabled =\n                !patientInformation.finishedForms ||\n                patientInformation.finishedForms.length === 0;\n\n              return (\n                <TableRow key={patientInformation.userName}>\n                  {tableColumns.map((column, index) => {\n                    const content =\n                      index === tableColumns.length - 1\n                        ? ADDITIONAL_FIELD_MODAL_DISPLAY_NAMES[\n                            ADDITIONAL_FIELD_KEYS.indexOf(\n                              patientInformation[\n                                column\n                              ] as typeof ADDITIONAL_FIELD_KEYS[number]\n                            )\n                          ]\n                        : patientInformation[column];\n                    return (\n                      <TableCell\n                        key={column}\n                        style={{\n                          minWidth: tableMinWidth[index],\n                          maxWidth: tableMaxWidth[index],\n                          padding: 5,\n                          paddingLeft: index === 0 ? 10 : undefined,\n                        }}\n                        className={classes.tableCell}\n                        title={content || undefined}\n                      >\n                        {index === tableColumns.length - 1 ? (\n                          <>\n                            <IconButton\n                              aria-label=\"delete\"\n                              className={classes.iconMargin}\n                              size=\"small\"\n                              color=\"primary\"\n                              onClick={() =>\n                                patientInformation.name &&\n                                handleEditDiagnosisButtonClick(\n                                  patientInformation.name,\n                                  patientInformation.id\n                                )\n                              }\n                            >\n                              <EditIcon fontSize=\"inherit\" />\n                            </IconButton>\n                            {content}\n                          </>\n                        ) : (\n                          content\n                        )}\n                      </TableCell>\n                    );\n                  })}\n                  <TableCell style={{ minWidth: 180, padding: 0 }}>\n                    <div style={{ display: \"flex\" }}>\n                      <span className={classes.lineChartsButtonContainer}>\n                        <LineChartsButton\n                          finishedForms={patientInformation.finishedForms}\n                        />\n                      </span>\n                      <Button\n                        size=\"small\"\n                        className={classes.reportButton}\n                        color=\"primary\"\n                        startIcon={<NoteIcon />}\n                        disabled={isReportButtonDisabled}\n                        onClick={() =>\n                          patientInformation.finishedForms &&\n                          handleReportButtonClick(\n                            patientInformation.finishedForms,\n                            patientInformation.id\n                          )\n                        }\n                      >\n                        报告\n                      </Button>\n                      {/* {isReportButtonDisabled && patientInformation.name && (\n                        <HelpPopover name={patientInformation.name} />\n                      )} */}\n                    </div>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {finishedFormList && selectedUserAnswerIds && (\n        <ChooseFormModal\n          isOpen={isChooseFormModalShown}\n          closeModal={closeModal}\n          finishedFormList={finishedFormList}\n          selectedUserAnswerIds={selectedUserAnswerIds}\n          setSelectedUserAnswerIds={setSelectedUserAnswerIds}\n          onOkButtonClick={onOkButtonClick}\n        />\n      )}\n      {addDiagnosisPatientName && addDiagnosisPatientId && (\n        <AddDiagnosisModal\n          isDialogOpen={isAddDiagnosisModalShown}\n          handleDialogClose={handleAddDiagnosisModalClose}\n          patientName={addDiagnosisPatientName}\n          patientId={addDiagnosisPatientId}\n          refetch={refetch}\n        />\n      )}\n    </>\n  );\n};\n","import {\n  Button,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { QueryUser_queryUser_users_finishedForms as QuestionnaireData } from \"../../../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\n\ninterface Props {\n  isOpen: boolean;\n  closeModal: () => void;\n  finishedFormList: QuestionnaireData[];\n  selectedUserAnswerIds: string[];\n  setSelectedUserAnswerIds: (selectedUserAnswerIds: string[]) => void;\n  onOkButtonClick: () => void;\n}\n\nexport const ChooseFormModal = ({\n  isOpen,\n  closeModal,\n  finishedFormList,\n  selectedUserAnswerIds,\n  setSelectedUserAnswerIds,\n  onOkButtonClick,\n}: Props) => {\n  const handleSelectAllCheckBoxClick = () => {\n    if (selectedUserAnswerIds.length < finishedFormList.length) {\n      setSelectedUserAnswerIds(\n        finishedFormList\n          .map((form) => form.userAnswerId)\n          .filter(\n            (userAnswerId): userAnswerId is string => userAnswerId !== null\n          )\n      );\n    } else {\n      setSelectedUserAnswerIds([]);\n    }\n  };\n  const handleSelectCheckBoxClick = (formId: string) => {\n    if (selectedUserAnswerIds.indexOf(formId) !== -1) {\n      setSelectedUserAnswerIds(\n        selectedUserAnswerIds.filter(\n          (currentUserAnswerId) => currentUserAnswerId !== formId\n        )\n      );\n    } else {\n      setSelectedUserAnswerIds([...selectedUserAnswerIds, formId]);\n    }\n  };\n  const handleOkButtonClick = () => {\n    onOkButtonClick();\n    closeModal();\n  };\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={closeModal}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">请选择要生成报告的量表</DialogTitle>\n      <DialogContent>\n        <TableContainer>\n          <Table size=\"small\" aira-label=\"选择量表，生成报告\">\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={\n                      selectedUserAnswerIds.length ===\n                        finishedFormList.length &&\n                      selectedUserAnswerIds.length !== 0\n                    }\n                    onChange={handleSelectAllCheckBoxClick}\n                  />\n                </TableCell>\n                <TableCell>全部已完成量表</TableCell>\n                <TableCell>完成时间</TableCell>\n                <TableCell>医生</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {finishedFormList.map((form, index) => (\n                <TableRow key={`questionnaire-${index}`}>\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={\n                        !!form.userAnswerId &&\n                        selectedUserAnswerIds.indexOf(form.userAnswerId) !== -1\n                      }\n                      onChange={() =>\n                        form.userAnswerId &&\n                        handleSelectCheckBoxClick(form.userAnswerId)\n                      }\n                    />\n                  </TableCell>\n                  <TableCell>{form.name}</TableCell>\n                  <TableCell>{form.displayedFillInDate || null}</TableCell>\n                  <TableCell>{form.doctorName || null}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={closeModal} color=\"primary\">\n          　取消\n        </Button>\n        <Button\n          onClick={handleOkButtonClick}\n          color=\"primary\"\n          autoFocus\n          disabled={selectedUserAnswerIds.length === 0}\n        >\n          确定\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import {\n  createStyles,\n  IconButton,\n  makeStyles,\n  Popover,\n  Theme,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    popover: {\n      pointerEvents: \"none\",\n    },\n    paper: {\n      padding: theme.spacing(1),\n    },\n    icon: {\n      width: 22,\n      height: 22,\n    },\n  })\n);\n\ninterface Props {\n  name: string;\n}\nexport const HelpPopover = ({ name }: Props) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\n  const open = Boolean(anchorEl);\n  const handlePopoverOpen = (\n    event: React.MouseEvent<HTMLElement, MouseEvent>\n  ) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <>\n      <IconButton\n        color=\"primary\"\n        size=\"small\"\n        onMouseEnter={handlePopoverOpen}\n        onMouseLeave={handlePopoverClose}\n      >\n        <HelpOutlineIcon className={classes.icon} />\n      </IconButton>\n      <Popover\n        id=\"mouse-over-popover\"\n        className={classes.popover}\n        classes={{\n          paper: classes.paper,\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        onClose={handlePopoverClose}\n        disableRestoreFocus\n      >\n        {name}未填写任何量表！\n      </Popover>\n    </>\n  );\n};\n","import { useLazyQuery } from \"@apollo/client\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core\";\nimport React, { ElementRef, useEffect, useRef, useState } from \"react\";\nimport { ReportPdf } from \"../../lib/components\";\nimport { UsersFilter } from \"../../lib/graphql/globalTypes\";\nimport { QUERY_USER } from \"../../lib/graphql/queries/QueryUser\";\nimport {\n  QueryUser,\n  QueryUserVariables,\n} from \"../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\nimport {\n  Header,\n  PatientTable,\n  SearchPatientForm,\n  withReportPdfDataForAdmin,\n} from \"./components\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    content: {\n      padding: \"5px 10px\",\n    },\n  })\n);\nconst PdfViewer = withReportPdfDataForAdmin(ReportPdf);\n\nexport const INITIAL_LIMIT = 10;\nexport const INITIAL_CURRENT_PAGE_INDEX = 0;\nexport const INITAL_ONLY_MY_PATIENT = false;\n\nexport const PatientInformation = () => {\n  const [getQueryResult, { loading, data: userListData }] = useLazyQuery<\n    QueryUser,\n    QueryUserVariables\n  >(QUERY_USER, { fetchPolicy: \"no-cache\" });\n  const searchFormRef = useRef<ElementRef<typeof SearchPatientForm>>(null);\n  const [limit, setLimit] = useState(INITIAL_LIMIT);\n  const [currentPageIndex, setCurrentPageIndex] = useState(\n    INITIAL_CURRENT_PAGE_INDEX\n  );\n  const [filter, setFilter] = useState<UsersFilter>(UsersFilter.DATE_LATEST);\n  const classes = useStyles();\n  const [selectedUserAnswerIds, setSelectedUserAnswerIds] = useState<\n    string[] | null\n  >(null);\n  const [selectedUserId, setSelectedUserId] = useState<string | null>(null);\n  const [isReportShown, setIsReportShown] = useState(false);\n  const closeReport = () => {\n    setIsReportShown(false);\n  };\n  const searchPatients = (params: QueryUserVariables) => {\n    getQueryResult({ variables: params });\n    setSearchParams(params);\n  };\n  const getQueryResultRef = useRef(getQueryResult);\n  const [searchParams, setSearchParams] = useState<QueryUserVariables>({\n    limit: INITIAL_LIMIT,\n    currentPageIndex: INITIAL_CURRENT_PAGE_INDEX,\n  });\n  const handleLimitChange = (limit: number): void => {\n    setLimit(limit);\n    setCurrentPageIndex(0);\n    getQueryResult({\n      variables: { ...searchParams, limit, currentPageIndex: 0, filter },\n    });\n  };\n  const handleCurrentPageIndexChange = (currentPageIndex: number): void => {\n    setCurrentPageIndex(currentPageIndex);\n    getQueryResult({\n      variables: { ...searchParams, limit, currentPageIndex, filter },\n    });\n  };\n  const refetch = () => {\n    getQueryResult({\n      variables: { ...searchParams, limit, currentPageIndex, filter },\n    });\n  };\n  const handleSortChange = () => {\n    const newFilter =\n      filter === UsersFilter.DATE_LATEST\n        ? UsersFilter.DATE_OLDEST\n        : UsersFilter.DATE_LATEST;\n    setFilter(newFilter);\n    setCurrentPageIndex(0);\n    getQueryResult({\n      variables: {\n        ...searchParams,\n        limit,\n        currentPageIndex: 0,\n        filter: newFilter,\n      },\n    });\n  };\n  useEffect(() => {\n    getQueryResultRef.current({\n      variables: {\n        limit: INITIAL_LIMIT,\n        currentPageIndex: INITIAL_CURRENT_PAGE_INDEX,\n        filter: UsersFilter.DATE_LATEST,\n        onlyMyPatient: INITAL_ONLY_MY_PATIENT,\n      },\n    });\n  }, []);\n  if (isReportShown && selectedUserId && selectedUserAnswerIds) {\n    return (\n      <PdfViewer\n        userId={selectedUserId}\n        userAnswerIds={selectedUserAnswerIds}\n        closeReport={closeReport}\n      />\n    );\n  }\n  return (\n    <div>\n      <Header text={\"搜索病人信息\"} />\n      <div className={classes.content}>\n        <SearchPatientForm\n          searchPatients={searchPatients}\n          limit={limit}\n          currentPageIndex={currentPageIndex}\n          ref={searchFormRef}\n          setCurrentPageIndex={setCurrentPageIndex}\n          filter={filter}\n        />\n        <PatientTable\n          loading={loading}\n          patientList={userListData}\n          selectedUserAnswerIds={selectedUserAnswerIds}\n          setSelectedUserId={setSelectedUserId}\n          setSelectedUserAnswerIds={setSelectedUserAnswerIds}\n          setIsReportShown={setIsReportShown}\n          limit={limit}\n          currentPageIndex={currentPageIndex}\n          handleLimitChange={handleLimitChange}\n          handleCurrentPageIndexChange={handleCurrentPageIndexChange}\n          filter={filter}\n          setFilter={setFilter}\n          handleSortChange={handleSortChange}\n          refetch={refetch}\n        />\n      </div>\n    </div>\n  );\n};\n","import { useQuery } from \"@apollo/client\";\nimport React, { ComponentType, PropsWithChildren } from \"react\";\nimport { LoadingIndicator } from \"../../../../lib/components\";\nimport { REPORT_FOR_ADMIN } from \"../../../../lib/graphql/queries\";\nimport {\n  ReportForAdmin as ReportData,\n  ReportForAdminVariables,\n} from \"../../../../lib/graphql/queries/ReportForAdmin/__generated__/ReportForAdmin\";\n\nexport const withReportPdfDataForAdmin = (\n  WrappedComponent: ComponentType<\n    PropsWithChildren<{ pdfData: string; closeReport: () => void }>\n  >\n) => {\n  return ({\n    children,\n    userAnswerIds,\n    closeReport,\n    userId,\n  }: PropsWithChildren<{\n    userAnswerIds: string[];\n    closeReport: () => void;\n    userId: string;\n  }>) => {\n    // Get PDF data.\n    const { data, loading } = useQuery<ReportData, ReportForAdminVariables>(\n      REPORT_FOR_ADMIN,\n      {\n        variables: {\n          userAnswerIds,\n          userId,\n        },\n        fetchPolicy: \"no-cache\",\n      }\n    );\n\n    if (loading || !data) {\n      return <LoadingIndicator />;\n    }\n\n    if (data.reportForAdmin && data.reportForAdmin.pdf) {\n      return (\n        <WrappedComponent\n          pdfData={data.reportForAdmin.pdf}\n          closeReport={closeReport}\n        >\n          {children}\n        </WrappedComponent>\n      );\n    }\n\n    return null;\n  };\n};\n","import {\n  makeStyles,\n  Theme,\n  createStyles,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { Doctor } from \"../../../../lib/type\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      overflow: \"hidden\",\n    },\n    actionContainer: {\n      float: \"right\",\n      paddingRight: 10,\n      paddingTop: 10,\n      fontSize: \"0.875rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    welcomeMessage: {\n      paddingRight: 10,\n      paddingBottom: 1,\n    },\n  })\n);\n\ninterface Props {\n  handleDoctorLogOut: () => void;\n  doctor: Doctor;\n}\n\nexport const Header = ({ handleDoctorLogOut, doctor }: Props) => {\n  const classes = useStyles();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const handleCloseDialog = () => {\n    setIsDialogOpen(false);\n  };\n  const openDialog = () => {\n    setIsDialogOpen(true);\n  };\n  const logOutDoctor = () => {\n    setIsDialogOpen(false);\n    handleDoctorLogOut();\n  };\n  return (\n    <div className={classes.root}>\n      <span className={classes.actionContainer}>\n        <span className={classes.welcomeMessage}>{doctor.name}医生已登入</span>\n        <Button\n          color=\"secondary\"\n          startIcon={<ExitToAppIcon />}\n          onClick={openDialog}\n        >\n          退出\n        </Button>\n      </span>\n      <Dialog\n        open={isDialogOpen}\n        onClose={handleCloseDialog}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"确认退出？\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            退出后需要输入医生的账号和密码才能重新登入\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog}>取消</Button>\n          <Button onClick={logOutDoctor} color=\"secondary\">\n            退出\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import {\n  Button,\n  createStyles,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n  makeStyles,\n  TextField,\n  Theme,\n} from \"@material-ui/core\";\nimport React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useState,\n} from \"react\";\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\n\ninterface Props {\n  isDialogOpen: boolean;\n  setIsDialogOpen: (isDialogOpen: boolean) => void;\n  doctorName: string;\n  handleDoctorLogIn: (password: string) => void;\n  hideErrorIndicator: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    passwordInput: {\n      minWidth: 300,\n    },\n  })\n);\n\nexport interface DoctorLogInDialogHandle {\n  showError: () => void;\n  hideError: () => void;\n}\n\nexport const DoctorLogInDialog = forwardRef<DoctorLogInDialogHandle, Props>(\n  (props: Props, ref) => {\n    const handleKeyPress = (event: KeyboardEvent) => {\n      if (event.key === \"Enter\") {\n        handleClickLogIn();\n      }\n    };\n    useEffect(() => {\n      window.addEventListener(\"keydown\", handleKeyPress);\n\n      return () => {\n        window.removeEventListener(\"keydown\", handleKeyPress);\n      };\n    });\n    const classes = useStyles();\n    const {\n      isDialogOpen,\n      setIsDialogOpen,\n      doctorName,\n      handleDoctorLogIn,\n      hideErrorIndicator,\n    } = props;\n    const [password, setPassword] = useState(\"\");\n    const [isErrorShown, setIsErrorShown] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n      showError: () => {\n        setIsErrorShown(true);\n      },\n      hideError: () => {\n        setIsErrorShown(false);\n      },\n    }));\n    const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      hideErrorIndicator();\n      setPassword(e.target.value);\n    };\n    const handleClickLogIn = () => {\n      handleDoctorLogIn(password);\n    };\n    const handleClickCancel = () => {\n      setIsDialogOpen(false);\n    };\n    return (\n      <Dialog open={isDialogOpen} onClose={handleClickCancel}>\n        <DialogTitle>请确认您的密码</DialogTitle>\n        <DialogContent>\n          <DialogContentText>当前登入的医生为{doctorName}</DialogContentText>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item>\n              <VpnKeyIcon />\n            </Grid>\n            <Grid item>\n              <TextField\n                autoFocus\n                className={classes.passwordInput}\n                label=\"密码\"\n                type=\"password\"\n                value={password}\n                onChange={handlePasswordChange}\n                helperText={\n                  isErrorShown && !password ? \"请输入您的密码\" : undefined\n                }\n                error={isErrorShown && !password ? true : undefined}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClickCancel} color=\"primary\">\n            取消\n          </Button>\n          <Button onClick={handleClickLogIn} color=\"primary\">\n            确认\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n);\n","import { Button, createStyles, makeStyles, Theme } from \"@material-ui/core\";\nimport React, { ElementRef, useRef, useState } from \"react\";\nimport { DoctorLogInDialog } from \"./components\";\nimport logo from \"../AppHeader/assets/logo.png\";\nimport PlayArrowRoundedIcon from \"@material-ui/icons/PlayArrowRounded\";\nimport { FetchResult } from \"@apollo/client\";\n// import { DOCTOR_LOG_OUT } from \"../../lib/graphql/mutations\";\nimport { Doctor } from \"../../lib/type\";\n// import { DoctorLogOut } from \"../../lib/graphql/mutations/DoctorLogOut/__generated__/doctorLogOut\";\nimport { useHistory } from \"react-router-dom\";\nimport { ErrorIndicator } from \"../../lib/components\";\nimport {\n  DoctorLogIn,\n  DoctorLogInVariables,\n} from \"../../lib/graphql/mutations/DoctorLogIn/__generated__/DoctorLogIn\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: \"100%\",\n      width: \"100%\",\n      background: \"#e3f2fd\",\n    },\n    logoContainer: {\n      display: \"flex\",\n      minHeight: 92,\n      maxHeight: 290,\n      height: \"calc(100% - 560px)\",\n      justifyContent: \"center\",\n    },\n    logo: {\n      maxHeight: 92,\n      height: \"100%\",\n      marginTop: \"auto\",\n    },\n    actionContainer: {\n      maxHeight: 160,\n      padding: 20,\n      display: \"flex\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      fontSize: \"1.5rem\",\n    },\n    enterSystemButtonContainer: {\n      marginTop: 18,\n    },\n    extendedIcon: {\n      position: \"absolute\",\n      right: 20,\n      bottom: 20,\n      backgroundColor: \"#fff\",\n    },\n    seuText: {\n      margin: \"10px 0 15px\",\n    },\n    header: {\n      height: 52,\n    },\n  })\n);\n\ninterface Props {\n  doctor: Doctor;\n  setDoctor: (doctor: Doctor) => void;\n  logIn: (variables?: {\n    variables: DoctorLogInVariables;\n  }) => Promise<FetchResult<DoctorLogIn>>;\n}\n\nexport const Welcome = ({ setDoctor, doctor, logIn }: Props) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const doctorLogInDialogRef = useRef<ElementRef<typeof DoctorLogInDialog>>(\n    null\n  );\n  // const [logOut] = useMutation<DoctorLogOut>(DOCTOR_LOG_OUT, {\n  //   onCompleted: (data) => {\n  //     if (data && data.doctorLogOut) {\n  //       setDoctor(data.doctorLogOut);\n  //       sessionStorage.removeItem(\"token\");\n  //       console.log(\"log out successfully\");\n  //     }\n  //   },\n  //   onError: (error) => {\n  //     console.log(error);\n  //     console.log(\"log out failed\");\n  //   },\n  // });\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  // const openDoctorLoginDialog = () => {\n  //   doctorLogInDialogRef.current?.hideError();\n  //   setIsDialogOpen(true);\n  // };\n  // const handleDoctorLogOut = () => {\n  //   logOut();\n  // };\n  const [isLogInErrorShown, setIsLogInErrorShown] = useState(false);\n  const handleDoctorLogIn = async (password: string) => {\n    if (doctor.userName) {\n      if (!password) {\n        doctorLogInDialogRef.current?.showError();\n        return;\n      }\n      try {\n        const logInResult = await logIn({\n          variables: {\n            input: {\n              userName: doctor.userName,\n              password,\n            },\n          },\n        });\n        if (logInResult.data && logInResult.data.doctorLogIn.userName) {\n          console.log(\"Second login succeeds.\");\n          history.push(\"/doctor\");\n        }\n      } catch {\n        setIsLogInErrorShown(true);\n      }\n    }\n  };\n  const hideErrorIndicator = () => {\n    setIsLogInErrorShown(false);\n  };\n  const goToPromptPage = () => {\n    history.push(\"/user/prompt\");\n  };\n  return (\n    <div className={classes.root}>\n      <div className={classes.header} />\n      {/* <Header handleDoctorLogOut={handleDoctorLogOut} doctor={doctor} /> */}\n      <div className={classes.logoContainer}>\n        <img src={logo} alt=\"中大医院\" className={classes.logo} />\n      </div>\n      <div className={classes.actionContainer}>\n        <div className={classes.seuText}>东南大学附属中大医院</div>\n        <div>心理健康评估系统</div>\n        <div className={classes.enterSystemButtonContainer}>\n          <Button\n            startIcon={<PlayArrowRoundedIcon />}\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={goToPromptPage}\n          >\n            进入系统\n          </Button>\n        </div>\n      </div>\n      {/* <Fab\n        variant=\"extended\"\n        className={classes.extendedIcon}\n        onClick={openDoctorLoginDialog}\n      >\n        <SupervisorAccountIcon />\n        医生端\n      </Fab> */}\n      {doctor.name && (\n        <DoctorLogInDialog\n          isDialogOpen={isDialogOpen}\n          setIsDialogOpen={setIsDialogOpen}\n          doctorName={doctor.name}\n          handleDoctorLogIn={handleDoctorLogIn}\n          hideErrorIndicator={hideErrorIndicator}\n          ref={doctorLogInDialogRef}\n        />\n      )}\n      <ErrorIndicator\n        showError={isLogInErrorShown}\n        setShowError={setIsLogInErrorShown}\n        errorMessage={\"密码不正确！\"}\n      />\n    </div>\n  );\n};\n","import { makeStyles, Theme, createStyles, Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport { ReturnToHomeHeader } from \"../../lib/components\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      background: \"#e3f2fd\",\n      height: \"100%\",\n      width: \"100%\",\n    },\n    titleWrapper: {\n      height: \"100%\",\n    },\n    title: {\n      fontSize: \"1.5rem\",\n      textAlign: \"center\",\n    },\n    promptTextContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      paddingTop: 50,\n      background: \"#e3f2fd\",\n    },\n    promptText: {\n      width: \"50%\",\n      minWidth: \"min(85%, 400px)\",\n      lineHeight: \"1.5rem\",\n    },\n    buttonContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      paddingTop: 50,\n      background: \"#e3f2fd\",\n      paddingBottom: 20,\n    },\n    titleContainer: {\n      minHeight: 75,\n      maxHeight: 290,\n      height: \"calc(100% - 610px)\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"flex-end\",\n      background: \"#e3f2fd\",\n    },\n  })\n);\nexport const PromptMessage = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <ReturnToHomeHeader />\n      <div className={classes.titleContainer}>\n        <div className={classes.title}>指导语</div>\n      </div>\n      <div className={classes.promptTextContainer}>\n        <div className={classes.promptText}>\n          在接下来大约20分钟的时间里您将进行一系列的量表评估，目的是对您的心理状况及个性特征进行评估，下面的问题并不存在所谓正确或者错误的答案，您只需要按照自己真实的状况完成就可以了。也许您会觉得自己并不完全如题目所描述的那样，这时候您可以根据选项选择最接近您的状况。请记住，这里并没有正确或错误，您只要如实回答问题就可以了。\n        </div>\n      </div>\n      <div className={classes.buttonContainer}>\n        <Link to=\"/user/login\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            endIcon={<NavigateNextIcon />}\n          >\n            下一步\n          </Button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import { gql } from \"@apollo/client\";\n\nexport const PATIENT_LOG_IN = gql`\n  mutation PatientLogIn($input: UserLoginInput) {\n    patientLogIn(input: $input) {\n      name\n      userName\n      education\n      jobStatus\n      gender\n      marriageStatus\n      age\n      didRequest\n    }\n  }\n`;\n","import {\n  makeStyles,\n  Theme,\n  createStyles,\n  Button,\n  TextField,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Snackbar,\n  Grid,\n} from \"@material-ui/core\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport { LoadingIndicator, ReturnToHomeHeader } from \"../../lib/components\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\nimport { QUERY_USER } from \"../../lib/graphql/queries/QueryUser\";\nimport {\n  QueryUser,\n  QueryUserVariables,\n} from \"../../lib/graphql/queries/QueryUser/__generated__/QueryUser\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport WcIcon from \"@material-ui/icons/Wc\";\nimport AccessibilityIcon from \"@material-ui/icons/Accessibility\";\nimport ChildCareIcon from \"@material-ui/icons/ChildCare\";\nimport SchoolIcon from \"@material-ui/icons/School\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport {\n  PatientLogIn,\n  PatientLogInVariables,\n} from \"../../lib/graphql/mutations/PatientLogIn/__generated__/PatientLogIn\";\nimport { Patient } from \"../../lib/type\";\nimport { PATIENT_LOG_IN } from \"../../lib/graphql/mutations/PatientLogIn\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      background: \"#e3f2fd\",\n      height: \"100%\",\n      width: \"100%\",\n    },\n    titleWrapper: {\n      height: \"100%\",\n    },\n    title: {\n      fontSize: \"1.5rem\",\n      textAlign: \"center\",\n    },\n    buttonContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      paddingTop: 50,\n      background: \"#e3f2fd\",\n      paddingBottom: 20,\n    },\n    titleContainer: {\n      minHeight: 75,\n      maxHeight: 290,\n      height: \"calc(100% - 630px)\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"flex-end\",\n      background: \"#e3f2fd\",\n    },\n    inputContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      paddingTop: 50,\n    },\n    personalInformationContainer: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      paddingTop: 20,\n      background: \"#e3f2fd\",\n    },\n    input: {\n      width: 250,\n      paddingTop: 5,\n      paddingBottom: 5,\n    },\n    actionsWrapper: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      background: \"#e3f2fd\",\n    },\n    actionsContainer: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      paddingTop: 50,\n      background: \"#e3f2fd\",\n      paddingBottom: 20,\n      width: 300,\n    },\n  })\n);\n\ninterface Props {\n  setPatient: (patient: Patient) => void;\n  patient: Patient;\n}\n\nfunction useQueryParams() {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport const PatientLogin = ({ setPatient, patient }: Props) => {\n  const queryParams = useQueryParams();\n  const initRef = useRef(() => {\n    const userName = queryParams.get(\"userName\");\n    if (userName) {\n      setUserName(userName);\n      handleNextButtonClick(userName);\n    }\n  });\n  useEffect(() => {\n    initRef.current();\n  }, []);\n  const handleKeyPress = (event: KeyboardEvent) => {\n    if (event.key === \"Enter\") {\n      if (isBasicInformationShown) {\n        handleLogInButtonClick();\n      } else {\n        handleNextButtonClick(undefined);\n      }\n    }\n  };\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyPress);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  });\n\n  const [patientLogIn] = useMutation<PatientLogIn, PatientLogInVariables>(\n    PATIENT_LOG_IN,\n    {\n      onCompleted: (data) => {\n        if (data && data.patientLogIn) {\n          setPatient(data.patientLogIn);\n        }\n      },\n    }\n  );\n  const classes = useStyles();\n  const [isUserNameValidated, setIsUserNameValidated] = useState(false);\n  const [isNameValidated, setIsNameValidated] = useState(false);\n  const [getQueryResult, { loading, data: userListData }] = useLazyQuery<\n    QueryUser,\n    QueryUserVariables\n  >(QUERY_USER, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      if (data.queryUser.total > 0) {\n        const userInfo = data.queryUser.users[0];\n        userInfo.name && setName(userInfo.name);\n        userInfo.gender && setGender(userInfo.gender);\n        userInfo.age && setAge(userInfo.age);\n        userInfo.education && setEducation(userInfo.education);\n        userInfo.jobStatus && setJobStatus(userInfo.jobStatus);\n        userInfo.marriageStatus && setMarriageStatus(userInfo.marriageStatus);\n        setShowLoadSuccess(true);\n      } else {\n        setName(\"\");\n        setGender(\"\");\n        setAge(\"\");\n        setEducation(\"\");\n        setJobStatus(\"\");\n        setMarriageStatus(\"\");\n      }\n    },\n  });\n  const [isBasicInformationShown, setIsBasicInformationShown] = useState(false);\n  const [userName, setUserName] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [education, setEducation] = useState(\"\");\n  const [jobStatus, setJobStatus] = useState(\"\");\n  const [marriageStatus, setMarriageStatus] = useState(\"\");\n  const onNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n  };\n  const onGenderChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setGender(e.target.value as string);\n  };\n  const onAgeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setAge(e.target.value);\n  };\n  const [showLoadSuccess, setShowLoadSuccess] = useState(false);\n  const handleCloseLoadSuccess = () => {\n    setShowLoadSuccess(false);\n  };\n  const handleUserNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserName(e.target.value);\n  };\n  const [showNameErrorMessage, setShowNameErrorMessage] = useState(false);\n  const handleCloseNameErrorMessage = () => {\n    setShowNameErrorMessage(false);\n  };\n  const onEducationChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setEducation(e.target.value as string);\n  };\n  const onMarriageStatusChange = (\n    e: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setMarriageStatus(e.target.value as string);\n  };\n  const onJobChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setJobStatus(e.target.value);\n  };\n  const handleNextButtonClick = async (\n    userNameFromQueryParams: string | undefined\n  ) => {\n    if (!isBasicInformationShown) {\n      if (userName || userNameFromQueryParams) {\n        await getQueryResult({\n          variables: {\n            userName: userNameFromQueryParams\n              ? userNameFromQueryParams\n              : userName,\n            limit: 1,\n            currentPageIndex: 0,\n          },\n        });\n        setIsBasicInformationShown(true);\n      } else {\n        // Show the userName cannot be empty error.\n        setIsUserNameValidated(true);\n      }\n    }\n  };\n  const handleCancel = () => {\n    setIsBasicInformationShown(false);\n  };\n  const history = useHistory();\n  const handleLogInButtonClick = async () => {\n    if (name) {\n      await patientLogIn({\n        variables: {\n          input: {\n            userName,\n            education,\n            name,\n            age: age !== \"\" ? Number(age) : undefined,\n            gender,\n            jobStatus,\n            marriageStatus,\n          },\n        },\n      });\n      history.push(\"/user/home\");\n    } else {\n      setIsNameValidated(true);\n      setShowNameErrorMessage(true);\n    }\n  };\n  return (\n    <div className={classes.root}>\n      <ReturnToHomeHeader />\n      {isBasicInformationShown ? (\n        loading ? (\n          <LoadingIndicator />\n        ) : (\n          <>\n            {userListData && userListData.queryUser.total > 0 ? (\n              <div className={classes.titleContainer}>\n                <div className={classes.title}>请核实您的个人信息</div>\n              </div>\n            ) : (\n              <div className={classes.titleContainer}>\n                <div className={classes.title}>请输入您的个人信息</div>\n              </div>\n            )}\n            <div className={classes.personalInformationContainer}>\n              <div>\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                  <Grid item>\n                    <AccountCircle />\n                  </Grid>\n                  <Grid item>\n                    <TextField\n                      label=\"姓名\"\n                      className={classes.input}\n                      required\n                      value={name}\n                      onChange={onNameChange}\n                      error={isNameValidated && !name ? true : false}\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n              <div>\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                  <Grid item>\n                    <WcIcon />\n                  </Grid>\n                  <Grid item>\n                    <FormControl size=\"small\" className={classes.input}>\n                      <InputLabel>性别</InputLabel>\n                      <Select\n                        color=\"primary\"\n                        label=\"性别\"\n                        onChange={onGenderChange}\n                        value={gender}\n                      >\n                        <MenuItem value=\"男\">男</MenuItem>\n                        <MenuItem value=\"女\">女</MenuItem>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </div>\n              <div>\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                  <Grid item>\n                    <AccessibilityIcon />\n                  </Grid>\n                  <Grid item>\n                    <TextField\n                      className={classes.input}\n                      color=\"primary\"\n                      label=\"年龄\"\n                      size=\"small\"\n                      type=\"number\"\n                      value={age}\n                      onChange={onAgeChange}\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n              <div>\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                  <Grid item>\n                    <ChildCareIcon />\n                  </Grid>\n                  <Grid item>\n                    <FormControl size=\"small\" className={classes.input}>\n                      <InputLabel>婚姻</InputLabel>\n                      <Select\n                        color=\"primary\"\n                        value={marriageStatus}\n                        onChange={onMarriageStatusChange}\n                      >\n                        <MenuItem value=\"已婚\">已婚</MenuItem>\n                        <MenuItem value=\"未婚\">未婚</MenuItem>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </div>\n              <div>\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                  <Grid item>\n                    <SchoolIcon />\n                  </Grid>\n                  <Grid item>\n                    <FormControl size=\"small\" className={classes.input}>\n                      <InputLabel>教育</InputLabel>\n                      <Select\n                        color=\"primary\"\n                        value={education}\n                        onChange={onEducationChange}\n                      >\n                        <MenuItem value=\"高中以下\">高中以下</MenuItem>\n                        <MenuItem value=\"大中专科\">大中专科</MenuItem>\n                        <MenuItem value=\"本科\">本科</MenuItem>\n                        <MenuItem value=\"硕士\">硕士</MenuItem>\n                        <MenuItem value=\"博士\">博士</MenuItem>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </div>\n              <div>\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                  <Grid item>\n                    <WorkIcon />\n                  </Grid>\n                  <Grid item>\n                    <TextField\n                      color=\"primary\"\n                      label=\"职业\"\n                      size=\"small\"\n                      className={classes.input}\n                      value={jobStatus}\n                      onChange={onJobChange}\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n            </div>\n          </>\n        )\n      ) : (\n        <>\n          <div className={classes.titleContainer}>\n            <div className={classes.title}>请输入您的门诊号</div>\n          </div>\n          <div className={classes.inputContainer}>\n            <TextField\n              label=\"门诊号\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <AssignmentIndIcon />\n                  </InputAdornment>\n                ),\n              }}\n              value={userName}\n              onChange={handleUserNameChange}\n              autoFocus\n              error={isUserNameValidated && !userName ? true : undefined}\n              helperText={\n                isUserNameValidated && !userName\n                  ? \"请输入您的门诊号\"\n                  : undefined\n              }\n            />\n          </div>\n        </>\n      )}\n      {isBasicInformationShown ? (\n        loading ? null : (\n          <div className={classes.actionsWrapper}>\n            <div className={classes.actionsContainer}>\n              <Button onClick={handleCancel}>取消</Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleLogInButtonClick}\n              >\n                确定\n              </Button>\n            </div>\n          </div>\n        )\n      ) : (\n        <div className={classes.buttonContainer}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            endIcon={<NavigateNextIcon />}\n            onClick={() => handleNextButtonClick(undefined)}\n          >\n            下一步\n          </Button>\n        </div>\n      )}\n      <Snackbar\n        open={showLoadSuccess}\n        autoHideDuration={6000}\n        onClose={handleCloseLoadSuccess}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n      >\n        <Alert\n          onClose={handleCloseLoadSuccess}\n          severity=\"success\"\n          variant=\"filled\"\n        >\n          成功载入您的个人信息\n        </Alert>\n      </Snackbar>\n      <Snackbar\n        open={showNameErrorMessage}\n        autoHideDuration={6000}\n        onClose={handleCloseNameErrorMessage}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n      >\n        <Alert\n          onClose={handleCloseNameErrorMessage}\n          severity=\"error\"\n          variant=\"filled\"\n        >\n          姓名为必填项！\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n","import { gql } from \"@apollo/client\";\n\nexport const CHECK_IF_DOCTOR_USER_NAME_UNIQUE = gql`\n  query CheckIfDoctorNameUnique($userName: String!) {\n    checkIfDoctorUserNameUnique(userName: $userName) {\n      result\n    }\n  }\n`;\n","import { Snackbar } from \"@material-ui/core\";\nimport React from \"react\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\ninterface Props {\n  showSuccess: boolean;\n  setShowSuccess: (showError: boolean) => void;\n  successMessage: string;\n}\n\nexport const SuccessIndicator = (props: Props) => {\n  const { showSuccess, setShowSuccess, successMessage } = props;\n  return (\n    <Snackbar\n      open={showSuccess}\n      onClose={() => setShowSuccess(false)}\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n    >\n      <MuiAlert\n        elevation={6}\n        variant=\"filled\"\n        severity=\"success\"\n        onClose={() => setShowSuccess(false)}\n      >\n        {successMessage}\n      </MuiAlert>\n    </Snackbar>\n  );\n};\n","import {\n  FetchResult,\n  MutationFunctionOptions,\n  QueryLazyOptions,\n} from \"@apollo/client\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions,\n  Button,\n  createStyles,\n  makeStyles,\n  Theme,\n  debounce,\n} from \"@material-ui/core\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { ErrorIndicator } from \"../../../../lib/components\";\nimport { SuccessIndicator } from \"../../../../lib/components/SuccessIndicator\";\nimport {\n  AddDoctor,\n  AddDoctorVariables,\n} from \"../../../../lib/graphql/mutations/AddDoctor/__generated__/AddDoctor\";\nimport {\n  CheckIfDoctorNameUnique,\n  CheckIfDoctorNameUniqueVariables,\n} from \"../../../../lib/graphql/queries/CheckIfDoctorNameUnique/__generated__/CheckIfDoctorNameUnique\";\n\ninterface Props {\n  isOpen: boolean;\n  closeDialog: () => void;\n  checkDoctorUserName: (\n    options: QueryLazyOptions<CheckIfDoctorNameUniqueVariables>\n  ) => void;\n  checkResult: CheckIfDoctorNameUnique | undefined;\n  addDoctor: (\n    options?: MutationFunctionOptions<AddDoctor, AddDoctorVariables>\n  ) => Promise<FetchResult<AddDoctor>>;\n  refetchListData: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    input: {\n      display: \"block\",\n      margin: 5,\n      paddingRight: 5,\n    },\n    inputContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n  })\n);\n\nexport const AddDoctorDialog = (props: Props) => {\n  const classes = useStyles();\n  const {\n    isOpen,\n    closeDialog,\n    checkDoctorUserName,\n    checkResult,\n    addDoctor,\n    refetchListData,\n  } = props;\n  const [userNameInput, setUserNameInput] = useState(\"\");\n  const [nameInput, setNameInput] = useState(\"\");\n  const [passwordInput, setPasswordInput] = useState(\"\");\n  const [secondPasswordInput, setSecondPasswordInput] = useState(\"\");\n  const [userNameDuplicate, setUserNameDubplicate] = useState(false);\n  const [isErrorShown, setIsErrorShown] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isSuccessShown, setIsSuccessShown] = useState(false);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debouncedCheckDoctorUserName = useCallback(\n    debounce(checkDoctorUserName, 300),\n    [checkDoctorUserName]\n  );\n  useEffect(() => {\n    setUserNameInput(\"\");\n    setNameInput(\"\");\n    setPasswordInput(\"\");\n    setSecondPasswordInput(\"\");\n    setUserNameDubplicate(false);\n    setIsSuccessShown(false);\n  }, [isOpen]);\n  useEffect(() => {\n    checkResult &&\n      setUserNameDubplicate(!checkResult.checkIfDoctorUserNameUnique.result);\n  }, [checkResult]);\n  const handleUserNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserNameInput(e.target.value);\n    setUserNameDubplicate(false);\n    debouncedCheckDoctorUserName({\n      variables: {\n        userName: e.target.value,\n      },\n    });\n  };\n  const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setNameInput(e.target.value);\n  };\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setPasswordInput(e.target.value);\n  };\n\n  const handleSecondPasswordInput = (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setSecondPasswordInput(e.target.value);\n  };\n\n  const handleAddButtonClick = async () => {\n    if (passwordInput !== secondPasswordInput) {\n      setErrorMessage(\"两次输入的密码不相同！\");\n      setIsErrorShown(true);\n      return;\n    }\n    const result = await addDoctor({\n      variables: {\n        input: {\n          userName: userNameInput,\n          name: nameInput,\n          password: passwordInput,\n        },\n      },\n    });\n    if (result.data?.addDoctor.result) {\n      closeDialog();\n      refetchListData();\n      setIsSuccessShown(true);\n    }\n  };\n  return (\n    <>\n      <Dialog\n        open={isOpen}\n        onClose={closeDialog}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">添加医生</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            请输入医生的用户名、姓名和密码。\n          </DialogContentText>\n          <TextField\n            autoFocus\n            label=\"用户名\"\n            className={classes.input}\n            fullWidth\n            required\n            value={userNameInput}\n            onChange={handleUserNameChange}\n            error={userNameDuplicate || undefined}\n            helperText={userNameDuplicate ? \"此用户名已经被注册！\" : undefined}\n          />\n          <TextField\n            label=\"姓名\"\n            className={classes.input}\n            fullWidth\n            required\n            value={nameInput}\n            onChange={handleNameChange}\n          />\n          <TextField\n            label=\"密码\"\n            className={classes.input}\n            fullWidth\n            required\n            type=\"password\"\n            value={passwordInput}\n            onChange={handlePasswordChange}\n          />\n          <TextField\n            label=\"确认密码\"\n            className={classes.input}\n            fullWidth\n            required\n            type=\"password\"\n            value={secondPasswordInput}\n            onChange={handleSecondPasswordInput}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog}>取消</Button>\n          <Button\n            onClick={handleAddButtonClick}\n            color=\"primary\"\n            disabled={\n              userNameDuplicate ||\n              !nameInput ||\n              !userNameInput ||\n              !passwordInput ||\n              !secondPasswordInput\n                ? true\n                : undefined\n            }\n          >\n            添加\n          </Button>\n        </DialogActions>\n        <ErrorIndicator\n          showError={isErrorShown}\n          setShowError={setIsErrorShown}\n          errorMessage={errorMessage}\n        />\n      </Dialog>\n      <SuccessIndicator\n        showSuccess={isSuccessShown}\n        setShowSuccess={setIsSuccessShown}\n        successMessage=\"成功创建账号\"\n      />\n    </>\n  );\n};\n","import { useLazyQuery, useMutation, useQuery } from \"@apollo/client\";\nimport {\n  Avatar,\n  Button,\n  createStyles,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles,\n  Paper,\n  Theme,\n} from \"@material-ui/core\";\nimport { Pagination } from \"@material-ui/lab\";\nimport React, { useState } from \"react\";\nimport { LoadingIndicator } from \"../../lib/components\";\nimport { ADD_DOCTOR } from \"../../lib/graphql/mutations/AddDoctor\";\nimport {\n  AddDoctor,\n  AddDoctorVariables,\n} from \"../../lib/graphql/mutations/AddDoctor/__generated__/AddDoctor\";\nimport { DOCTOR_LIST } from \"../../lib/graphql/queries\";\nimport { CHECK_IF_DOCTOR_USER_NAME_UNIQUE } from \"../../lib/graphql/queries/CheckIfDoctorNameUnique\";\nimport {\n  CheckIfDoctorNameUnique,\n  CheckIfDoctorNameUniqueVariables,\n} from \"../../lib/graphql/queries/CheckIfDoctorNameUnique/__generated__/CheckIfDoctorNameUnique\";\nimport {\n  DoctorList,\n  DoctorListVariables,\n} from \"../../lib/graphql/queries/DoctorList/__generated__/DoctorList\";\nimport { Header } from \"../PatientInformation/components\";\nimport { AddDoctorDialog } from \"./components\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport { blue } from \"@material-ui/core/colors\";\n\nconst DEFAULT_LIMIT = 5;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    list: {\n      margin: \"20px 10px\",\n    },\n    actionContainer: {\n      margin: 10,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n    },\n    paginationContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    totalNumberText: {\n      marginRight: 5,\n    },\n    avatar: {\n      backgroundColor: blue[100],\n      color: blue[600],\n    },\n  })\n);\nexport const CreateDoctor = () => {\n  const classes = useStyles();\n  const { loading, data, refetch } = useQuery<DoctorList, DoctorListVariables>(\n    DOCTOR_LIST,\n    {\n      variables: {\n        limit: DEFAULT_LIMIT,\n        currentPageIndex: 0,\n      },\n      fetchPolicy: \"network-only\",\n    }\n  );\n  const [checkDoctorName, { data: checkNameData }] = useLazyQuery<\n    CheckIfDoctorNameUnique,\n    CheckIfDoctorNameUniqueVariables\n  >(CHECK_IF_DOCTOR_USER_NAME_UNIQUE, {\n    fetchPolicy: \"no-cache\",\n  });\n  const [addDoctor] = useMutation<AddDoctor, AddDoctorVariables>(ADD_DOCTOR);\n  const [currentPageIndex, setCurrentPageIndex] = useState(0);\n  const [isAddDoctorDialogOpen, setIsAddDoctorDialogOpen] = useState(false);\n  const closeDialog = () => {\n    setIsAddDoctorDialogOpen(false);\n  };\n  const openDialog = () => {\n    setIsAddDoctorDialogOpen(true);\n  };\n  const handlePaginationChange = (\n    _event: React.ChangeEvent<unknown>,\n    pageIndex: number\n  ) => {\n    setCurrentPageIndex(pageIndex - 1);\n    refetch({ limit: DEFAULT_LIMIT, currentPageIndex: pageIndex - 1 });\n  };\n  const refetchListData = () => {\n    refetch({ limit: DEFAULT_LIMIT, currentPageIndex });\n  };\n  if (loading || !data) {\n    return <LoadingIndicator />;\n  }\n  return (\n    <>\n      <Header text={\"医生账号信息\"} />\n      <div className={classes.actionContainer}>\n        <Button variant=\"contained\" color=\"primary\" onClick={openDialog}>\n          添加医生\n        </Button>\n        <div className={classes.paginationContainer}>\n          <span className={classes.totalNumberText}>\n            共计{data.doctorList.total}个账号\n          </span>\n          <Pagination\n            count={Math.ceil(data.doctorList.total / DEFAULT_LIMIT)}\n            variant=\"outlined\"\n            color=\"primary\"\n            page={currentPageIndex + 1}\n            onChange={handlePaginationChange}\n          />\n        </div>\n      </div>\n      <List component={Paper} className={classes.list}>\n        {data.doctorList.admins.map((admin, index) => (\n          <React.Fragment key={admin.userName}>\n            <ListItem alignItems=\"flex-start\" key={admin.userName}>\n              <ListItemAvatar>\n                <Avatar className={classes.avatar}>\n                  <PersonIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                primary={`账号名：${admin.userName}`}\n                secondary={`姓名：${admin.name}`}\n              />\n            </ListItem>\n            {index !== data.doctorList.admins.length - 1 && <Divider />}\n          </React.Fragment>\n        ))}\n      </List>\n      <AddDoctorDialog\n        isOpen={isAddDoctorDialogOpen}\n        closeDialog={closeDialog}\n        checkDoctorUserName={checkDoctorName}\n        checkResult={checkNameData}\n        addDoctor={addDoctor}\n        refetchListData={refetchListData}\n      />\n    </>\n  );\n};\n","import \"@fontsource/noto-sans-sc/400.css\";\nimport {\n  ApolloClient,\n  ApolloProvider,\n  InMemoryCache,\n  useMutation,\n} from \"@apollo/client\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { DOCTOR_LOG_IN } from \"./lib/graphql/mutations\";\nimport { Doctor, Patient, Viewer } from \"./lib/type\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport {\n  AppHeader,\n  Sider,\n  Home,\n  Login,\n  Form,\n  Report,\n  PatientInformation,\n  Welcome,\n  PromptMessage,\n  PatientLogin,\n  CreateDoctor,\n} from \"./sections\";\nimport {\n  createMuiTheme,\n  createStyles,\n  makeStyles,\n  Theme,\n  ThemeProvider,\n  Toolbar,\n} from \"@material-ui/core\";\nimport { PrivateRoute } from \"./lib/components/PrivateRoute\";\nimport { LoadingIndicator } from \"./lib/components\";\nimport { zhCN } from \"@material-ui/core/locale\";\nimport {\n  DoctorLogIn,\n  DoctorLogInVariables,\n} from \"./lib/graphql/mutations/DoctorLogIn/__generated__/DoctorLogIn\";\nimport {\n  PatientLogIn,\n  PatientLogInVariables,\n} from \"./lib/graphql/mutations/PatientLogIn/__generated__/PatientLogIn\";\nimport { PATIENT_LOG_IN } from \"./lib/graphql/mutations/PatientLogIn\";\n\nconst client = new ApolloClient({\n  uri: \"/api\",\n  cache: new InMemoryCache(),\n  headers: { \"X-CSRF_TOKEN\": sessionStorage.getItem(\"token\") || \"\" },\n});\n\nconst initialViewer: Viewer = {\n  userName: null,\n  token: null,\n  didRequest: false,\n  catelogy: null,\n};\n\nconst initialDoctor: Doctor = {\n  name: null,\n  userName: null,\n  didRequest: false,\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      height: \"100%\",\n    },\n    contentContainer: {\n      flexGrow: 1,\n      height: \"100%\",\n    },\n  })\n);\n\nconst App = () => {\n  const classes = useStyles();\n\n  // const [viewer, setViewer] = useState<Viewer>(initialViewer);\n  const [doctor, setDoctor] = useState<Doctor>(initialDoctor);\n  const [patient, setPatient] = useState<Patient>(initialViewer);\n  // const [logIn] = useMutation<LogInData, LogInVariables>(LOG_IN, {\n  //   onCompleted: (data) => {\n  //     if (data && data.logIn) {\n  //       setViewer(data.logIn);\n  //       if (data.logIn.token) {\n  //         sessionStorage.setItem(\"token\", data.logIn.token);\n  //       } else {\n  //         sessionStorage.removeItem(\"token\");\n  //       }\n  //     }\n  //   },\n  // });\n\n  // const logInRef = useRef(logIn);\n  const [doctorLogIn, { loading: doctorLogInLoading }] = useMutation<\n    DoctorLogIn,\n    DoctorLogInVariables\n  >(DOCTOR_LOG_IN, {\n    onCompleted: (data) => {\n      if (data && data.doctorLogIn) {\n        const { name, userName, didRequest } = data.doctorLogIn;\n        setDoctor({\n          name,\n          userName,\n          didRequest,\n        });\n      }\n    },\n  });\n  const doctorLogInRef = useRef(doctorLogIn);\n\n  const [patientLogIn, { loading: patientLogInLoading }] = useMutation<\n    PatientLogIn,\n    PatientLogInVariables\n  >(PATIENT_LOG_IN, {\n    onCompleted: (data) => {\n      if (data && data.patientLogIn) {\n        setPatient(data.patientLogIn);\n      }\n    },\n  });\n\n  const patientLogInRef = useRef(patientLogIn);\n  useEffect(() => {\n    doctorLogInRef.current();\n    // logInRef.current();\n    patientLogInRef.current();\n  }, []);\n  if (\n    doctorLogInLoading ||\n    !doctor.didRequest ||\n    patientLogInLoading ||\n    !patient.didRequest\n  ) {\n    return <LoadingIndicator />;\n  }\n  const isAuthorized = !!doctor.userName;\n  return (\n    <Router>\n      {/** App Header */}\n      <Switch>\n        <Route exact path=\"/\" />\n        <Route exact path=\"/user/prompt\" />\n        <Route exact path=\"/user/login\" />\n        <Route path=\"/user/home\" />\n        <Route path=\"/doctor\">\n          <AppHeader viewer={doctor} setViewer={setDoctor} type=\"doctor\" />\n          <Switch>\n            <Route exact path=\"/\" />\n          </Switch>\n        </Route>\n      </Switch>\n\n      <Switch>\n        <Route exact path=\"/login\">\n          <Login\n            isAuthorized={isAuthorized}\n            setViewer={setDoctor}\n            setDoctor={setDoctor}\n            doctor={doctor}\n          />\n        </Route>\n        <Route\n          exact\n          path=\"/doctor\"\n          render={({ location }) => (\n            <Redirect to={{ pathname: \"/login\", state: { from: location } }} />\n          )}\n        />\n\n        <PrivateRoute isAuthorized={isAuthorized} path=\"/user\" exact>\n          <Welcome\n            setDoctor={setDoctor}\n            doctor={doctor}\n            logIn={doctorLogInRef.current}\n          />\n        </PrivateRoute>\n        <PrivateRoute isAuthorized={isAuthorized} path=\"/user/prompt\" exact>\n          <PromptMessage />\n        </PrivateRoute>\n        <PrivateRoute isAuthorized={isAuthorized} path=\"/user/login\" exact>\n          <PatientLogin setPatient={setPatient} patient={patient} />\n        </PrivateRoute>\n        {doctor.userName && (\n          <PrivateRoute\n            isAuthorized={isAuthorized}\n            path={`/doctor/${doctor.userName}`}\n          >\n            <div className={classes.root}>\n              <Sider viewer={doctor} type=\"doctor\" />\n              <div className={classes.contentContainer}>\n                <Toolbar />\n                <Switch>\n                  <Route\n                    exact\n                    path={`/doctor/${doctor.userName}`}\n                    component={PatientInformation}\n                  />\n                  <Route\n                    exact\n                    path={`/doctor/${doctor.userName}/manage`}\n                    component={CreateDoctor}\n                  />\n                </Switch>\n              </div>\n            </div>\n          </PrivateRoute>\n        )}\n        {patient.userName && (\n          <PrivateRoute isAuthorized={isAuthorized} path=\"/user\">\n            <AppHeader viewer={patient} setViewer={setPatient} type=\"user\" />\n            <Switch>\n              <PrivateRoute isAuthorized={isAuthorized} path=\"/user/form\" exact>\n                <Form />\n              </PrivateRoute>\n\n              <PrivateRoute isAuthorized={isAuthorized} path=\"/user\">\n                <div className={classes.root}>\n                  <Sider viewer={patient} type=\"user\" />\n                  <div className={classes.contentContainer}>\n                    <Toolbar />\n                    <Switch>\n                      <Route exact path=\"/user/home\">\n                        <Home patient={patient} />\n                      </Route>\n                      <Route exact path=\"/user/report\" component={Report} />\n                    </Switch>\n                  </div>\n                </div>\n              </PrivateRoute>\n            </Switch>\n          </PrivateRoute>\n        )}\n        <PrivateRoute isAuthorized={isAuthorized} path=\"/user\">\n          <></>\n        </PrivateRoute>\n        <PrivateRoute isAuthorized={isAuthorized} path=\"/doctor\">\n          <></>\n        </PrivateRoute>\n        <Route exact path=\"/\">\n          <Redirect to=\"/user\" />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nconst theme = createMuiTheme(undefined, zhCN);\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}